openapi: 3.0.4
info:
  contact:
    name: ' '
  description: The undocumented public API v4 for the Hack The Box platform. This OpenAPI specification is community-maintained and reverse-engineered. This project  is not affiliated with or endorsed by HTB.
  license:
    name: The Unlicense
    url: https://unlicense.org/
  title: HTB Unofficial API v4
  version: v0.3.3
servers:
  - description: HTB API
    url: https://labs.hackthebox.com/api/v4
security:
  - bearer: []
tags:
  - description: Endpoints related to platform badges
    name: Badges
  - description: Endpoints related to Careers
    name: Career
  - description: Endpoints related to Challenges
    name: Challenges
  - description: Endpoints related to VPN connections
    name: Connection
  - description: Endpoints related to Fortresses
    name: Fortresses
  - description: Endpoints related to the Home page banner
    name: Home
  - description: Endpoints related to Machines
    name: Machines
  - description: Endpoints related to the platform (General)
    name: Platform
  - description: Endpoints related to ProLabs
    name: Prolabs
  - description: Endpoints related to PwnBox
    name: PwnBox
  - description: Endpoints related to Rankings
    name: Ranking
  - description: Product reviews
    name: Review
  - description: Endpoints related to Seasons/Arenas
    name: Season
  - description: Endpoints related to Sherlocks
    name: Sherlocks
  - description: Endpoints related to Starting Point
    name: Starting Point
  - description: Endpoints related to Team Rankings
    name: Team
  - description: Endpoints related to Tracks
    name: Tracks
  - description: Endpoints related to University Rankings
    name: Universities
  - description: Endpoints related to User Profiles
    name: User
  - description: Endpoints related to spawning VMs for Machines and Starting Point
    name: VM
paths:
  /access/ovpnfile/{vpnId}/0:
    get:
      description: Fetches the UDP OpenVPN configuration file for the specified VPN ID, allowing the user to establish a VPN connection
      operationId: getAccessOvpnfileVpnIdUDP
      parameters:
        - $ref: '#/components/parameters/VpnId'
      responses:
        '200':
          $ref: '#/components/responses/AccessOvpnfileVpnId0Response'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Download UDP VPN config
      tags:
        - Connection
  /access/ovpnfile/{vpnId}/0/1:
    get:
      description: Fetches the TCP OpenVPN configuration file for the specified VPN ID, allowing the user to establish a VPN connection
      operationId: getAccessOvpnfileVpnIdTCP
      parameters:
        - $ref: '#/components/parameters/VpnId'
      responses:
        '200':
          $ref: '#/components/responses/AccessOvpnfileVpnId0Response'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Download TCP VPN config
      tags:
        - Connection
  /announcements:
    get:
      description: Get Announcements
      operationId: getAnnouncements
      responses:
        '200':
          $ref: '#/components/responses/AnnouncementResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Announcements
      tags:
        - Platform
  /arena/own:
    post:
      description: Submit Seasonal Flag - MUST USE THIS TO GET POINTS FOR SEASON
      operationId: postArenaOwn
      requestBody:
        $ref: '#/components/requestBodies/ArenaOwnRequest'
      responses:
        '200':
          $ref: '#/components/responses/MultiOwnResponse'
        '400':
          $ref: '#/components/responses/Generic400Error'
        '500':
          $ref: '#/components/responses/ArenaOwnErrorResponse'
      summary: 'IMPORTANT: MUST USE FOR ACTIVE SEASON POINTS'
      tags:
        - Season
  /badges:
    get:
      description: Returns a list of all available and obtained badges
      operationId: getBadges
      responses:
        '200':
          $ref: '#/components/responses/BadgesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: List all platform badges
      tags:
        - Badges
  /career/companies:
    get:
      description: Get /career/companies
      operationId: getCareerCompanies
      responses:
        '200':
          $ref: '#/components/responses/CareerCompaniesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of companies
      tags:
        - Career
  /career/company/{companyId}:
    get:
      description: Get company detail
      operationId: getCareerCompany
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/CompanyId'
      responses:
        '200':
          $ref: '#/components/responses/CareerCompanyResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Company Detail
      tags:
        - Career
  /career/featured:
    get:
      description: Returns a list of featured jobs
      operationId: getCareerFeatured
      responses:
        '200':
          $ref: '#/components/responses/CareerFeaturedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Featured jobs
      tags:
        - Career
  /career/history:
    get:
      description: Returns a list of all jobs that the user has applied for
      operationId: getCareerHistory
      responses:
        '200':
          $ref: '#/components/responses/CareerHistoryResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: History of applied jobs
      tags:
        - Career
  /career/info/{jobId}:
    get:
      description: Get career info
      operationId: getCareerInfo
      parameters:
        - $ref: '#/components/parameters/JobId'
      responses:
        '200':
          $ref: '#/components/responses/CareerInfoResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Job Description
      tags:
        - Career
  /career/profile:
    get:
      description: Returns a list of profile information related to the user's career settings
      operationId: getCareerProfile
      responses:
        '200':
          $ref: '#/components/responses/CareerProfileResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Career profile
      tags:
        - Career
  /career/requests:
    get:
      description: Get /career/requests
      operationId: getCareerRequests
      parameters:
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/CareerRequestsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Career Requests
      tags:
        - Career
  /career/search:
    get:
      description: Returns a list of all jobs that match the search query
      operationId: getCareerSearch
      parameters:
        - $ref: '#/components/parameters/SearchQuery'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/AfterDate'
        - $ref: '#/components/parameters/Rank'
      responses:
        '200':
          $ref: '#/components/responses/CareerSearchResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Search posted jobs
      tags:
        - Career
  /career/stats:
    get:
      description: Returns a number of new jobs posted today and the total number of jobs posted on the platform
      operationId: getCareerStats
      responses:
        '200':
          $ref: '#/components/responses/CareerStatsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Stats
      tags:
        - Career
  /career/temporary/contact/optin:
    post:
      description: This is the toggle in the career page to allow companies to reach out to you
      operationId: postCareerTemporaryContactOptin
      requestBody:
        content:
          application/json:
            schema:
              properties:
                opt_in:
                  type: boolean
              type: object
      responses:
        '204':
          description: No Content
          headers:
            x-ratelimit-limit:
              $ref: '#/components/headers/XRateLimitHeader'
            x-ratelimit-remaining:
              $ref: '#/components/headers/XRateLimitRemainingHeader'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Optin to Career Contacting
      tags:
        - Career
  /challenge/activity/{challengeId}:
    get:
      description: Provides a list of users that have completed the challenge
      operationId: getChallengeActivity
      parameters:
        - $ref: '#/components/parameters/ChallengeId'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeActivityResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: List of owns related to a specific challenge
      tags:
        - Challenges
  /challenge/categories/list:
    get:
      description: Provides a list of challenge catatories
      operationId: getChallengeCategoriesList
      responses:
        '200':
          $ref: '#/components/responses/ChallengeCategoriesListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: List categories
      tags:
        - Challenges
  /challenge/changelog/{challengeId}:
    get:
      description: Provides change details to a challenge
      operationId: getChallengeChangelog
      parameters:
        - $ref: '#/components/parameters/ChallengeId'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeChangelogChallengeIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Changelog for a specific challenge
      tags:
        - Challenges
  /challenge/download/{challengeId}:
    get:
      description: Returns a zip file
      operationId: getChallengeDownload
      parameters:
        - $ref: '#/components/parameters/ChallengeId'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeDownloadChallengeIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Download zip file related to a specific challenge
      tags:
        - Challenges
  /challenge/info/{challengeSlug}:
    get:
      description: Provides a list of the challege details by id or name
      operationId: getChallengeInfo
      parameters:
        - $ref: '#/components/parameters/ChallengeSlug'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeInfoChallengeResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Info details of the specific challenge
      tags:
        - Challenges
  /challenge/own:
    post:
      description: Submit flag for Challenge
      operationId: postChallengeOwn
      requestBody:
        $ref: '#/components/requestBodies/ChallengeOwnRequest'
      responses:
        '200':
          $ref: '#/components/responses/OwnResponse'
        '400':
          $ref: '#/components/responses/MachineOwn400'
      summary: Submit flag for Challenge
      tags:
        - Challenges
  /challenge/recommended:
    get:
      description: Provides information about a unreleased challenge along with a challenge that is about to retire
      operationId: getChallengeRecommended
      responses:
        '200':
          $ref: '#/components/responses/ChallengeRecommendedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Challenge Recommendation Cards
      tags:
        - Challenges
  /challenge/recommended/retired:
    get:
      description: Provides information about two retired challenges
      operationId: getChallengeRecommendedRetired
      responses:
        '200':
          $ref: '#/components/responses/ChallengeRecommendedRetiredResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Challenge Recommendation Cards (Retired)
      tags:
        - Challenges
  /challenge/review:
    post:
      description: Submits data for /challenge/review
      operationId: postChallengeReview
      requestBody:
        $ref: '#/components/requestBodies/ChallengeReviewRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Submit challenge review
      tags:
        - Challenges
  /challenge/review/helpful/{reviewId}:
    post:
      description: Submits data for /challenge/review/helpful/{review id}
      operationId: postChallengeHelpfull
      parameters:
        - $ref: '#/components/parameters/ReviewId'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Mark Review as helpful
      tags:
        - Challenges
  /challenge/reviews/user/{challengeId}:
    get:
      description: Retrieves information related to /challenge/reviews/user/{challenge id}
      operationId: getChallengeReviewsUser
      parameters:
        - $ref: '#/components/parameters/ChallengeId'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeReviewsUserChallengeIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Bearer's review for challenge
      tags:
        - Challenges
  /challenge/start:
    post:
      description: Starts a challenge container with challenge_id
      operationId: postChallengeStart
      requestBody:
        $ref: '#/components/requestBodies/ChallengeStartStopRequest'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeStartResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Starts a challenge
      tags:
        - Challenges
  /challenge/stop:
    post:
      description: Stops a challenge container with challenge_id
      operationId: postChallengeStop
      requestBody:
        $ref: '#/components/requestBodies/ChallengeStartStopRequest'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeStopResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Stops a challenge
      tags:
        - Challenges
  /challenge/suggested:
    get:
      description: Retrieves information related to /challenge/suggested
      operationId: getChallengeSuggested
      responses:
        '200':
          $ref: '#/components/responses/ChallengeSuggestedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: challenge Suggestion
      tags:
        - Challenges
  /challenge/{challengeId}/writeup:
    get:
      description: Gets a write-up for a challenge from challenge id
      operationId: getChallengeWriteup
      parameters:
        - $ref: '#/components/parameters/ChallengeId'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeWriteupResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get a write-up for a challenge
      tags:
        - Challenges
  /challenge/{challengeId}/writeup/official:
    get:
      description: Get Official Writeup
      operationId: getChallengeWriteupOfficial
      parameters:
        - $ref: '#/components/parameters/ChallengeId'
      responses:
        '200':
          $ref: '#/components/responses/GenericPDFResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Official PDF Writeup
      tags:
        - Challenges
  /challenges:
    get:
      description: Porivdes a list of challenges with limited challenge info
      operationId: getChallenges
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Status'
        - $ref: '#/components/parameters/State'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortType'
        - $ref: '#/components/parameters/Difficulty'
        - $ref: '#/components/parameters/Category'
        - $ref: '#/components/parameters/Todo'
      responses:
        '200':
          $ref: '#/components/responses/ChallengeListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of challenges
      tags:
        - Challenges
  /changelogs:
    get:
      description: Possibly depreciated, no updates since 2021
      operationId: getChangelogs
      responses:
        '200':
          $ref: '#/components/responses/ChangelogsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Dashboard: Interface changelog'
      tags:
        - Platform
  /connection/status:
    get:
      description: Retrieve the connection status.
      operationId: getConnectionStatus
      responses:
        '200':
          $ref: '#/components/responses/ConnectionStatusResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Current Active Connections
      tags:
        - Connection
  /connection/status/prolab/{prolabId}:
    get:
      description: Get VPN Server status
      operationId: getConnectionStatusProlab
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ConnectionStatusProductResponse'
        '400':
          $ref: '#/components/responses/Generic400Error'
      summary: Get VPN Server status
      tags:
        - Connection
  /connection/status/{productName}:
    get:
      description: Get VPN Server status
      operationId: getConnectionStatusProductname
      parameters:
        - $ref: '#/components/parameters/ProductName'
      responses:
        '200':
          $ref: '#/components/responses/ConnectionStatusProductResponse'
        '400':
          $ref: '#/components/responses/Generic400Error'
      summary: Get VPN Server status
      tags:
        - Connection
  /connections:
    get:
      description: Shows a list of the last set vpn servers
      operationId: getConnections
      responses:
        '200':
          $ref: '#/components/responses/ConnectionsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Last set connections
      tags:
        - Connection
  /connections/servers:
    get:
      description: Retrieve a list of connection servers.
      operationId: getConnectionsServers
      parameters:
        - $ref: '#/components/parameters/Product'
      responses:
        '200':
          $ref: '#/components/responses/ConnectionsServersResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: list VPN servers
      tags:
        - Connection
  /connections/servers/prolab/{prolabId}:
    get:
      description: Get Prolab VPN Servers
      operationId: getConnectionsServersProlab
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ConnectionsServersProlabResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Prolab VPN Servers
      tags:
        - Connection
  /connections/servers/switch/{vpnId}:
    post:
      description: See `/v4/connections/servers` for valid ids
      operationId: postConnectionsServersSwitch
      parameters:
        - $ref: '#/components/parameters/VpnId'
      responses:
        '200':
          $ref: '#/components/responses/ConnectionsServersSwitchVpnIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Swtich VPN server
      tags:
        - Connection
  /content/stats:
    get:
      description: Retrieves information related to /content/stats
      operationId: getContentStats
      responses:
        '200':
          $ref: '#/components/responses/ContentStatsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Dashboard: machine, challenge Counts'
      tags:
        - Platform
  /fortress/{fortressId}:
    get:
      description: Retrieves information related to /fortress/{fortress id}
      operationId: getFortress
      parameters:
        - $ref: '#/components/parameters/FortressId'
      responses:
        '200':
          $ref: '#/components/responses/FortressFortressIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get fortress profile
      tags:
        - Fortresses
  /fortress/{fortressId}/flag:
    post:
      description: Submit flag
      operationId: postFortressFlag
      parameters:
        - $ref: '#/components/parameters/FortressId'
      requestBody:
        $ref: '#/components/requestBodies/MultiOwnRequest'
      responses:
        '200':
          $ref: '#/components/responses/MultiOwnResponse'
        '400':
          $ref: '#/components/responses/MultiOwn400'
      summary: Submit flag
      tags:
        - Fortresses
  /fortress/{fortressId}/flags:
    get:
      description: Retrieve flags for a specific fortress.
      operationId: getFortressFlags
      parameters:
        - $ref: '#/components/parameters/FortressId'
      responses:
        '200':
          $ref: '#/components/responses/ProductFlagsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of flags
      tags:
        - Fortresses
  /fortress/{fortressId}/reset:
    post:
      description: Vote Reset Fortress
      operationId: postFortressReset
      parameters:
        - $ref: '#/components/parameters/FortressId'
      responses:
        '200':
          $ref: '#/components/responses/GameResetResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Vote Reset Fortress
      tags:
        - Fortresses
  /fortresses:
    get:
      description: Retrieves information related to /fortresses
      operationId: getFortresses
      responses:
        '200':
          $ref: '#/components/responses/FortressesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of fortresses
      tags:
        - Fortresses
  /home/banners:
    get:
      description: Retrieves information related to /home/banners
      operationId: getHomeBanner
      responses:
        '200':
          $ref: '#/components/responses/HomeBannersResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Home Banner
      tags:
        - Home
  /home/recommended:
    get:
      description: Retrieves information related to /home/recommended
      operationId: getHomeRecommended
      responses:
        '200':
          $ref: '#/components/responses/HomeRecommendedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Home Recommended
      tags:
        - Home
  /home/user/progress:
    get:
      description: Retrieves information related to /home/user/progress
      operationId: getHomeUserProgress
      responses:
        '200':
          $ref: '#/components/responses/HomeUserProgressResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Home User Progress
      tags:
        - Home
  /home/user/todo:
    get:
      description: Retrieves information related to /home/user/todo
      operationId: getHomeUserTodo
      responses:
        '200':
          $ref: '#/components/responses/HomeUserTodoResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Home User ToDo
      tags:
        - Home
  /lab/list:
    get:
      description: Retrieves information related to /lab/list
      operationId: getLabList
      responses:
        '200':
          $ref: '#/components/responses/LabListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Dashboard: list HTB servers (Connection Points)'
      tags:
        - Platform
  /machine/active:
    get:
      description: Retrieves information related to /machine/active
      operationId: getMachineActive
      responses:
        '200':
          $ref: '#/components/responses/MachineActiveResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get active machine details
      tags:
        - Machines
  /machine/activity/{machineId}:
    get:
      description: Retrieves information related to /machine/activity/{machine id}
      operationId: getMachineActivity
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineActivityMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'machine: Activity'
      tags:
        - Machines
  /machine/changelog/{machineId}:
    get:
      description: Retrieves information related to /machine/changelog/{machine id}
      operationId: getMachineChangelog
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineChangelogMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'machine: changelog'
      tags:
        - Machines
  /machine/graph/activity/{machineId}/{period}:
    get:
      description: Retrieves information related to /machine/graph/activity/{machine id}/{period}
      operationId: getMachineGraphActivity
      parameters:
        - $ref: '#/components/parameters/MachineId'
        - $ref: '#/components/parameters/PeriodPath'
      responses:
        '200':
          $ref: '#/components/responses/MachineGraphActivityMachineIdPeriodResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Graph Data: Activity'
      tags:
        - Machines
  /machine/creators/{machineId}:
    get:
      description: Retrieves the creator(s) basic information for a machine
      operationId: getMachineCreators
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineCreatorResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Gets the creator(s) of a machine
      tags:
        - Machines
  /machine/graph/matrix/{machineId}:
    get:
      description: Retrieves graph matrix
      operationId: getMachineGraphMatrix
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineGraphMatrixMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Machine Graph Matrix
      tags:
        - Machines
  /machine/graph/owns/difficulty/{machineId}:
    get:
      description: Retrieves machine graph difficulty
      operationId: getMachineGraphOwnsDifficulty
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineGraphOwnsDifficultyMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Machine Graph Difficulty
      tags:
        - Machines
  /machine/list/retired/paginated:
    get:
      description: Retrieve a paginated list of retired machines.
      operationId: getMachineListRetiredPaginated
      parameters:
        - $ref: '#/components/parameters/Free'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ShowCompleted'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortType'
        - $ref: '#/components/parameters/Difficulty'
        - $ref: '#/components/parameters/Os'
        - $ref: '#/components/parameters/Tags'
        - $ref: '#/components/parameters/Keyword'
      responses:
        '200':
          $ref: '#/components/responses/MachinePaginatedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get paginated list of retired machines
      tags:
        - Machines
  /machine/own:
    post:
      description: Submit flag for Machine
      deprecated: true
      operationId: postMachineOwn
      requestBody:
        $ref: '#/components/requestBodies/OwnRequest'
      responses:
        '200':
          $ref: '#/components/responses/OwnResponse'
        '400':
          $ref: '#/components/responses/MachineOwn400'
      summary: See v5 api. Submit flag for Challenge or Machine
      tags:
        - Machines
  /machine/owns/top/{machineId}:
    get:
      description: Retrieves information related to /machine/owns/top/{machine id}
      operationId: getMachineOwnsTop
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineOwnsTopMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'machine: Top 25 Owners'
      tags:
        - Machines
  /machine/paginated:
    get:
      description: Retrieve a paginated list of machines.
      operationId: getMachinePaginated
      parameters:
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ShowCompleted'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortType'
        - $ref: '#/components/parameters/Difficulty'
        - $ref: '#/components/parameters/Os'
        - $ref: '#/components/parameters/Keyword'
      responses:
        '200':
          $ref: '#/components/responses/MachinePaginatedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
        '422':
          $ref: '#/components/responses/GenericError'
      summary: Get paginated list of active machines
      tags:
        - Machines
  /machine/profile/{machineSlug}:
    get:
      description: Retrieves profile information by id or name
      operationId: getMachineProfile
      parameters:
        - $ref: '#/components/parameters/MachineSlug'
      responses:
        '200':
          $ref: '#/components/responses/MachineProfileMachineResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get machine profile by id or name
      tags:
        - Machines
  /machine/recommended:
    get:
      description: Retrieves information related to /machine/recommended
      operationId: getMachineRecommended
      responses:
        '200':
          $ref: '#/components/responses/MachineRecommendedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get recommended machines
      tags:
        - Machines
  /machine/recommended/retired:
    get:
      description: Retrieves information related to /machine/recommended/retired
      operationId: getMachineRecommendedRetired
      responses:
        '200':
          $ref: '#/components/responses/MachineRecommendedRetiredResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: machine Recommendation Card (Retired)
      tags:
        - Machines
  /machine/review:
    post:
      description: Submit a review for a machine.
      operationId: postMachineReview
      requestBody:
        $ref: '#/components/requestBodies/MachineReviewRequest'
      responses:
        '200':
          $ref: '#/components/responses/MachineReviewResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: review a machine
      tags:
        - Machines
  /machine/reviews/user/{machineId}:
    get:
      description: Retrieves information related to /machine/reviews/user/{machine id}
      operationId: getMachineReviewsUser
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineReviewsUserMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Bearer's review for machine
      tags:
        - Machines
  /machine/reviews/{machineId}:
    get:
      deprecated: true
      description: Retrieves reviews for a machine
      operationId: getMachineReviews
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineReviewsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Use /reviews/{product}/{productId}/paginated
      tags:
        - Machines
  /machine/tags/list:
    get:
      description: Retrieve a list of machine tags.
      operationId: getMachineTagsList
      responses:
        '200':
          $ref: '#/components/responses/MachineTagsListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get machine tags list
      tags:
        - Machines
  /machine/tags/{machineId}:
    get:
      description: Retrieves information related to /machine/tags/{machine id}
      operationId: getMachineTags
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineTagsMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'machine: tags (Attack Path, Sub, Language)'
      tags:
        - Machines
  /machine/todo/paginated:
    get:
      description: Get /machine/todo/paginated
      operationId: getMachineTodoPaginated
      parameters:
        - $ref: '#/components/parameters/SortType'
        - $ref: '#/components/parameters/Keyword'
        - $ref: '#/components/parameters/Difficulty'
        - $ref: '#/components/parameters/ShowCompleted'
        - $ref: '#/components/parameters/Os'
      responses:
        '200':
          $ref: '#/components/responses/MachinePaginatedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Machine Todo List
      tags:
        - Machines
  /machine/unreleased:
    get:
      description: Retrieves information related to /machine/unreleased
      operationId: getMachineUnreleased
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Difficulty'
        - $ref: '#/components/parameters/Os'
        - $ref: '#/components/parameters/Keyword'
      responses:
        '200':
          $ref: '#/components/responses/MachineUnreleasedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: list Release-Scheduled machines
      tags:
        - Machines
  /machine/walkthrough/random:
    get:
      description: Get Rnadom Walkthrough
      operationId: getMachineWalkthroughRandom
      responses:
        '200':
          $ref: '#/components/responses/MachineWalkthroughRandomResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Random Walkthrough
      tags:
        - Machines
  /machine/walkthroughs/language/list:
    get:
      description: Retrieves information related to /machine/walkthroughs/language/list
      operationId: getMachineWalkthroughsLanguageList
      responses:
        '200':
          $ref: '#/components/responses/MachineWalkthroughsLanguageListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'machine: list Walkthrough Language options'
      tags:
        - Machines
  /machine/walkthroughs/official/feedback-choices:
    get:
      description: Retrieves Feedback Choices
      operationId: getMachineWalkthroughOfficialFeedbackChoices
      responses:
        '200':
          $ref: '#/components/responses/MachineWalkthroughOfficialFeedbackChoicesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Feedback Choices
      tags:
        - Machines
  /machine/walkthroughs/{machineId}:
    get:
      description: Retrieves information related to /machine/walkthroughs/{machine id}
      operationId: getMachineWalkthroughs
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineWalkthroughsMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'machine: list Walkthroughs'
      tags:
        - Machines
  /machine/writeup/{machineId}:
    get:
      description: _response is of a pdf file
      operationId: getMachineWriteup
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineWriteupMachineIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'machine: Get Official Writeup (if Available) by machine ID'
      tags:
        - Machines
  /machines/{machineId}/adventure:
    get:
      description: Get Machine Adventure
      operationId: getMachineAdventure
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachinesAdventureResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Machine Adventure
      tags:
        - Machines
  /machines/{machineId}/tasks:
    get:
      description: Get Machine Tasks
      operationId: getMachineTasks
      parameters:
        - $ref: '#/components/parameters/MachineId'
      responses:
        '200':
          $ref: '#/components/responses/MachineTasksResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Machine Tasks
      tags:
        - Machines
  /navigation/main:
    get:
      description: Retrieve main navigation details.
      operationId: getNavigationMain
      responses:
        '200':
          $ref: '#/components/responses/NavigationMainResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get platform navigation details
      tags:
        - Platform
  /notices:
    get:
      description: Retrieve notices.
      operationId: getNotices
      responses:
        '200':
          $ref: '#/components/responses/NoticesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get platform notices
      tags:
        - Platform
  /prolab/{prolabId}/changelogs:
    get:
      description: Get Prolab Changelog
      operationId: getProlabChangelogs
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      type: object
                    type: array
                  status:
                    type: boolean
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Changelogs
      tags:
        - Prolabs
  /prolab/{prolabId}/faq:
    get:
      description: Retrieves information related to /prolab/{prolab id}/faq
      operationId: getProlabFaq
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlabfaqResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Pro Lab FAQ
      tags:
        - Prolabs
  /prolab/{prolabId}/flag:
    post:
      description: Submit flag
      operationId: postProlabFlag
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      requestBody:
        $ref: '#/components/requestBodies/MultiOwnRequest'
      responses:
        '200':
          $ref: '#/components/responses/MultiOwnResponse'
        '400':
          $ref: '#/components/responses/MultiOwn400'
      summary: Submit flag
      tags:
        - Prolabs
  /prolab/{prolabId}/flags:
    get:
      description: Retrieve flags for a specific prolab.
      operationId: getProlabFlags
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProductFlagsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of flags
      tags:
        - Prolabs
  /prolab/{prolabId}/info:
    get:
      description: Retrieves information related to /prolab/{prolab id}/info
      operationId: getProlabInfo
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlabinfoResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Pro Lab Info
      tags:
        - Prolabs
  /prolab/{prolabId}/machines:
    get:
      description: Retrieves information related to /prolab/{prolab id}/machines
      operationId: getProlabMachines
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlabmachinesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Pro Lab machine list
      tags:
        - Prolabs
  /prolab/{prolabId}/overview:
    get:
      description: Retrieves information related to /prolab/{prolab id}/overview
      operationId: getProlabOverview
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlaboverviewResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Pro Lab Overview
      tags:
        - Prolabs
  /prolab/{prolabId}/progress:
    get:
      description: Get Prolab Progress
      operationId: getProlabProgress
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlabProgressResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Prolab Progress
      tags:
        - Prolabs
  /prolab/{prolabId}/rating:
    get:
      description: Get /prolab/{prolabId}/rating
      operationId: getProlabRating
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlabRatingResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Prolab Rating
      tags:
        - Prolabs
  /prolab/{prolabId}/reviews:
    get:
      description: Retrieves information related to /prolab/{prolab id}/reviews
      operationId: getProlabReviews
      parameters:
        - $ref: '#/components/parameters/ProlabId'
        - description: Page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/ProlabreviewsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Pro Lab reviews (Paginated)
      tags:
        - Prolabs
  /prolab/{prolabId}/reviews_overview:
    get:
      description: Retrieves information related to /prolab/{prolab id}/reviews overview
      operationId: getProlabReviewsOverview
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlabreviewsOverviewResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Pro Lab reviews Overview
      tags:
        - Prolabs
  /prolab/{prolabId}/subscription:
    get:
      description: Get Prolab Subscription
      operationId: getProlabSubscription
      parameters:
        - $ref: '#/components/parameters/ProlabId'
      responses:
        '200':
          $ref: '#/components/responses/ProlabSubscriptionResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Subscription
      tags:
        - Prolabs
  /prolabs:
    get:
      description: Retrieves information related to /prolabs
      operationId: getProlabs
      responses:
        '200':
          $ref: '#/components/responses/ProlabsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of Pro Labs
      tags:
        - Prolabs
  /pwnbox/start:
    post:
      description: Start a Pwnbox instance.
      operationId: postPwnboxStart
      requestBody:
        $ref: '#/components/requestBodies/PwnboxStartRequest'
      responses:
        '200':
          $ref: '#/components/responses/PwnboxStartResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Start a Pwnbox instance
      tags:
        - PwnBox
  /pwnbox/status:
    get:
      description: Retrieve the status of a Pwnbox instance.
      operationId: getPwnboxStatus
      responses:
        '200':
          $ref: '#/components/responses/PwnboxStatusResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get status of a Pwnbox instance.
      tags:
        - PwnBox
  /pwnbox/terminate:
    post:
      description: Terminate a Pwnbox instance.
      operationId: postPwnboxTerminate
      responses:
        '204':
          $ref: '#/components/responses/PwnboxTerminate204'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Stop Pwnbox
      tags:
        - PwnBox
  /pwnbox/usage:
    get:
      description: Retrieve usage statistics for Pwnbox.
      operationId: getPwnboxUsage
      responses:
        '200':
          $ref: '#/components/responses/PwnboxUsageResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get usage statistics for Pwnbox
      tags:
        - PwnBox
  /rankings:
    get:
      description: Get /rankings
      operationId: getRankings
      responses:
        '200':
          $ref: '#/components/responses/RankingsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Rankings
      tags:
        - Ranking
  /rankings/countries:
    get:
      description: Retrieves information related to /rankings/countries
      operationId: getRankingsCountries
      responses:
        '200':
          $ref: '#/components/responses/RankingsCountriesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Countries
      tags:
        - Ranking
  /rankings/country/best:
    get:
      description: Retrieves information related to /rankings/country/best
      operationId: getRankingsCountryBest
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
      responses:
        '200':
          $ref: '#/components/responses/RankingsCountryBestResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Country:  (Bearer''s) - Best for Period'
      tags:
        - Ranking
  /rankings/country/overview:
    get:
      description: Retrieves information related to /rankings/country/overview
      operationId: getRankingsCountryOverview
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
      responses:
        '200':
          $ref: '#/components/responses/RankingsCountryOverviewResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Country: (Bearer''s) - Overview'
      tags:
        - Ranking
  /rankings/country/ranking_bracket:
    get:
      description: Retrieves information related to /rankings/country/ranking bracket
      operationId: getRankingsCountryRankingBracket
      responses:
        '200':
          $ref: '#/components/responses/RankingsCountryRankingBracketResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Country: (Bearer''s) - Ranking Bracket'
      tags:
        - Ranking
  /rankings/country/{countryShortName}/members:
    get:
      description: Get Rankings Country Members
      operationId: getRankingsCountryUSMembers
      parameters:
        - description: Two letter short name for country, ie US, DE
          in: path
          name: countryShortName
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/RankingsCountryMembersResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Rankings Country Members
      tags:
        - Ranking
  /rankings/team/best:
    get:
      description: lists the best global rank achieved, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omiting team_id will retrieve Bearers current team.
      operationId: getRankingsTeamBest
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
      responses:
        '200':
          $ref: '#/components/responses/RankingsTeamBestResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Global Rank History for Bearer's team
      tags:
        - Ranking
  /rankings/team/best/{teamId}:
    get:
      description: lists the best global rank achieved, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omiting team_id will retrieve Bearers current team.
      operationId: getRankingsTeamBestId
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/RankingsTeamBestResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Global Rank History by Team Id
      tags:
        - Ranking
  /rankings/team/overview:
    get:
      description: lists the best global rank, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omit team_id for Bearers team.
      operationId: getRankingsTeamOverview
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
      responses:
        '200':
          $ref: '#/components/responses/RankingsTeamOverviewResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Global Points History for Bearer's team
      tags:
        - Ranking
  /rankings/team/overview/{teamId}:
    get:
      description: lists the best global rank, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omit team_id for Bearers team.
      operationId: getRankingsTeamOverviewId
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/RankingsTeamOverviewResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Global Points History by Team Id
      tags:
        - Ranking
  /rankings/team/ranking_bracket:
    get:
      description: lists the current team ranking bracket (e.g. "Top 20"), next ranking bracket, total points, points to achieve next bracket, and global rank. Omiting team_id will retrieve Bearers current team.
      operationId: getRankingsTeamRankingBracket
      responses:
        '200':
          $ref: '#/components/responses/RankingsTeamRankingBracketResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Team Ranking Bracket
      tags:
        - Ranking
  /rankings/team/ranking_bracket/{teamId}:
    get:
      description: lists the current team ranking bracket (e.g. "Top 20"), next ranking bracket, total points, points to achieve next bracket, and global rank. Omiting team_id will retrieve Bearers current team.
      operationId: getRankingsTeamRankingBracketId
      parameters:
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/RankingsTeamRankingBracketResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Team Ranking Bracket by Team Id
      tags:
        - Ranking
  /rankings/teams:
    get:
      description: lists the highest-ranked teams on HTB.
      operationId: getRankingsTeams
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/RankingsTeamsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: list Top-Ranked Teams
      tags:
        - Ranking
  /rankings/universities:
    get:
      description: Retrieves information related to /rankings/universities
      operationId: getRankingsUniversities
      responses:
        '200':
          $ref: '#/components/responses/RankingsUniversitiesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Universities
      tags:
        - Ranking
  /rankings/university/ranking_bracket/{universityId}:
    get:
      description: Get /rankings/university/ranking_bracket/{ranking_bracket-id}
      operationId: getRankingsUniversityRankingBracketId
      parameters:
        - $ref: '#/components/parameters/UniversityId'
      responses:
        '200':
          $ref: '#/components/responses/RankingsUniversityRankingBracketByIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Ranking Univeritiy Brakcet By Id
      tags:
        - Ranking
  /rankings/user/best:
    get:
      description: Get /rankings/user/best
      operationId: getRankingsUserBest
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
      responses:
        '200':
          $ref: '#/components/responses/RankingsUserBestResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Rankings User Best
      tags:
        - Ranking
  /rankings/user/overview:
    get:
      description: Get /rankings/user/overview
      operationId: getRankingsUserOverview
      parameters:
        - $ref: '#/components/parameters/PeriodQuery'
      responses:
        '200':
          $ref: '#/components/responses/RankingsUserOverviewResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Rankings User Overview
      tags:
        - Ranking
  /rankings/user/ranking_bracket:
    get:
      description: Get /rankings/user/ranking_bracket
      operationId: getRankingsUserRankingBracket
      responses:
        '200':
          $ref: '#/components/responses/RankingsUserRankingBracketResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Rankings User Bracket
      tags:
        - Ranking
  /rankings/users:
    get:
      description: Retrieves information related to /rankings/users
      operationId: getRankingsUsers
      responses:
        '200':
          $ref: '#/components/responses/RankingsUsersResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Users
      tags:
        - Ranking
  /review/{product}/{productId}:
    get:
      description: Retrieves reviews
      operationId: getReview
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductPath'
      responses:
        '200':
          $ref: '#/components/responses/ReviewProductResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Retrieves reviews
      tags:
        - Review
  /review/{product}/{productId}/paginated:
    get:
      description: Retrieves reviews
      operationId: getReviewPaginated
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductPath'
      responses:
        '200':
          $ref: '#/components/responses/ReviewProductPaginatedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Retrieves reviews
      tags:
        - Review
  /search/fetch:
    get:
      description: Fetch search results.
      operationId: getSearchFetch
      parameters:
        - $ref: '#/components/parameters/Query'
        - $ref: '#/components/parameters/SearchTags'
      responses:
        '200':
          $ref: '#/components/responses/SearchFetchResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Fetch search results
      tags:
        - Platform
  /season/end/{seasonId}/{userId}:
    get:
      description: Retrieve user score for a season.
      operationId: getSeasonEnd
      parameters:
        - $ref: '#/components/parameters/SeasonId'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/SeasonEndResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get user score for a season
      tags:
        - Season
  /season/list:
    get:
      description: Retrieve a list of seasons.
      operationId: getSeasonList
      responses:
        '200':
          $ref: '#/components/responses/SeasonListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of seasons
      tags:
        - Season
  /season/machine/active:
    get:
      description: Retrieve active season machines.
      operationId: getSeasonMachineActive
      responses:
        '200':
          $ref: '#/components/responses/SeasonMachineActiveResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get active machines for the current season
      tags:
        - Season
  /season/machines:
    get:
      description: Retrieve machines for the current season.
      operationId: getSeasonMachines
      responses:
        '200':
          $ref: '#/components/responses/SeasonMachinesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get season machines
      tags:
        - Season
  /season/machines/completed/{seasonId}:
    get:
      description: Retrieve completed machines for a specific season.
      operationId: getSeasonMachinesCompleted
      parameters:
        - $ref: '#/components/parameters/SeasonId'
      responses:
        '200':
          $ref: '#/components/responses/SeasonMachinesCompletedSeasonIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get completed machine flags for the current season
      tags:
        - Season
  /season/rewards/{seasonId}:
    get:
      description: Get Season Rewwards
      operationId: getSeasonRewards
      parameters:
        - $ref: '#/components/parameters/SeasonId'
      responses:
        '200':
          $ref: '#/components/responses/SeasonRewardsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Season Rewwards
      tags:
        - Season
  /season/user/followers/{seasonId}:
    get:
      description: Retrieve user followers for a specific season.
      operationId: getSeasonUserFollowers
      parameters:
        - $ref: '#/components/parameters/SeasonId'
      responses:
        '200':
          $ref: '#/components/responses/SeasonUserFollowersSeasonIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get top season users and top ranked followers for a user
      tags:
        - Season
  /season/user/rank/{seasonId}:
    get:
      description: Retrieve user rank for a specific season.
      operationId: getSeasonUserRank
      parameters:
        - $ref: '#/components/parameters/SeasonId'
      responses:
        '200':
          $ref: '#/components/responses/SeasonUserRankSeasonIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get user's rank for the current season
      tags:
        - Season
  /season/{leaderboard}/leaderboard:
    get:
      description: Get /season/players/leaderboard
      operationId: getSeasonLeaderboard
      parameters:
        - $ref: '#/components/parameters/Leaderboard'
        - in: query
          name: season
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/SeasonPlayersLeaderboardResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Season Leaderboar
      tags:
        - Season
  /season/{leaderboard}/leaderboard/top/{seasonId}:
    get:
      description: Season Top Leaderboard
      operationId: getSeasonLeaderboardTop
      parameters:
        - $ref: '#/components/parameters/Leaderboard'
        - $ref: '#/components/parameters/PeriodQuery'
        - $ref: '#/components/parameters/SeasonId'
      responses:
        '200':
          $ref: '#/components/responses/SeasonPlatersLeaderboardTopResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Season Leaderboard Top
      tags:
        - Season
  /sherlocks:
    get:
      description: Retrieve a list of Sherlock instances.
      operationId: getSherlocks
      parameters:
        - $ref: '#/components/parameters/SortType'
        - $ref: '#/components/parameters/Difficulty'
        - $ref: '#/components/parameters/State'
        - $ref: '#/components/parameters/SherlockSortBy'
        - $ref: '#/components/parameters/Category'
        - $ref: '#/components/parameters/Keyword'
        - $ref: '#/components/parameters/Status'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get list of Sherlocks
      tags:
        - Sherlocks
  /sherlocks/categories/list:
    get:
      description: Get Sherlocks Categories List
      operationId: getSherlocksCategoriesList
      responses:
        '200':
          $ref: '#/components/responses/SherlocksCategoriesListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Sherlocks Categories List
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/download_link:
    get:
      description: Retrieve the download link for a specific Sherlock instance.
      operationId: getSherlockDownloadlink
      parameters:
        - $ref: '#/components/parameters/SherlockId'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksDownloadLinkResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Get Download Url for Sherlock by ID
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/info:
    get:
      description: Retrieve detailed information for a specific Sherlock instance.
      operationId: getSherlockInfo
      parameters:
        - $ref: '#/components/parameters/SherlockId'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksSherlockIdInfoResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Get info of Sherlock by ID
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/play:
    get:
      description: Start or continue playing a specific Sherlock instance.
      operationId: getSherlockPlay
      parameters:
        - $ref: '#/components/parameters/SherlockId'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksSherlockIdPlayResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Does this do anything Sherlock by ID
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/progress:
    get:
      description: Retrieve progress information for a specific Sherlock instance.
      operationId: getSherlockProgress
      parameters:
        - $ref: '#/components/parameters/SherlockId'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksSherlockIdProgressResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Get progress of Sherlock item by ID
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/tasks:
    get:
      description: Retrieve tasks for a specific Sherlock instance.
      operationId: getSherlockTasks
      parameters:
        - $ref: '#/components/parameters/SherlockId'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksSherlockIdTasksResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Get tasks for Sherlock by ID
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/tasks/{taskId}/flag:
    post:
      description: Submit a flag for a specific task in a Sherlock instance.
      operationId: postSherlockTasksFlag
      parameters:
        - $ref: '#/components/parameters/SherlockId'
        - $ref: '#/components/parameters/TaskId'
      requestBody:
        $ref: '#/components/requestBodies/SherlocksTasksFlagRequest'
      responses:
        '201':
          $ref: '#/components/responses/SherlocksSherlockIdTasksTaskIdFlag201'
        '400':
          $ref: '#/components/responses/SherlocksSherlockIdTasksTaskIdFlag400'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Submit flag for a specific Sherlock task
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/writeup:
    get:
      description: Retrieve a writeup for a specific Sherlock instance.
      operationId: getSherlockWriteup
      parameters:
        - $ref: '#/components/parameters/SherlockId'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksSherlockIdWriteupResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Get community write-up for Sherlock by ID
      tags:
        - Sherlocks
  /sherlocks/{sherlockId}/writeup/official:
    get:
      description: Retrieve the official writeup for a specific Sherlock instance.
      operationId: getSherlockWriteupOfficial
      parameters:
        - $ref: '#/components/parameters/SherlockId'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksSherlockIdWriteupOfficialResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Get official write-up for Sherlock by ID
      tags:
        - Sherlocks
  /sherlocks/{sherlockSlug}:
    get:
      description: Retrieve information for a specific Sherlock instance.
      operationId: getSherlock
      parameters:
        - $ref: '#/components/parameters/SherlockSlug'
      responses:
        '200':
          $ref: '#/components/responses/SherlocksNameResponse'
        '404':
          $ref: '#/components/responses/SherlocksSherlockId404'
      summary: Get Sherlock by Id
      tags:
        - Sherlocks
  /sidebar/announcement:
    get:
      description: Retrieves information related to /sidebar/announcement
      operationId: getSidebarAnnouncement
      responses:
        '200':
          $ref: '#/components/responses/SidebarAnnouncementResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Sidebar: announcement'
      tags:
        - Platform
  /sidebar/changelog:
    get:
      deprecated: true
      description: Retrieves information related to /sidebar/changelog
      operationId: getSidebarChangelog
      responses:
        '200':
          $ref: '#/components/responses/SidebarChangelogResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Sidebar: changelog'
      tags:
        - Platform
  /sp/profile/{startingPointId}:
    get:
      description: Retrieve the profile information for a specific starting point.
      operationId: getSPProfile
      parameters:
        - $ref: '#/components/parameters/StartingPointId'
      responses:
        '200':
          $ref: '#/components/responses/SpProfileStartingPointIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Summary for get /sp/profile/{startingPointId}
      tags:
        - Starting Point
  /sp/task/flag:
    post:
      description: Submit a flag for an SP task.
      operationId: postSPTaskFlag
      responses:
        '200':
          $ref: '#/components/responses/SpTaskFlagResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Summary for post /sp/task/flag
      tags:
        - Starting Point
  /sp/tier/{tierId}:
    get:
      description: Retrieve details of SP Tier.
      operationId: getSPTier
      parameters:
        - $ref: '#/components/parameters/TierId'
      responses:
        '200':
          $ref: '#/components/responses/SpTierResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Starting Point Tier Info
      tags:
        - Starting Point
  /sp/tiers/progress:
    get:
      description: Retrieve progress of SP tiers.
      operationId: getSPTiersProgress
      responses:
        '200':
          $ref: '#/components/responses/SpTiersProgressResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Summary for get /sp/tiers/progress
      tags:
        - Starting Point
  /team/activity/{teamId}:
    get:
      description: Retrieve a handful of recent team owns. (Does not indicate which member achieved each item)
      operationId: getTeamActivity
      parameters:
        - $ref: '#/components/parameters/TeamId'
        - $ref: '#/components/parameters/NPastDays'
      responses:
        '200':
          $ref: '#/components/responses/TeamActivityTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Recent team Activity
      tags:
        - Team
  /team/chart/challenge/categories/{teamId}:
    get:
      description: Retrieve challenge category charts for a team.
      operationId: getTeamChartChallengeCategories
      parameters:
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/TeamChartChallengeTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Challenge Categories by Team ID
      tags:
        - Team
  /team/chart/machines/attack/{teamId}:
    get:
      description: Gets team machine ownage per attack path (e.g. "Web", "Account Misconfiguration"), expressed for each path (and for the total set of machines) as number of machines owned (either user or root, apparently) versus the total number available.
      operationId: getTeamChartMachinesAttack
      parameters:
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/TeamChartMachinesAttackTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get team Ownage by Attack Path
      tags:
        - Team
  /team/graph/{teamId}:
    get:
      description: Get graph data for a team for a given duration (e.g. 1Y, 6M, 3M, 1M, 1W)
      operationId: getTeamGraph
      parameters:
        - $ref: '#/components/parameters/TeamId'
        - $ref: '#/components/parameters/PeriodQuery'
      responses:
        '200':
          $ref: '#/components/responses/TeamGraphTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get team Graph for Duration
      tags:
        - Team
  /team/info/{teamId}:
    get:
      description: Retrieve the information profile for a team including captain, motto and other attributes.
      operationId: getTeamInfo
      parameters:
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/TeamInfoTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get team profile
      tags:
        - Team
  /team/invitations/{teamId}:
    get:
      description: list the pending team members who have requested to join a team, or who were requested by the team captain, but have not yet accepted / been approved.
      operationId: getTeamInvitations
      parameters:
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/TeamInvitationsTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: list team Invitations
      tags:
        - Team
  /team/kick/{userId}:
    post:
      description: Removes a team member from the team. Requires Captain of the team
      parameters:
        - $ref: '#/components/parameters/UserId'
      operationId: postTeamKickUser
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Remove Team member
      tags:
        - Team
  /team/members/{teamId}:
    get:
      description: list the members of a team (both active and pending / invited), given its ID.
      operationId: getTeamMembers
      parameters:
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/TeamMembersTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: list team members
      tags:
        - Team
  /team/stats/owns/{teamId}:
    get:
      description: Retrieves information related to /team/stats/owns/{team id}
      operationId: getTeamStatsOwns
      parameters:
        - $ref: '#/components/parameters/TeamId'
      responses:
        '200':
          $ref: '#/components/responses/TeamStatsOwnsTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get team Statistics (Owns)
      tags:
        - Team
  /team/{requestId}/invite/accept:
    post:
      description: accept the invitation
      operationId: postTeamInviteAccept
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/Generic400Error'
      summary: Accept Invitation
      tags:
        - Team
  /team/{requestId}/invite/reject:
    delete:
      description: delete the invitation
      operationId: deleteTeamInviteReject
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/Generic400Error'
      summary: Delete Invitation
      tags:
        - Team
  /tracks:
    get:
      description: Retrieves information related to /tracks
      operationId: getTracks
      responses:
        '200':
          $ref: '#/components/responses/TracksResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: list Available Tracks
      tags:
        - Tracks
  /tracks/enroll/{trackId}:
    post:
      description: Enroll to track
      operationId: postTracksEnroll
      parameters:
        - in: path
          name: trackId
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/TracksEnrollResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Enroll to track
      tags:
        - Tracks
  /tracks/like/{trackId}:
    post:
      description: Like a track
      operationId: postTracksLike
      parameters:
        - in: path
          name: trackId
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/TracksLikeResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Like a track
      tags:
        - Tracks
  /tracks/{trackId}:
    get:
      description: Retrieves information related to /tracks/{id}
      operationId: getTracksId
      parameters:
        - description: ID of the Track
          in: path
          name: trackId
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/TracksIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get Track Details
      tags:
        - Tracks
  /university/activity/{universityId}:
    get:
      description: Univeritiy Activity
      operationId: getUniversityActivity
      parameters:
        - $ref: '#/components/parameters/UniversityId'
      responses:
        '200':
          $ref: '#/components/responses/UniversityActivityResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Univeritiy Activity
      tags:
        - Universities
  /university/all/list:
    get:
      description: Retrieve a list of all universities.
      operationId: getUniversityAllList
      parameters:
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/UniversityAllListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Retrieve information profile for teams
      tags:
        - Universities
  /university/chart/challenge/categories/{universityId}:
    get:
      description: Get Univeritiy Challenge Chart Categories
      operationId: getUniversityChartChallengeCategories
      parameters:
        - $ref: '#/components/parameters/UniversityId'
      responses:
        '200':
          $ref: '#/components/responses/UniversityChartChallengeCategoriesResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: University Challenge Categories Chart
      tags:
        - Universities
  /university/chart/machines/attack/{universityId}:
    get:
      description: University Machine Chart
      operationId: getUniversityChartMachinesAttack
      parameters:
        - $ref: '#/components/parameters/UniversityId'
      responses:
        '200':
          $ref: '#/components/responses/UniversityChartMachinesAttackResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: University Machine Attack Chart
      tags:
        - Universities
  /university/country/list:
    get:
      description: Univeritiy Country List
      operationId: getUniversityCountryList
      responses:
        '200':
          $ref: '#/components/responses/UniversityCountryListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Univeritiy Country List
      tags:
        - Universities
  /university/members/{universityId}:
    get:
      description: Retrieve the list of members of a team, including both active and pending/invited members
      operationId: getUniversityMembers
      parameters:
        - $ref: '#/components/parameters/UniversityId'
      responses:
        '200':
          $ref: '#/components/responses/UniversityMembersTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get team members
      tags:
        - Universities
  /university/new/list:
    get:
      description: Univeritiy New List
      operationId: getUniversityNewList
      responses:
        '200':
          $ref: '#/components/responses/UniversityNewListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Univeritiy New List
      tags:
        - Universities
  /university/profile/{universityId}:
    get:
      description: Retrieve the profile of a university by team ID.
      operationId: getUniversityProfile
      parameters:
        - $ref: '#/components/parameters/UniversityId'
      responses:
        '200':
          $ref: '#/components/responses/UniversityProfileTeamIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Retrieve information profile for a specific team
      tags:
        - Universities
  /university/stats/owns/{userId}:
    get:
      description: Retrieve owns statistics for a specific user identified by user_id
      operationId: getUniversityStatsOwns
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/UniversityStatsOwnsUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get owns statistics for a user
      tags:
        - Universities
  /university/top/list:
    get:
      description: Univeritiy Top List
      operationId: getUniversityTopList
      responses:
        '200':
          $ref: '#/components/responses/UniversityTopListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Univeritiy Top List
      tags:
        - Universities
  /user/achievement/{targetType}/{userId}/{targetId}:
    get:
      description: Validate Achievement / Own
      operationId: getUserAchievement
      parameters:
        - $ref: '#/components/parameters/UserId'
        - description: Target ID
          in: path
          name: targetId
          required: true
          schema:
            type: integer
        - description: Target Type
          in: path
          name: targetType
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/UserAchievementTarTypeUserIdTarIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Validate Achievement / Own
      tags:
        - User
  /user/anonymized/id:
    get:
      description: Retrieves information related to /user/anonymized/id
      operationId: getUserAnonymizedId
      responses:
        '200':
          $ref: '#/components/responses/UserAnonymizedIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Bearer: Anonymous ID'
      tags:
        - User
  /user/apptoken/create:
    post:
      description: User App Token Create
      operationId: postUserApptokenCreate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                expire_after:
                  type: number
                name:
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/UserApptokenCreateResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: User App Token Create
      tags:
        - User
  /user/apptoken/delete:
    post:
      description: Delete app token, requires the name of the token
      operationId: postUserApptokenDelete
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Delete App Token
      tags:
        - User
  /user/apptoken/list:
    get:
      description: Get /user/apptoken/list
      operationId: getUserApptokenList
      responses:
        '200':
          $ref: '#/components/responses/UserApptokenListResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: User App Tokens List
      tags:
        - User
  /user/banned:
    get:
      description: Retrieves if user is banned
      operationId: getUserBanned
      responses:
        '200':
          $ref: '#/components/responses/UserBannedResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Bearer: Is Banned'
      tags:
        - User
  /user/connection/status:
    get:
      description: Retrieves information related to /user/connection/status
      operationId: getUserConnectionStatus
      responses:
        '200':
          $ref: '#/components/responses/UserConnectionStatusResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Bearer: Connection Status [ Connected ]'
      tags:
        - User
  /user/dashboard:
    get:
      description: Retrieves information related to /user/dashboard
      operationId: getUserDashboard
      responses:
        '200':
          $ref: '#/components/responses/UserDashboardResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Dashboard: Various Platform Stats'
      tags:
        - User
  /user/dashboard/tabloid:
    get:
      description: Retrieves information related to /user/dashboard/tabloid
      operationId: getUserDashboardTabloid
      responses:
        '200':
          $ref: '#/components/responses/UserDashboardTabloidResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Dashboard: Various Platform Stats'
      tags:
        - User
  /user/disrespect/{userId}:
    post:
      description: Remove respect from user
      operationId: postUserDisrespect
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Remove respect from user
      tags:
        - User
  /user/follow/{userId}:
    post:
      description: Follow a user
      operationId: postUserFollow
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Follow a user
      tags:
        - User
  /user/followers:
    get:
      description: Retrieves information related to /user/followers
      operationId: getUserFollowers
      responses:
        '200':
          $ref: '#/components/responses/UserFollowersResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Bearer: Followers'
      tags:
        - User
  /user/info:
    get:
      description: Retrieves information related to /user/info
      operationId: getUserInfo
      responses:
        '200':
          $ref: '#/components/responses/UserInfoResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get user information
      tags:
        - User
  /user/profile/activity/{userId}:
    get:
      description: Retrieves information related to /user/profile/activity/{user id}
      operationId: getUserProfileActivity
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileActivityUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User profile: Activity'
      tags:
        - User
  /user/profile/badges/{userId}:
    get:
      description: Retrieves information related to /user/profile/badges/{user id}
      operationId: getUserProfileBadges
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileBadgesUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User profile: badges'
      tags:
        - User
  /user/profile/basic/{userId}:
    get:
      description: Retrieves information related to /user/profile/basic/{user id}
      operationId: getUserProfileBasic
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/UserProfileBasicUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Other user's profile
      tags:
        - User
  /user/profile/bloods/{userId}:
    get:
      description: Retrieves information related to /user/profile/bloods/{user id}
      operationId: getUserProfileBloods
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileBloodsUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User profile: Bloods'
      tags:
        - User
  /user/profile/chart/machines/attack/{userId}:
    get:
      description: Retrieves information related to /user/profile/chart/machines/attack/{user id}
      operationId: getUserProfileChartMachinesAttack
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileChartMachinesAttackUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User profile: machine Ownage Chart By Attack Path'
      tags:
        - User
  /user/profile/content/{userId}:
    get:
      description: Retrieves information related to /user/profile/content/{user id}
      operationId: getUserProfileContent
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileContentUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User profile: Submitted Content'
      tags:
        - User
  /user/profile/graph/{period}/{userId}:
    get:
      description: Retrieves information related to /user/profile/graph/{period}/{user id}
      operationId: getUserProfileGraph
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/PeriodPath'
      responses:
        '200':
          $ref: '#/components/responses/ProfileGraphPeriodUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User profile: Achievement Graph'
      tags:
        - User
  /user/profile/progress/challenges/{userId}:
    get:
      description: Retrieves information related to /user/profile/progress/challenges/{user id}
      operationId: getUserProfileProgressChallenges
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileProgressChallengesUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User Progress: challenges (Total + by Category)'
      tags:
        - User
  /user/profile/progress/fortress/{userId}:
    get:
      description: Retrieves information related to /user/profile/progress/fortress/{user id}
      operationId: getUserProfileProgressFortress
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileProgressFortressUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User Progress: fortress'
      tags:
        - User
  /user/profile/progress/machines/os/{userId}:
    get:
      description: Get user os profile
      operationId: getUserProfileProgressMachinesOs
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/UserProfileProgressMachinesOsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Get a user os profile
      tags:
        - User
  /user/profile/progress/prolab/{userId}:
    get:
      description: Retrieves information related to /user/profile/progress/prolab/{user id}
      operationId: getUserProfileProgressProlab
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/ProfileProgressProlabUserIdResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'User Progress: Pro Lab'
      tags:
        - User
  /user/profile/progress/sherlocks/{userId}:
    get:
      description: User Profile Progreess Sherlocks
      operationId: getUserProfileProgressSherlocks
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/UserProfileProgressSherlocksResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: User Profile Progreess Sherlocks
      tags:
        - User
  /user/profile/summary:
    get:
      description: Retrieves information related to /user/profile/summary
      operationId: getUserProfileSummary
      responses:
        '200':
          $ref: '#/components/responses/UserProfileSummaryResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: User Profile Summary
      tags:
        - User
  /user/respect/{userId}:
    post:
      description: Respect a user
      operationId: postUserRespect
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Respect a user
      tags:
        - User
  /user/settings:
    get:
      description: Retrieves information related to /user/settings
      operationId: getUserSettings
      responses:
        '200':
          $ref: '#/components/responses/UserSettingsResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Bearer: Settings'
      tags:
        - User
  /user/tracks:
    get:
      description: Retrieves information related to /user/tracks
      operationId: getUserTracks
      responses:
        '200':
          $ref: '#/components/responses/UserTracksResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: 'Bearer: Enrolled Tracks'
      tags:
        - User
  /user/unfollow/{userId}:
    post:
      description: Unfollow a user
      operationId: postUserUnfollow
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/GenericSuccess2xx'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Unfollow a user
      tags:
        - User
  /vm/extend:
    post:
      description: Extend the virtual machine.
      operationId: postVMExtend
      requestBody:
        $ref: '#/components/requestBodies/VirtualMachineRequest'
      responses:
        '200':
          $ref: '#/components/responses/VMExtendResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Extend a machine / SP
      tags:
        - VM
  /vm/reset:
    post:
      description: Reset the virtual machine.
      operationId: postVMReset
      requestBody:
        $ref: '#/components/requestBodies/VirtualMachineRequest'
      responses:
        '200':
          $ref: '#/components/responses/VMResponse'
        '400':
          $ref: '#/components/responses/VmReset400'
      summary: Reset a machine / SP
      tags:
        - VM
  /vm/reset/vote:
    post:
      description: Reset the virtual machine.
      operationId: postVMResetVote
      requestBody:
        $ref: '#/components/requestBodies/VirtualMachineRequest'
      responses:
        '200':
          $ref: '#/components/responses/VMResponse'
        '400':
          $ref: '#/components/responses/VmReset400'
      summary: Vote to Reset a machine
      tags:
        - VM
  /vm/reset/vote/accept:
    post:
      description: Reset the virtual machine.
      operationId: postVMResetVoteAccept
      requestBody:
        $ref: '#/components/requestBodies/VirtualMachineRequest'
      responses:
        '200':
          $ref: '#/components/responses/VMResponse'
        '400':
          $ref: '#/components/responses/VmReset400'
      summary: Accept vote to Reset a machine
      tags:
        - VM
  /vm/spawn:
    post:
      description: Spawn a virtual machine.
      operationId: postVMSpawn
      requestBody:
        $ref: '#/components/requestBodies/VirtualMachineRequest'
      responses:
        '200':
          $ref: '#/components/responses/VMResponse'
        '400':
          $ref: '#/components/responses/GenericError'
        '500':
          $ref: '#/components/responses/GenericError5xx'
      summary: Spawn a machine / SP
      tags:
        - VM
  /vm/terminate:
    post:
      description: Terminate a virtual machine.
      operationId: postVMTerminate
      requestBody:
        $ref: '#/components/requestBodies/VirtualMachineRequest'
      responses:
        '200':
          $ref: '#/components/responses/VMResponse'
        '400':
          $ref: '#/components/responses/GenericError'
        '500':
          $ref: '#/components/responses/GenericError5xx'
      summary: Terminate a machine / SP
      tags:
        - VM
  /{product}/todo/update/{productId}:
    post:
      description: Update Todo list
      operationId: postTodoUpdate
      parameters:
        - $ref: '#/components/parameters/ProductPath'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '200':
          $ref: '#/components/responses/TodoUpdateResponse'
        '400':
          $ref: '#/components/responses/GenericError'
      summary: Update Todo list
      tags:
        - Machines
        - Sherlocks
        - Challenges
components:
  securitySchemes:
    bearer:
      description: Need to create token on app.hackthebox.com
      scheme: bearer
      type: http
  parameters:
    VpnId:
      description: ID of the vpn server
      in: path
      name: vpnId
      required: true
      schema:
        type: integer
    Page:
      description: Page number
      in: query
      name: page
      required: false
      schema:
        type: integer
    CompanyId:
      description: ID of the company
      in: path
      name: companyId
      required: true
      schema:
        type: integer
    JobId:
      description: ID of the Job
      in: path
      name: jobId
      required: true
      schema:
        type: integer
    SearchQuery:
      description: Search Param
      in: query
      name: search_query
      required: false
      schema:
        type: string
    AfterDate:
      description: Get items after a date in the past
      in: query
      name: after_date
      required: false
      schema:
        format: date
        type: string
    Rank:
      description: Rank integer
      explode: true
      in: query
      name: rank[]
      required: false
      schema:
        items:
          type: integer
        type: array
    ChallengeId:
      description: ID of the product
      in: path
      name: challengeId
      required: true
      schema:
        type: integer
    ChallengeSlug:
      description: ID or Name of the product
      in: path
      name: challengeSlug
      required: true
      schema:
        type: string
    ReviewId:
      description: Review ID
      in: path
      name: reviewId
      required: true
      schema:
        type: integer
    PerPage:
      description: Limit results per page
      in: query
      name: per_page
      required: false
      schema:
        maximum: 100
        minimum: 5
        type: integer
    Status:
      description: Omit for both
      in: query
      name: status
      required: false
      schema:
        enum:
          - incompleted
          - complete
        type: string
    State:
      description: Filter by state. You can provide multiple values. For example, state=active&state=retired.
      explode: true
      in: query
      name: state
      schema:
        items:
          enum:
            - active
            - retired
            - unreleased
          type: string
        type: array
      style: form
    SortBy:
      description: Field to sort by
      in: query
      name: sort_by
      required: false
      schema:
        enum:
          - release-date
          - name
          - user-owns
          - system-owns
          - rating
          - user-difficulty
        type: string
    SortType:
      description: Sort type (asc or desc)
      in: query
      name: sort_type
      required: false
      schema:
        enum:
          - asc
          - desc
        type: string
    Difficulty:
      description: Filter by difficulty level
      explode: true
      in: query
      name: difficulty[]
      required: false
      schema:
        items:
          enum:
            - very-easy
            - easy
            - medium
            - hard
            - insane
          type: string
        type: array
      style: form
    Category:
      description: |
        Filter by category. You can provide multiple values. For example,
        category[]=15&category[]=20. See /v4/{productName}/categories/list for full list
      explode: true
      in: query
      name: category[]
      schema:
        items:
          type: integer
        type: array
      style: form
    Todo:
      description: Filter ToDo
      in: query
      name: todo
      required: false
      schema:
        enum:
          - 1
        format: int
        type: integer
    ProlabId:
      description: ID of the product
      in: path
      name: prolabId
      required: true
      schema:
        type: integer
    ProductName:
      description: Select vpn server
      in: path
      name: productName
      required: true
      schema:
        enum:
          - competitive
          - labs
          - starting_point
          - fortresses
        type: string
    Product:
      description: Select vpn server
      in: query
      name: product
      required: true
      schema:
        enum:
          - competitive
          - labs
          - starting_point
          - fortresses
        type: string
    FortressId:
      description: ID of the product
      in: path
      name: fortressId
      required: true
      schema:
        type: integer
    MachineId:
      description: ID of the product
      in: path
      name: machineId
      required: true
      schema:
        type: integer
    PeriodPath:
      description: One of ["1Y", "6M", "3M", "1M", "1W"]
      in: path
      name: period
      required: true
      schema:
        enum:
          - 1Y
          - 6M
          - 3M
          - 1M
          - 1W
        type: string
    Free:
      description: limits retired results to free machines, values must either be 1 for true or 0 for false or omit the parameter for no filter
      in: query
      name: free
      required: false
      schema:
        enum:
          - 1
          - 0
        type: integer
    ShowCompleted:
      description: Omit for both
      in: query
      name: show_completed
      required: false
      schema:
        enum:
          - incomplete
          - complete
        type: string
    Os:
      description: Filter by os
      explode: true
      in: query
      name: os
      required: false
      schema:
        items:
          enum:
            - linux
            - windows
            - freebsd
            - openbsd
            - other
          type: string
        type: array
      style: form
    Tags:
      description: Filter by tag ID. Can be repeated.
      explode: true
      in: query
      name: tags
      required: false
      schema:
        items:
          type: integer
        type: array
      style: form
    Keyword:
      description: Search String
      in: query
      name: keyword
      required: false
      schema:
        example: hack
        type: string
    MachineSlug:
      description: Can be the ID or Name of a box
      in: path
      name: machineSlug
      required: true
      schema:
        type: string
    PeriodQuery:
      description: One of ["1Y", "6M", "3M", "1M", "1W"]
      in: query
      name: period
      required: true
      schema:
        default: 1W
        enum:
          - 1Y
          - 6M
          - 3M
          - 1M
          - 1W
        type: string
    TeamId:
      description: ID of the team
      in: path
      name: teamId
      required: true
      schema:
        type: integer
    UniversityId:
      description: ID of the Univeritiy
      in: path
      name: universityId
      required: true
      schema:
        type: integer
    ProductId:
      description: ID of the product
      in: path
      name: productId
      required: true
      schema:
        type: integer
    ProductPath:
      description: Product Name
      in: path
      name: product
      required: true
      schema:
        enum:
          - machine
          - challenge
          - sherlock
        type: string
    Query:
      description: Search String
      in: query
      name: query
      required: true
      schema:
        example: hack
        type: string
    SearchTags:
      description: Search Term
      in: query
      name: tags
      required: false
      schema:
        items:
          enum:
            - machines
            - challenges
            - users
            - teams
          type: string
        maxItems: 1
        minItems: 1
        type: array
    SeasonId:
      description: ID of the Season
      in: path
      name: seasonId
      required: true
      schema:
        type: integer
    UserId:
      description: ID of the user
      in: path
      name: userId
      required: true
      schema:
        type: integer
    Leaderboard:
      description: players or teams
      in: path
      name: leaderboard
      required: true
      schema:
        enum:
          - players
          - teams
        type: string
    SherlockSortBy:
      description: Attribute to sort by
      in: query
      name: sort_by
      schema:
        enum:
          - solves
          - category
          - rating
          - name
        type: string
    SherlockId:
      description: ID of the Sherlock
      in: path
      name: sherlockId
      required: true
      schema:
        type: integer
    TaskId:
      description: ID of the task
      in: path
      name: taskId
      required: true
      schema:
        type: integer
    SherlockSlug:
      description: ID or Name of the Sherlock
      in: path
      name: sherlockSlug
      required: true
      schema:
        type: string
    StartingPointId:
      description: Starting Point Id
      in: path
      name: startingPointId
      required: true
      schema:
        type: integer
    TierId:
      description: ID of the tier
      in: path
      name: tierId
      required: true
      schema:
        type: integer
    NPastDays:
      description: number of past days, max 90
      in: query
      name: n_past_days
      required: false
      schema:
        type: integer
    RequestId:
      description: Request ID
      in: path
      name: requestId
      required: true
      schema:
        type: integer
    Search:
      description: Search
      in: query
      name: search
      required: false
      schema:
        type: string
  headers:
    XRateLimitHeader:
      description: Total requests allowed
      schema:
        example: 15
        format: int
        type: integer
    XRateLimitRemainingHeader:
      description: Remaining requests allowed
      schema:
        example: 14
        format: int
        type: integer
  schemas:
    OpenVpn:
      description: Schema definition for Open Vpn
      format: binary
      title: Open VPN
      type: string
    Message:
      description: Schema definition for Message
      properties:
        message:
          description: Return message
          type: string
      title: Message
      type: object
    AnnouncementItem:
      properties:
        created_at:
          type: string
        id:
          type: integer
        text:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    AnnouncementItems:
      items:
        $ref: '#/components/schemas/AnnouncementItem'
      type: array
    AnnouncementResponse:
      properties:
        announcements:
          $ref: '#/components/schemas/AnnouncementItems'
      type: object
    OwnMachineErrorResponse:
      description: Schema definition for Own Machine Error Response
      properties:
        message:
          example: Incorrect flag!
          type: string
        status:
          example: 400
          type: integer
      title: Own Machine Error Response
      type: object
    Generic400Message:
      properties:
        message:
          type: string
        status:
          type: boolean
      type: object
    ArenaOwnError:
      description: Schema definition for Own Error Response
      properties:
        message:
          example: Incorrect flag!
          type: string
      title: Arena Own Error Response
      type: object
    Badge:
      description: Schema definition for Badge
      properties:
        badge_category_id:
          example: 1
          type: integer
        color:
          example: gold
          nullable: true
          type: string
        description_en:
          example: Has been in the Top 10 of the Hall of Fame.
          type: string
        icon:
          example: far fa-list-ol
          type: string
        id:
          example: 2
          type: integer
        name:
          example: Top 10
          type: string
        rarity:
          type: number
        users_count:
          example: 326
          type: integer
      title: Badge
      type: object
    BadgeCategoryItems:
      items:
        $ref: '#/components/schemas/Badge'
      type: array
    BadgeCategory:
      properties:
        badges:
          $ref: '#/components/schemas/BadgeCategoryItems'
        description:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    BadgeCategories:
      items:
        $ref: '#/components/schemas/BadgeCategory'
      type: array
    BadgesResponse:
      description: Schema definition for Badges Response
      properties:
        categories:
          $ref: '#/components/schemas/BadgeCategories'
      title: Badges Response
      type: object
    CareerCompaniesItem:
      properties:
        career_logo:
          nullable: true
          type: string
        featured:
          type: boolean
        id:
          type: integer
        job_offers:
          type: number
        logo:
          nullable: true
          type: string
        name:
          type: string
    CareerCompaniesDataItems:
      items:
        $ref: '#/components/schemas/CareerCompaniesItem'
        type: object
      type: array
    CareerCompaniesResponse:
      properties:
        data:
          $ref: '#/components/schemas/CareerCompaniesDataItems'
      title: Career Companies Response
      type: object
    CareerCompany:
      properties:
        description:
          type: string
        featured:
          type: boolean
        id:
          type: integer
        latest_post:
          nullable: true
          type: string
        logo:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    CompanyBasic:
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
      type: object
    CareerJobsItem:
      properties:
        application_url:
          nullable: true
          type: string
        applied:
          type: boolean
        company:
          $ref: '#/components/schemas/CompanyBasic'
        company_logo:
          type: string
        country:
          type: string
        created_at:
          type: string
        external_employer_name:
          nullable: true
          type: string
        external_link:
          nullable: true
          type: string
        has_application_url:
          type: boolean
        id:
          type: integer
        minimum_rank_id:
          type: number
        minimum_rank_name:
          type: string
        remote:
          nullable: true
          type: string
        title:
          type: string
        updated_at:
          type: string
        work_type:
          type: string
      type: object
    CareerJobs:
      items:
        $ref: '#/components/schemas/CareerJobsItem'
      type: array
    CareerCompanyData:
      properties:
        company:
          $ref: '#/components/schemas/CareerCompany'
        jobs:
          $ref: '#/components/schemas/CareerJobs'
      type: object
    MetaAlt:
      properties:
        currentPage:
          type: integer
        pages:
          type: integer
      type: object
    CareerCompanyResponse:
      properties:
        data:
          $ref: '#/components/schemas/CareerCompanyData'
        meta:
          $ref: '#/components/schemas/MetaAlt'
      type: object
    CareerFeaturedItems:
      properties:
        id:
          type: integer
        logo:
          type: string
        name:
          type: string
      type: object
    CareerFeaturedData:
      items:
        $ref: '#/components/schemas/CareerFeaturedItems'
      type: array
    CareerFeaturedResponse:
      description: Schema definition for Career Featured Response
      properties:
        data:
          $ref: '#/components/schemas/CareerFeaturedData'
      title: Career Featured Response
      type: object
    StringArray:
      items:
        type: string
      type: array
    CareerHistoryResponse:
      description: Schema definition for Career History Response
      properties:
        data:
          $ref: '#/components/schemas/StringArray'
        meta:
          $ref: '#/components/schemas/MetaAlt'
      title: Career History Response
      type: object
    ObjectArray:
      items:
        type: object
      type: array
    CareerInfoData:
      properties:
        application_url:
          nullable: true
          type: string
        applied:
          type: boolean
        company:
          $ref: '#/components/schemas/CompanyBasic'
        company_logo:
          type: string
        country:
          type: string
        created_at:
          type: string
        description:
          type: string
        external_employer_name:
          nullable: true
          type: string
        external_link:
          nullable: true
          type: string
        has_application_url:
          type: boolean
        id:
          type: integer
        minimum_rank_id:
          type: number
        minimum_rank_name:
          type: string
        other_jobs:
          $ref: '#/components/schemas/ObjectArray'
        remote:
          nullable: true
          type: boolean
        title:
          type: string
        updated_at:
          type: string
        work_type:
          type: string
      type: object
    CareerInfoResponse:
      properties:
        data:
          $ref: '#/components/schemas/CareerInfoData'
      type: object
    CareerProfileData:
      properties:
        freelance:
          nullable: true
          type: string
        full_time:
          nullable: true
          type: string
        opt_in:
          type: boolean
        skills:
          $ref: '#/components/schemas/StringArray'
      type: object
    CareerProfileResponse:
      description: Schema definition for Career Profile Response
      properties:
        data:
          $ref: '#/components/schemas/CareerProfileData'
      title: Career Profile Response
      type: object
    CareerRequestsResponse:
      properties:
        data:
          $ref: '#/components/schemas/ObjectArray'
        meta:
          $ref: '#/components/schemas/MetaAlt'
      type: object
    CareerSearchItem:
      properties:
        application_url:
          nullable: true
          type: string
        applied:
          type: boolean
        company:
          $ref: '#/components/schemas/CompanyBasic'
        company_logo:
          type: string
        country:
          nullable: true
          type: string
        created_at:
          format: date-time
          type: string
        external_employer_name:
          nullable: true
          type: string
        external_link:
          nullable: true
          type: string
        has_application_url:
          type: boolean
        id:
          type: integer
        minimum_rank_id:
          type: integer
        minimum_rank_name:
          type: string
        remote:
          nullable: true
          type: string
        title:
          type: string
        updated_at:
          format: date-time
          type: string
        work_type:
          nullable: true
          type: string
      type: object
    CareerSearchData:
      items:
        $ref: '#/components/schemas/CareerSearchItem'
      type: array
    CareerSearchResponse:
      description: Schema definition for Career Search Response
      properties:
        data:
          $ref: '#/components/schemas/CareerSearchData'
        meta:
          $ref: '#/components/schemas/MetaAlt'
      title: Career Search Response
      type: object
    CareerStatsData:
      properties:
        new_today:
          type: integer
        total_job_offers:
          type: integer
      type: object
    CareerStatsResponse:
      description: Schema definition for Career Stats Response
      properties:
        data:
          $ref: '#/components/schemas/CareerStatsData'
      title: Career Stats Response
      type: object
    ChallengeActivity:
      description: Schema definition for Challenge Activity
      properties:
        created_at:
          example: '2020-02-07T20:03:28.000000Z'
          format: date-time
          type: string
        date:
          example: February 7th, 2020 10:03 pm
          type: string
        date_diff:
          example: 4 years ago
          type: string
        type:
          example: blood
          type: string
        user_avatar:
          example: /storage/avatars/fd5b946aaadbb0254014fa10a22dd403.png
          type: string
        user_id:
          example: 82600
          type: integer
        user_name:
          example: del_KZx497Ju
          type: string
      title: Challenge Activity
      type: object
    ChallengActivityActivities:
      items:
        $ref: '#/components/schemas/ChallengeActivity'
      type: array
    ChallengeActivityInfo:
      properties:
        activity:
          $ref: '#/components/schemas/ChallengActivityActivities'
      type: object
    ChallengeActivityResponse:
      description: Schema definition for Challenge Activity Response
      properties:
        info:
          $ref: '#/components/schemas/ChallengeActivityInfo'
      title: Challenge Activity Response
      type: object
    CategoriesItem:
      properties:
        icon:
          example: https://labs.hackthebox.com/storage/challenge_categories/c20ad4d76fe97759aa27a0c99bff6710.svg
          nullable: true
          type: string
        id:
          example: 21
          type: integer
        name:
          example: AI - ML
          type: string
      type: object
    CategoriesListInfo:
      items:
        $ref: '#/components/schemas/CategoriesItem'
      type: array
    CategoriesListResponse:
      description: Schema definition for Categories List Response
      properties:
        info:
          $ref: '#/components/schemas/CategoriesListInfo'
      type: object
    ChallengeChangelogIdResponse:
      description: Schema definition for Challenge Changelog Id Response
      properties:
        data:
          $ref: '#/components/schemas/StringArray'
        status:
          type: boolean
      title: Challenge Change Log Id Response
      type: object
    IntArray:
      items:
        type: integer
      type: array
    PlayInfoAlt:
      type: object
      properties:
        status:
          type: string
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        ip:
          type: string
          nullable: true
        ports:
          $ref: '#/components/schemas/IntArray'
      description: Alternate structure of PlayInfo used in Sherlocks and Challenges
    DifficultyChart:
      oneOf:
        - type: array
          items: {}
          maxItems: 0
        - type: object
          properties:
            counterBitHard:
              example: 7
              type: integer
            counterBrainFuck:
              example: 6
              type: integer
            counterCake:
              example: 23
              type: integer
            counterEasy:
              example: 26
              type: integer
            counterExHard:
              example: 1
              type: integer
            counterHard:
              example: 1
              type: integer
            counterMedium:
              example: 9
              type: integer
            counterTooEasy:
              example: 17
              type: integer
            counterTooHard:
              example: 3
              type: integer
            counterVeryEasy:
              example: 35
              type: integer
    Challenge:
      description: Schema definition for Challenge
      properties:
        authUserHasReviewed:
          example: false
          type: boolean
        reviews_count:
          type: integer
        play_info:
          $ref: '#/components/schemas/PlayInfoAlt'
        docker_status:
          nullable: true
          type: string
        show_go_vip:
          type: boolean
        has_changelog:
          type: boolean
        authUserSolve:
          example: false
          type: boolean
        authUserSolveTime:
          example: null
          nullable: true
          type: string
        can_access_walkthough:
          type: boolean
        category_name:
          example: Crypto
          type: string
        creator2_avatar:
          example: null
          nullable: true
          type: string
        creator2_id:
          example: null
          nullable: true
          type: integer
        creator2_name:
          example: null
          nullable: true
          type: string
        creator_avatar:
          example: /storage/avatars/2a956277f4de5800bf659c63cbbd140b.png
          type: string
        creator_id:
          example: 185587
          type: integer
        creator_name:
          example: DaysOfLife
          type: string
        description:
          example: The more the merrier, right? We decided to mash two of the best cryptosytems together for the best product...
          type: string
        difficulty:
          example: Medium
          type: string
        difficulty_chart:
          $ref: '#/components/schemas/DifficultyChart'
        dislikeByAuthUser:
          example: false
          type: boolean
        dislikes:
          example: 0
          type: integer
        docker:
          example: true
          nullable: true
          type: boolean
        docker_ip:
          example: null
          nullable: true
          type: string
        docker_ports:
          example: null
          nullable: true
          type: string
        download:
          example: true
          type: boolean
        file_name:
          type: string
        file_size:
          type: string
        first_blood_time:
          example: 0H 39M 49S
          type: string
        first_blood_user:
          example: sampriti
          type: string
        first_blood_user_avatar:
          example: /storage/avatars/03d6176149e9fe81c83590dd4e7a5225.png
          type: string
        first_blood_user_id:
          example: 836
          type: integer
        id:
          example: 206
          type: integer
        isRespected:
          example: false
          type: boolean
        isRespected2:
          example: null
          nullable: true
          type: boolean
        isTodo:
          example: false
          type: boolean
        likeByAuthUser:
          example: false
          type: boolean
        likes:
          example: 0
          type: integer
        name:
          example: Composition
          type: string
        play_methods:
          $ref: '#/components/schemas/StringArray'
        points:
          oneOf:
            - type: integer
            - type: string
        recommended:
          example: 0
          type: integer
        release_date:
          example: '2021-04-02T20:00:00.000000Z'
          format: date-time
          type: string
        released:
          example: 1
          type: integer
        retired:
          example: true
          type: boolean
        sha256:
          example: b3edd221b1ca7ae93673ddcbdfe5dbe2109998db2865f0e1b8ec5cc9fac56492
          type: string
        solves:
          example: 704
          type: integer
        stars:
          example: 4.8
          format: float
          type: number
        state:
          example: retired
          type: string
        tags:
          $ref: '#/components/schemas/StringArray'
        user_can_review:
          example: true
          type: boolean
        user_submitted_difficulty:
          type: integer
      title: Challenge
      type: object
    ChallengeResponse:
      description: Schema definition for Challenge Id Response
      properties:
        challenge:
          $ref: '#/components/schemas/Challenge'
      title: Challenge Id Response
      type: object
    ChallengeOwnRequest:
      description: Schema definition for Own Request
      properties:
        challenge_id:
          example: 597
          type: integer
        difficulty:
          example: 50
          type: integer
        flag:
          example: 0cc175b9c0f1b6a831c399e269772661
          type: string
      required:
        - difficulty
        - challenge_id
        - flag
      title: Own Request
      type: object
    OwnResponse:
      description: Schema definition for Own Response
      properties:
        message:
          example: machine owned successfully!
          type: string
        status:
          example: 200
          type: integer
      title: Own Response
      type: object
    RecommendedCard:
      description: Schema definition for Recommended Card
      properties:
        category_name:
          example: AI - ML
          type: string
        difficulty:
          example: Medium
          type: string
        id:
          example: 753
          type: integer
        name:
          example: Prometheon
          type: string
        rating:
          example: 0
          type: number
        release_date:
          example: '2024-08-09T20:00:00.000000Z'
          type: string
        retire_challenge_id:
          example: 445
          type: integer
        retired:
          example: false
          type: boolean
        state:
          example: unreleased
          type: string
        url_name:
          example: prometheon
          type: string
      title: Recommended Card
      type: object
    ChallengeRecommendedResponse:
      description: Schema definition for Challenge Recommended Response
      properties:
        card1:
          $ref: '#/components/schemas/RecommendedCard'
        card2:
          $ref: '#/components/schemas/RecommendedCard'
        state:
          $ref: '#/components/schemas/StringArray'
          example:
            - coming
            - retiring
      title: Challenge Recommended Response
      type: object
    RecommendedCardRetired:
      description: Schema definition for Recommended Card Retired
      properties:
        category_name:
          example: AI - ML
          type: string
        difficulty:
          example: Medium
          type: string
        id:
          example: 753
          type: integer
        name:
          example: Prometheon
          type: string
        release_date:
          example: '2024-08-09T20:00:00.000000Z'
          type: string
        retired:
          example: true
          type: boolean
        state:
          example: retired
          type: string
        url_name:
          example: prometheon
          type: string
      title: Recommended Card Retired
      type: object
    ChallengeRecommendedRetiredResponse:
      description: Schema definition for Challenge Recommended Retired Response
      properties:
        card1:
          $ref: '#/components/schemas/RecommendedCardRetired'
        card2:
          $ref: '#/components/schemas/RecommendedCardRetired'
      title: Challenge Recommended Retired Response
      type: object
    Messagesuccess:
      description: Schema definition for Message
      properties:
        message:
          description: Return message and success
          type: string
        success:
          type: boolean
      title: Message
      type: object
    ChallengeReviewsUserIdResponse:
      description: Schema definition for Challenge Reviews User Id Response
      properties:
        info:
          nullable: true
          type: string
      title: Challenge Reviews User Id Response
      type: object
    ChallengeStartResponse:
      description: Schema definition for Challenge Start Response
      properties:
        id:
          example: 1214160
          type: integer
        message:
          example: Instance Created!
          type: string
      title: Challenge Start Response
      type: object
    ChallengeSuggestedData:
      properties:
        challenge_category_name:
          type: string
        id:
          type: integer
        name:
          type: string
        play_methods:
          $ref: '#/components/schemas/StringArray'
        url_name:
          type: string
      type: object
    ChallengeSuggestedResponse:
      description: Schema definition for Challenge Suggested Response
      properties:
        data:
          $ref: '#/components/schemas/ChallengeSuggestedData'
        message:
          type: string
        status:
          type: boolean
      title: Challenge Suggested Response
      type: object
    OfficialWriteup:
      properties:
        filename:
          type: string
        sha256:
          type: string
        url:
          type: string
        video_url:
          example: https://www.youtube.com/watch?v=bv08UcIL1po
          type: string
          nullable: true
      type: object
    WriteupData:
      properties:
        official:
          $ref: '#/components/schemas/OfficialWriteup'
      type: object
    ChallengeWriteupResponse:
      description: Schema definition for Challenge Writeup Response
      properties:
        data:
          $ref: '#/components/schemas/WriteupData'
      title: Challenge writeups
      type: object
    ChallengeRetires:
      properties:
        name:
          type: string
        difficulty:
          type: string
      type: object
      nullable: true
    ChallengeList:
      description: Schema definition for Challenge List
      properties:
        auth_user_has_reviewed:
          example: false
          type: boolean
        avatar:
          example: null
          nullable: true
          type: string
        category_id:
          example: 4
          type: integer
        category_name:
          example: Pwn
          type: string
        difficulty:
          example: Very Easy
          type: string
        difficulty_chart:
          $ref: '#/components/schemas/DifficultyChart'
        id:
          example: 706
          type: integer
        is_owned:
          example: false
          type: boolean
        name:
          example: Regularity
          type: string
        pinned:
          type: boolean
        play_methods:
          $ref: '#/components/schemas/StringArray'
        rating:
          example: 4
          format: float
          nullable: true
          type: number
        rating_count:
          example: 1
          type: integer
        release_date:
          example: '2024-06-07T20:00:00.000000Z'
          format: date-time
          type: string
        retires:
          $ref: '#/components/schemas/ChallengeRetires'
        solves:
          example: 132
          type: integer
        state:
          example: retired
          type: string
        user_difficulty:
          example: '3.33'
          type: string
      title: Challenge List
      type: object
    ChallengeListData:
      items:
        $ref: '#/components/schemas/ChallengeList'
      type: array
    Links:
      description: Schema definition for Links
      properties:
        first:
          example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=1
          type: string
        last:
          example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=11
          type: string
        next:
          example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=2
          nullable: true
          type: string
        prev:
          example: null
          nullable: true
          type: string
      title: Links
      type: object
    PaginationLink:
      description: Schema definition for Pagination Link
      properties:
        active:
          example: true
          type: boolean
        label:
          example: '1'
          type: string
        url:
          example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=1
          nullable: true
          type: string
      title: Pagination Link
      type: object
    PaginationLinks:
      items:
        $ref: '#/components/schemas/PaginationLink'
      type: array
    Meta:
      description: Schema definition for Meta
      properties:
        current_page:
          example: 1
          type: integer
        from:
          example: 1
          type: integer
        last_page:
          example: 11
          type: integer
        links:
          $ref: '#/components/schemas/PaginationLinks'
        path:
          example: https://labs.hackthebox.com/api/v4/prolab/1/reviews
          type: string
        per_page:
          example: 15
          type: integer
        to:
          example: 15
          type: integer
        total:
          example: 162
          type: integer
      title: Meta
      type: object
    ChallengeListResponse:
      description: Schema definition for Challenge List Response
      properties:
        data:
          $ref: '#/components/schemas/ChallengeListData'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      title: Challenge List Response
      type: object
    Change:
      description: Schema definition for Change
      properties:
        changelog_id:
          example: 41
          type: integer
        id:
          example: 146
          type: integer
        text:
          example: We have introduced a new paid submission initiative, aiming to further improve the quality of our challenges and reward our valuable community members who wish to contribute to our weekly release roadmap.
          type: string
        type:
          example: change
          type: string
      title: Change
      type: object
    Changes:
      items:
        $ref: '#/components/schemas/Change'
      type: array
    ChangeLog:
      description: Schema definition for Change Log
      properties:
        changes:
          $ref: '#/components/schemas/Changes'
        created_at:
          example: '2021-11-12T10:38:24.000000Z'
          format: date-time
          type: string
        description:
          example: null
          nullable: true
          type: string
        id:
          example: 41
          type: integer
        version:
          example: 3.18.0
          type: string
      title: Change Log
      type: object
    ChangeLogsItems:
      items:
        $ref: '#/components/schemas/ChangeLog'
      type: array
    ChangeLogsResponse:
      description: Schema definition for Change Logs Response
      properties:
        changelogs:
          $ref: '#/components/schemas/ChangeLogsItems'
      title: Change Log Response
      type: object
    Connection:
      properties:
        down:
          type: number
        ip4:
          type: string
        ip6:
          type: string
        name:
          type: string
        through_pwnbox:
          type: boolean
        up:
          type: number
      type: object
    ConnectionServer:
      properties:
        friendly_name:
          type: string
        hostname:
          type: string
        id:
          type: integer
        pro_lab_id:
          type: integer
      type: object
    ConnectionStatusItem:
      properties:
        connection:
          $ref: '#/components/schemas/Connection'
        location_type_friendly:
          type: string
        server:
          $ref: '#/components/schemas/ConnectionServer'
        type:
          type: string
        connection_type:
          type: string
      type: object
    ConnectionStatusResponse:
      description: Schema definition for Connection Status Response
      items:
        $ref: '#/components/schemas/ConnectionStatusItem'
      title: Connection Status Response
      type: array
    ConnectionStatusProductData:
      properties:
        connection:
          $ref: '#/components/schemas/Connection'
        location_type_friendly:
          type: string
        server:
          $ref: '#/components/schemas/ConnectionServer'
      type: object
    ConnectionStatusProductResponse:
      properties:
        data:
          $ref: '#/components/schemas/ConnectionStatusProductData'
        status:
          type: boolean
        type:
          type: string
      type: object
    ServerConnection:
      description: Schema definition for Assigned Server
      nullable: true
      properties:
        current_clients:
          example: 85
          type: integer
        friendly_name:
          example: US VIP+ 1
          type: string
        id:
          example: 289
          type: integer
        location:
          example: US
          type: string
      title: Assigned Server
      type: object
    ConnectionLab:
      properties:
        assigned_server:
          $ref: '#/components/schemas/ServerConnection'
        can_access:
          type: boolean
        location_type_friendly:
          type: string
      type: object
    CommonIdName:
      description: Schema definition for Common Id Name
      properties:
        id:
          type: integer
        name:
          type: string
      title: Common Id Name
      type: object
    ConnectionProlabLab:
      properties:
        assigned_server:
          $ref: '#/components/schemas/ServerConnection'
          nullable: true
        can_access:
          type: boolean
        location_type_friendly:
          nullable: true
          type: string
        pro_lab:
          $ref: '#/components/schemas/CommonIdName'
      type: object
    ConnectionProlab:
      properties:
        assigned_server:
          $ref: '#/components/schemas/ServerConnection'
        can_access:
          type: boolean
        fullhouse:
          $ref: '#/components/schemas/ConnectionProlabLab'
        solar:
          $ref: '#/components/schemas/ConnectionProlabLab'
      type: object
    ConnectionMachine:
      properties:
        id:
          type: integer
        name:
          type: string
        avatar_thumb_url:
          type: string
      type: object
    ConnectionCompetitive:
      properties:
        assigned_server:
          $ref: '#/components/schemas/ServerConnection'
        can_access:
          type: boolean
        location_type_friendly:
          type: string
        available:
          type: boolean
        machine:
          $ref: '#/components/schemas/ConnectionMachine'
      type: object
    ConnectionsData:
      properties:
        fortresses:
          $ref: '#/components/schemas/ConnectionLab'
        lab:
          $ref: '#/components/schemas/ConnectionLab'
        pro_labs:
          $ref: '#/components/schemas/ConnectionProlab'
        competitive:
          $ref: '#/components/schemas/ConnectionCompetitive'
        starting_point:
          $ref: '#/components/schemas/ConnectionLab'
      type: object
    ConnectionsResponse:
      description: Schema definition for Connections Response
      properties:
        data:
          $ref: '#/components/schemas/ConnectionsData'
        status:
          type: boolean
      title: Connections Response
      type: object
    AssignedServerConnectionsServers:
      description: Schema definition for Assigned Server
      nullable: true
      properties:
        current_clients:
          example: 85
          type: integer
        friendly_name:
          example: US VIP+ 1
          type: string
        id:
          example: 289
          type: integer
        location:
          example: US
          type: string
        location_type_friendly:
          type: string
        pro_lab_id:
          type: integer
      title: Assigned Server
      type: object
    Server:
      description: Schema definition for Server
      properties:
        current_clients:
          example: 85
          type: integer
        friendly_name:
          example: US VIP+ 1
          type: string
        full:
          example: false
          type: boolean
        id:
          example: 289
          type: integer
        location:
          example: US
          type: string
      title: Server
      type: object
    ServerGroup:
      description: Schema definition for Server Group
      properties:
        location:
          example: EU
          type: string
        name:
          example: EU - Free
          type: string
        servers:
          additionalProperties:
            $ref: '#/components/schemas/Server'
          type: object
      title: Server Group
      type: object
    Options:
      additionalProperties:
        additionalProperties:
          $ref: '#/components/schemas/ServerGroup'
        type: object
      description: Schema definition for Options
      title: Options
      type: object
    ConnectionsServerData:
      properties:
        assigned:
          $ref: '#/components/schemas/AssignedServerConnectionsServers'
        disabled:
          example: false
          type: boolean
        options:
          $ref: '#/components/schemas/Options'
      type: object
    ConnectionsServerResponse:
      description: Schema definition for Connections Server Response
      properties:
        data:
          $ref: '#/components/schemas/ConnectionsServerData'
        status:
          type: boolean
      title: Connections Server Response
      type: object
    ConnectionsServersProlabData:
      properties:
        assigned:
          $ref: '#/components/schemas/AssignedServerConnectionsServers'
        options:
          $ref: '#/components/schemas/Options'
      type: object
    ConnectionsServersProlabResponse:
      properties:
        data:
          $ref: '#/components/schemas/ConnectionsServersProlabData'
        status:
          type: boolean
      type: object
    ConnectionServerSwitchResponse:
      description: Schema definition for Connection Server Switch Response
      properties:
        data:
          $ref: '#/components/schemas/ServerConnection'
        message:
          example: VPN server switched
          type: string
        status:
          example: true
          type: boolean
      title: Connection Server Switch Resposne
      type: object
    ContentStatsResponse:
      description: Schema definition for Content Stats Response
      properties:
        challenges:
          example: 533
          type: integer
        machines:
          example: 388
          type: integer
      title: Content Stats Resposne
      type: object
    Company:
      description: Schema definition for Company
      properties:
        description:
          example: <p>Jet.com is currently looking for Security Engineers in the USA.</p>...
          format: html
          type: string
        id:
          example: 3
          type: integer
        image:
          example: https://labs.hackthebox.com/storage/companies/3.png
          type: string
        name:
          example: Jet.com
          type: string
        url:
          example: https://jet.com/careers
          type: string
      title: Company
      type: object
    Flag:
      description: Schema definition for Flag
      properties:
        id:
          example: 1
          type: integer
        owned:
          example: false
          type: boolean
        points:
          example: 5
          type: integer
        title:
          example: Connect
          type: string
      title: Flag
      type: object
    FlagsItems:
      items:
        $ref: '#/components/schemas/Flag'
      type: array
    UserAvailability:
      description: Schema definition for User Availability
      properties:
        available:
          example: true
          type: boolean
        code:
          example: 0
          type: integer
        message:
          nullable: true
          type: string
      title: User Availability
      type: object
    FortressData:
      description: Schema definition for Fortress Data
      properties:
        company:
          $ref: '#/components/schemas/Company'
        completion_message:
          example: null
          nullable: true
          type: string
        cover_image_url:
          example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_cover_full.png
          type: string
        description:
          example: Lift off with this introductory fortress from Jet! Featuring interesting web vectors and challenges, this fortress is perfect for those getting started.
          type: string
        flags:
          $ref: '#/components/schemas/FlagsItems'
        has_completion_message:
          example: false
          type: boolean
        id:
          example: 1
          type: integer
        image:
          example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_logo.svg
          type: string
        ip:
          example: 10.13.37.10
          format: ipv4
          type: string
        name:
          example: Jet
          type: string
        players_completed:
          example: 2504
          type: integer
        points:
          example: '100'
          type: string
        progress_percent:
          example: 0
          type: number
        reset_votes:
          example: 0
          type: integer
        user_availability:
          $ref: '#/components/schemas/UserAvailability'
      title: Fortress Data
      type: object
    FortressIdResponse:
      description: Schema definition for Fortress Id Response
      properties:
        data:
          $ref: '#/components/schemas/FortressData'
        status:
          example: true
          type: boolean
      title: Fortress Id Response
      type: object
    ProductFlagsResponse:
      description: Schema definition for Prodcut Flags Response
      properties:
        data:
          $ref: '#/components/schemas/FlagsItems'
        status:
          example: true
          type: boolean
      title: Product Flags Response
      type: object
    GameResetResponse:
      description: Vote Reset Game
      properties:
        message:
          example: Voted
          type: string
        status:
          example: true
          type: boolean
      type: object
    Fortress:
      description: Schema definition for Fortress
      properties:
        cover_image_url:
          example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_cover_small.png
          format: uri
          type: string
        id:
          example: 1
          type: integer
        image:
          example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_logo.svg
          format: uri
          type: string
        name:
          example: Jet
          type: string
        new:
          example: false
          type: boolean
        number_of_flags:
          example: 11
          type: integer
      title: Fortress
      type: object
    FortressesResponse:
      description: Schema definition for Fortresses Response
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/Fortress'
          type: object
        status:
          example: true
          type: boolean
      title: Fortresses Response
      type: object
    HomeBannerItem:
      properties:
        image:
          type: string
        link:
          type: string
        new_window:
          type: boolean
      type: object
    HomeBannerItems:
      items:
        $ref: '#/components/schemas/HomeBannerItem'
      type: array
    HomeBannerResponse:
      description: Schema definition for Home Banner Response
      properties:
        data:
          $ref: '#/components/schemas/HomeBannerItems'
      title: Home Banner Response
      type: object
    HomeRecommendedChallengeItems:
      properties:
        avatar:
          type: string
        categoryID:
          type: integer
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        points:
          nullable: true
          type: integer
        type:
          type: string
        url:
          type: string
        urlName:
          type: string
      type: object
    HomeRecommendedChallengeCard:
      description: Schema definition for Home Challenge Card
      items:
        $ref: '#/components/schemas/HomeRecommendedChallengeItems'
        nullable: true
      title: Home Challenge Card
      type: array
    HomeRecommendedMachineCardItem:
      properties:
        avatar:
          type: string
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        os:
          type: string
        points:
          nullable: true
          type: number
        type:
          type: string
        url:
          type: string
      type: object
    HomeRecommendedMachineCard:
      description: Schema definition for Home Machine Card
      items:
        $ref: '#/components/schemas/HomeRecommendedMachineCardItem'
        nullable: true
      title: Home Machine Card
      type: array
    HomeRecommendedProlabCardItem:
      properties:
        avatar:
          nullable: true
          type: string
        difficulty:
          type: string
        id:
          type: integer
        identifier:
          type: string
        name:
          type: string
        points:
          type: integer
        type:
          type: string
        url:
          type: string
      type: object
    HomeRecommendedProlabCard:
      description: Schema definition for Home Prolab Card
      items:
        $ref: '#/components/schemas/HomeRecommendedProlabCardItem'
        nullable: true
      title: Home Prolab Card
      type: array
    HomeRecommendedSherlocksCardItem:
      properties:
        avatar:
          type: string
        categoryID:
          type: integer
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        url:
          type: string
        urlName:
          type: string
      type: object
    HomeRecommendedSherlocksCard:
      description: Schema definition for Home Tracks Card
      items:
        $ref: '#/components/schemas/HomeRecommendedSherlocksCardItem'
        nullable: true
      title: Home Tracks Card
      type: array
    SpsCardItem:
      properties:
        avatar:
          type: string
        completion_percentage:
          type: integer
        free_machine_completion_percentage:
          type: integer
        id:
          type: integer
        name:
          type: string
      type: object
    SpsCard:
      description: Schema definition for Home Sps Card
      items:
        $ref: '#/components/schemas/SpsCardItem'
        nullable: true
      title: Home SPS Card
      type: array
    HomeRecommendedTracksCardItem:
      properties:
        avatar:
          type: string
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        points:
          type: integer
        progress:
          type: integer
        url:
          type: string
      type: object
    HomeRecommendedTracksCard:
      description: Schema definition for Home Tracks Card
      items:
        $ref: '#/components/schemas/HomeRecommendedTracksCardItem'
        nullable: true
      title: Home Tracks Card
      type: array
    HomeRecommendedData:
      properties:
        challenges:
          $ref: '#/components/schemas/HomeRecommendedChallengeCard'
        machines:
          $ref: '#/components/schemas/HomeRecommendedMachineCard'
        prolabs:
          $ref: '#/components/schemas/HomeRecommendedProlabCard'
        sherlocks:
          $ref: '#/components/schemas/HomeRecommendedSherlocksCard'
        sps:
          $ref: '#/components/schemas/SpsCard'
        tracks:
          $ref: '#/components/schemas/HomeRecommendedTracksCard'
      type: object
    HomeRecommendedRepsonse:
      description: Schema definition for Home Recommended Repsonse
      properties:
        data:
          $ref: '#/components/schemas/HomeRecommendedData'
      title: Home Recommended Repsonse
      type: object
    HomeUserProgressFortressItem:
      properties:
        avatar:
          example: /storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_logo.svg
          type: string
        id:
          example: 1
          type: integer
        name:
          example: Jet
          type: string
        percentage:
          example: 54.55
          format: float
          type: number
        points:
          example: 100
          type: integer
        url:
          example: /fortresses/1
          type: string
      type: object
    HomeUserProgressFortressesCard:
      additionalProperties:
        $ref: '#/components/schemas/HomeUserProgressFortressItem'
      type: object
    HomeProgressMachineCardItem:
      properties:
        avatar:
          type: string
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        os:
          type: string
        points:
          nullable: true
          type: number
        root_flag:
          type: integer
        url:
          type: string
        user_flag:
          type: integer
      type: object
    HomeProgressMachineCard:
      description: Schema definition for Home Machine Card
      items:
        $ref: '#/components/schemas/HomeProgressMachineCardItem'
        nullable: true
      title: Home Machine Card
      type: array
    HomeProgressProlabItems:
      properties:
        avatar:
          nullable: true
          type: string
        difficulty:
          type: string
        id:
          type: integer
        identifier:
          type: string
        name:
          type: string
        percentage:
          example: 54.55
          format: float
          type: number
        points:
          type: string
      type: object
    HomeProgressProlabCard:
      description: Schema definition for Home Prolab Card
      items:
        $ref: '#/components/schemas/HomeProgressProlabItems'
        nullable: true
      title: Home Prolab Card
      type: array
    HomeProgresTracksCardItem:
      properties:
        avatar:
          type: string
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        percentage:
          example: 54.55
          format: float
          type: number
        points:
          type: integer
        url:
          type: string
      type: object
    HomeProgressTracksCard:
      additionalProperties:
        $ref: '#/components/schemas/HomeProgresTracksCardItem'
      description: Schema definition for Home Tracks Card
      title: Home Tracks Card
      type: object
    HomeUserProgressData:
      properties:
        fortresses:
          $ref: '#/components/schemas/HomeUserProgressFortressesCard'
        machines:
          $ref: '#/components/schemas/HomeProgressMachineCard'
        prolabs:
          $ref: '#/components/schemas/HomeProgressProlabCard'
        sps:
          $ref: '#/components/schemas/SpsCard'
        tracks:
          $ref: '#/components/schemas/HomeProgressTracksCard'
      type: object
    HomeUserProgressResponse:
      description: Schema definition for Home User Progress Response
      properties:
        data:
          $ref: '#/components/schemas/HomeUserProgressData'
      title: Home User Progress Response
      type: object
    HomeTodoChallengeCardItem:
      properties:
        avatar:
          type: string
        challenge_category_id:
          type: integer
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        points:
          nullable: true
          type: string
        url:
          type: string
        url_name:
          type: string
      type: object
    HomeTodoChallengeCard:
      description: Schema definition for Home Challenge Card
      items:
        $ref: '#/components/schemas/HomeTodoChallengeCardItem'
        nullable: true
      title: Home Challenge Card
      type: array
    HomeTodoMachineCardItem:
      properties:
        avatar:
          type: string
        difficulty:
          type: string
        id:
          type: integer
        name:
          type: string
        os:
          type: string
        points:
          nullable: true
          type: number
        root_flag:
          type: boolean
        root_flag_only:
          type: boolean
        url:
          type: string
        user_flag:
          type: boolean
      type: object
    HomeTodoMachineCard:
      description: Schema definition for Home Machine Card
      items:
        $ref: '#/components/schemas/HomeTodoMachineCardItem'
        nullable: true
      title: Home Machine Card
      type: array
    HomeTodoProlabCardItem:
      properties:
        avatar:
          nullable: true
          type: string
        difficulty:
          type: string
        id:
          type: integer
        identifier:
          type: string
        name:
          type: string
        points:
          type: string
        progress:
          type: number
        url:
          type: string
      type: object
    HomeTodoProlabCard:
      description: Schema definition for Home Prolab Card
      items:
        $ref: '#/components/schemas/HomeTodoProlabCardItem'
        nullable: true
      title: Home Prolab Card
      type: array
    HomeUserTodoData:
      properties:
        challenges:
          $ref: '#/components/schemas/HomeTodoChallengeCard'
        machines:
          $ref: '#/components/schemas/HomeTodoMachineCard'
        prolabs:
          $ref: '#/components/schemas/HomeTodoProlabCard'
        tracks:
          $ref: '#/components/schemas/HomeRecommendedTracksCard'
      type: object
    HomeUserTodoRepsonse:
      description: Schema definition for Home User Todo Repsonse
      properties:
        data:
          $ref: '#/components/schemas/HomeUserTodoData'
      title: Home User Todo Repsonse
      type: object
    LabCategory:
      description: Schema definition for Lab Category
      properties:
        code:
          example: aufree
          type: string
        location:
          example: AU
          type: string
        name:
          example: AU - Free Lab
          type: string
      title: Lab Category
      type: object
    LabListCategoriesItems:
      items:
        $ref: '#/components/schemas/LabCategory'
      type: array
    LabServer:
      description: Schema definition for Lab Server
      properties:
        current_clients:
          example: 85
          type: integer
        friendly_name:
          example: US VIP+ 1
          type: string
        id:
          example: 289
          type: integer
      title: Lab Server
      type: object
    LabListServersItems:
      items:
        $ref: '#/components/schemas/LabServer'
      type: array
    LabListResponse:
      description: Schema definition for Lab List Response
      properties:
        disabled:
          example: false
          type: boolean
        lab_categories:
          $ref: '#/components/schemas/LabListCategoriesItems'
        lab_category_code:
          example: usdedivip
          type: string
        release_arena_labs:
          $ref: '#/components/schemas/LabListCategoriesItems'
        server_id:
          example: 289
          type: integer
        servers:
          $ref: '#/components/schemas/LabListServersItems'
      title: Lab List Response
      type: object
    ActiveMachineInfo:
      properties:
        avatar:
          example: /storage/avatars/23e804513a47e8f20bc865d0419946e1.png
          type: string
        expires_at:
          example: '2024-05-18 17:42:04'
          type: string
        id:
          example: 597
          type: integer
        ip:
          example: 10.129.56.30
          format: ipv4
          nullable: true
          type: string
        isSpawning:
          example: false
          type: boolean
        lab_server:
          example: vip_lab
          type: string
        name:
          example: Usage
          type: string
        tier_id:
          example: null
          nullable: true
          type: string
        type:
          example: Free
          type: string
        voted:
          example: null
          nullable: true
          type: string
        voting:
          example: null
          nullable: true
          type: string
        vpn_server_id:
          example: 289
          nullable: true
          type: integer
      type: object
    ActiveMachineInfoWrapper:
      allOf:
        - $ref: '#/components/schemas/ActiveMachineInfo'
      nullable: true
      type: object
    ActiveMachineResponse:
      properties:
        info:
          $ref: '#/components/schemas/ActiveMachineInfoWrapper'
      type: object
    MachineAcitivtyItem:
      properties:
        blood_type:
          nullable: true
          type: string
        created_at:
          type: string
        date:
          type: string
        date_diff:
          type: string
        type:
          type: string
        user_avatar:
          type: string
        user_id:
          type: integer
        user_name:
          type: string
      type: object
    MachineActivityItems:
      items:
        $ref: '#/components/schemas/MachineAcitivtyItem'
      type: array
    MachineActivityInfo:
      properties:
        activity:
          $ref: '#/components/schemas/MachineActivityItems'
        server:
          type: string
      type: object
    MachineActivityIdResponse:
      description: Schema definition for Machine Activity Id Response
      properties:
        info:
          $ref: '#/components/schemas/MachineActivityInfo'
      title: Machine Activity Id Response
      type: object
    MachineChangeLogItem:
      properties:
        created_at:
          type: string
        description:
          type: string
        id:
          type: integer
        machine_id:
          type: integer
        released:
          type: integer
        title:
          type: string
        type:
          type: string
        updated_at:
          type: string
        user_id:
          type: integer
      type: object
    MachineChangeLogItems:
      items:
        $ref: '#/components/schemas/MachineChangeLogItem'
      type: array
    MachineChangelogIdResponse:
      description: Schema definition for Machine Changelog Id Response
      properties:
        info:
          $ref: '#/components/schemas/MachineChangeLogItems'
      title: Machine Changelog Id Response
      type: object
    PeriodsStringArray:
      items:
        $ref: '#/components/schemas/StringArray'
      type: array
    MachineGraphActivityInfo:
      properties:
        periods:
          $ref: '#/components/schemas/PeriodsStringArray'
        resets:
          $ref: '#/components/schemas/IntArray'
        system_owns:
          $ref: '#/components/schemas/IntArray'
        user_owns:
          $ref: '#/components/schemas/IntArray'
      type: object
    MachineGraphActivityIdResponse:
      description: Schema definition for Machine Graph Activity Id Response
      properties:
        info:
          $ref: '#/components/schemas/MachineGraphActivityInfo'
      title: Machine Graph Activity Id Response
      type: object
    UserBasicInfoWithRespect:
      nullable: true
      properties:
        avatar:
          example: /storage/avatars/3453459704ee924e218ba13453453453.png
          type: string
          nullable: true
        id:
          example: 234234
          type: integer
        name:
          example: aname
          type: string
        isRespected:
          type: boolean
          example: false
      title: User Basic Info with Respect
      type: object
    UserBasicInfoItemsWithRespect:
      items:
        $ref: '#/components/schemas/UserBasicInfoWithRespect'
      nullable: true
      type: array
    MachineCreatorResponse:
      description: Schema definition for Machine Creator Resposne
      properties:
        creator:
          $ref: '#/components/schemas/UserBasicInfoItemsWithRespect'
        cocreators:
          $ref: '#/components/schemas/UserBasicInfoItemsWithRespect'
      type: object
      title: Machine Creator Response
    MatrixInfo:
      properties:
        ctf:
          type: number
        custom:
          type: number
        cve:
          type: number
        enum:
          type: number
        real:
          type: number
      type: object
    MachineGraphMatrixInfo:
      properties:
        aggregate:
          $ref: '#/components/schemas/MatrixInfo'
        maker:
          $ref: '#/components/schemas/MatrixInfo'
        user:
          $ref: '#/components/schemas/MatrixInfo'
      type: object
    MachineGraphMatrixIdResponse:
      description: Schema definition for Machine Graph Matrix Id Response
      properties:
        info:
          $ref: '#/components/schemas/MachineGraphMatrixInfo'
      title: Machine Graph Matrix Id Response
      type: object
    MachineGraphOwnsDifficultyInfoItem:
      properties:
        root:
          type: integer
        user:
          type: integer
      type: object
    MachineGraphOwnsDifficultyInfoItems:
      properties:
        '1':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '2':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '3':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '4':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '5':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '6':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '7':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '8':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '9':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
        '10':
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItem'
      type: object
    MachineGraphOwnsDifficultyIdResponse:
      description: Schema definition for Machine Graph Owns Difficulty Id Response
      properties:
        info:
          $ref: '#/components/schemas/MachineGraphOwnsDifficultyInfoItems'
      title: Machine Graph Owns Difficulty Id Response
      type: object
    Label:
      description: Schema definition for Label
      properties:
        color:
          type: string
        name:
          type: string
      title: Label
      type: object
    LabelItems:
      items:
        $ref: '#/components/schemas/Label'
      type: array
    MachinePlayInfo:
      properties:
        expires_at:
          nullable: true
          type: string
        isActive:
          nullable: true
          type: boolean
      type: object
    MachineData:
      description: Schema definition for Machine Data
      properties:
        active:
          nullable: true
          type: boolean
        authUserHasReviewed:
          type: boolean
        authUserInRootOwns:
          type: boolean
        authUserInUserOwns:
          type: boolean
        avatar:
          type: string
        difficulty:
          type: integer
        difficultyText:
          type: string
        easy_month:
          type: integer
        feedbackForChart:
          $ref: '#/components/schemas/DifficultyChart'
        free:
          type: boolean
        id:
          type: integer
        ip:
          format: ipv4
          nullable: true
          type: string
        isTodo:
          oneOf:
            - type: boolean
            - type: integer
        is_competitive:
          type: boolean
        labels:
          $ref: '#/components/schemas/LabelItems'
        name:
          type: string
        os:
          type: string
        playInfo:
          $ref: '#/components/schemas/MachinePlayInfo'
        points:
          type: integer
        poweroff:
          type: integer
        recommended:
          type: integer
        release:
          format: date-time
          type: string
        root_owns_count:
          type: integer
        sp_flag:
          type: integer
        star:
          type: number
        static_points:
          type: integer
        user_owns_count:
          type: integer
      title: Machine Data
      type: object
    PaginatedMachineDataItems:
      items:
        $ref: '#/components/schemas/MachineData'
      type: array
    PaginatedMachineData:
      description: Schema definition for Paginated Machine Data
      properties:
        data:
          $ref: '#/components/schemas/PaginatedMachineDataItems'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      title: Paginated Machine Data
      type: object
    OwnRequest:
      description: Schema definition for Own Request
      properties:
        difficulty:
          example: 50
          type: integer
        flag:
          example: 0cc175b9c0f1b6a831c399e269772661
          type: string
        id:
          example: 597
          type: integer
      required:
        - id
        - flag
      title: Own Request
      type: object
    MachineOwnsTopItem:
      properties:
        avatar:
          type: string
        id:
          type: integer
        is_root_blood:
          type: boolean
        is_user_blood:
          type: boolean
        name:
          type: string
        own_date:
          type: string
        position:
          type: integer
        rank_id:
          type: integer
        rank_text:
          type: string
        root_own_time:
          type: string
        user_own_date:
          type: string
        user_own_time:
          type: string
      type: object
    MachineOwnsItems:
      items:
        $ref: '#/components/schemas/MachineOwnsTopItem'
      type: array
    MachineOwnsTopIdResponse:
      description: Schema definition for Machine Owns Top Id Response
      properties:
        info:
          $ref: '#/components/schemas/MachineOwnsItems'
      title: Machine Owns Top Id Response
      type: object
    AcademyDifficulty:
      properties:
        color:
          example: success
          type: string
        id:
          example: 3
          type: integer
        level:
          example: 3
          type: integer
        text:
          example: Easy
          type: string
        title:
          example: Easy
          type: string
      type: object
    AcademyTiers:
      properties:
        color:
          example: success
          type: string
        name:
          example: Tier I
          type: string
        number:
          example: 1
          type: integer
      type: object
    AcademyModule:
      description: Academy Module Item
      properties:
        aggregates:
          $ref: '#/components/schemas/StringArray'
        avatar:
          example: https://academy.hackthebox.com/storage/modules/19/avatar.png
          type: string
        difficulty:
          $ref: '#/components/schemas/AcademyDifficulty'
        id:
          example: 19
          type: integer
        logo:
          example: https://academy.hackthebox.com/storage/modules/19/avatar.png
          type: string
        name:
          example: Network Enumeration with Nmap
          type: string
        tier:
          $ref: '#/components/schemas/AcademyTiers'
        url:
          example: https://academy.hackthebox.com/course/preview/network-enumeration-with-nmap
          type: string
      title: Academy Module
      type: object
    AcademyModulesItems:
      items:
        $ref: '#/components/schemas/AcademyModule'
      nullable: true
      type: array
    Maker:
      description: Schema definition for Maker
      nullable: true
      properties:
        avatar:
          nullable: true
          type: string
        id:
          nullable: true
          type: integer
        isRespected:
          nullable: true
          type: boolean
        name:
          nullable: true
          type: string
      title: Maker
      type: object
    PlayInfo:
      description: Schema definition for Play Info
      properties:
        active_player_count:
          example: 1
          type: integer
        expires_at:
          format: date-time
          nullable: true
          type: string
        isActive:
          nullable: true
          type: boolean
        isSpawning:
          nullable: true
          type: boolean
        isSpawned:
          nullable: true
          type: boolean
      title: Play Info
      type: object
    UserBasicInfo:
      nullable: true
      properties:
        avatar:
          example: /storage/avatars/3453459704ee924e218ba13453453453.png
          type: string
        id:
          example: 234234
          type: integer
        name:
          example: aname
          type: string
      title: Review User
      type: object
    BloodInfo:
      description: Schema definition for Blood Info
      properties:
        blood_difference:
          type: string
        created_at:
          type: string
        user:
          $ref: '#/components/schemas/UserBasicInfo'
      title: Blood Info
      type: object
    MachineProfileInfo:
      description: Schema definition for Machine Profile Info
      properties:
        academy_modules:
          $ref: '#/components/schemas/AcademyModulesItems'
        active:
          type: boolean
        authUserFirstRootTime:
          example: 18H 6M 57S
          nullable: true
          type: string
        authUserFirstUserTime:
          example: 3H 47M 43S
          nullable: true
          type: string
        authUserHasReviewed:
          example: false
          type: boolean
        authUserHasSubmittedMatrix:
          example: false
          type: boolean
        authUserInRootOwns:
          example: true
          type: boolean
        authUserInUserOwns:
          example: true
          type: boolean
        avatar:
          example: /storage/avatars/a2c2bd7b4e98ff8b782ed590896305a1.png
          type: string
        can_access_walkthrough:
          example: false
          type: boolean
        difficultyText:
          example: Medium
          type: string
        feedbackForChart:
          $ref: '#/components/schemas/DifficultyChart'
        free:
          example: true
          type: boolean
        has_changelog:
          example: false
          type: boolean
        id:
          example: 601
          type: integer
        info_status:
          example: null
          nullable: true
          type: string
        ip:
          example: 10.10.10.10
          format: ipv4
          nullable: true
          type: string
        isGuidedEnabled:
          example: false
          type: boolean
        isTodo:
          type: boolean
        machine_mode:
          example: seasonal
          nullable: true
          type: string
        maker:
          $ref: '#/components/schemas/Maker'
        maker2:
          $ref: '#/components/schemas/Maker'
        name:
          example: SolarLab
          type: string
        os:
          example: Windows
          type: string
        ownRank:
          example: 292
          nullable: true
          type: integer
        playInfo:
          $ref: '#/components/schemas/PlayInfo'
        points:
          example: 30
          type: integer
        recommended:
          type: boolean
        release:
          example: '2024-05-11T19:00:00.000000Z'
          format: date-time
          type: string
        retired:
          type: boolean
        reviews_count:
          example: 71
          type: integer
        rootBlood:
          $ref: '#/components/schemas/BloodInfo'
        root_owns_count:
          example: 1355
          type: integer
        season_id:
          example: 5
          nullable: true
          type: integer
        show_go_vip:
          example: false
          type: boolean
        show_go_vip_server:
          example: false
          type: boolean
        sp_flag:
          example: 0
          type: integer
        stars:
          example: 4.6
          format: float
          type: number
        start_mode:
          example: spawn
          type: string
        static_points:
          example: 30
          type: integer
        synopsis:
          nullable: true
          type: string
        userBlood:
          $ref: '#/components/schemas/BloodInfo'
        user_can_review:
          example: false
          type: boolean
        user_owns_count:
          example: 1573
          type: integer
        priceTier:
          type: integer
        requiredSubscription:
          type: string
          nullable: true
        switchServerWarning:
          type: string
          nullable: true
        isSingleFlag:
          type: boolean
      title: Machine Profile Info
      type: object
    MachineProfileResponse:
      description: Schema definition for Machine Profile Response
      properties:
        info:
          $ref: '#/components/schemas/MachineProfileInfo'
      title: Machine Profile Response
      type: object
    MachineCard1:
      description: Schema definition for Machine Card
      properties:
        avatar:
          example: /storage/avatars/a2c2bd7b4e98ff8b782ed590896305a1.png
          type: string
        difficultyText:
          example: Medium
          type: string
        id:
          example: 601
          type: integer
        isTodo:
          type: boolean
        maker:
          $ref: '#/components/schemas/UserBasicInfo'
        maker2:
          $ref: '#/components/schemas/UserBasicInfo'
        name:
          example: SolarLab
          type: string
        os:
          example: Windows
          type: string
        points:
          example: 30
          type: integer
        release:
          example: '2024-05-11T16:00:00.000000Z'
          format: date-time
          type: string
        retired:
          example: 0
          type: integer
        retired_id:
          type: integer
        typeCard:
          example: seasonal
          type: string
      title: Machine Card
      type: object
    MachineCard2:
      description: Schema definition for Machine Card
      properties:
        authUserInRootOwns:
          example: false
          type: boolean
        authUserInUserOwns:
          example: false
          type: boolean
        avatar:
          example: /storage/avatars/a2c2bd7b4e98ff8b782ed590896305a1.png
          type: string
        difficultyText:
          example: Medium
          type: string
        feedbackForChart:
          $ref: '#/components/schemas/DifficultyChart'
          nullable: true
        id:
          example: 601
          type: integer
        name:
          example: SolarLab
          type: string
        os:
          example: Windows
          type: string
        points:
          example: 30
          type: integer
        release:
          example: '2024-05-11T16:00:00.000000Z'
          format: date-time
          type: string
        retired:
          example: 0
          type: integer
        retired_date:
          example: '2020-04-04T15:01:00.000000Z'
          format: date-time
          nullable: true
          type: string
        root_owns_count:
          example: 3347
          type: integer
        stars:
          example: 4.5
          format: float
          type: number
        typeCard:
          example: seasonal
          type: string
        user_owns_count:
          example: 4128
          type: integer
      title: Machine Card
      type: object
    RecommendedMachineResponse:
      description: Schema definition for Recommended Machine Response
      properties:
        card1:
          $ref: '#/components/schemas/MachineCard1'
        card2:
          $ref: '#/components/schemas/MachineCard2'
        state:
          $ref: '#/components/schemas/StringArray'
          example:
            - seasonal
            - staff_pick
      title: Recommended Machine Response
      type: object
    MachineRecommendedRetiredCard:
      properties:
        avatar:
          type: string
        difficultyText:
          type: string
        feedbackForChart:
          $ref: '#/components/schemas/DifficultyChart'
        id:
          type: integer
        name:
          type: string
        os:
          type: string
        release:
          type: string
        retired:
          type: integer
        retired_date:
          type: string
      type: object
    MachineRecommendedRetiredResponse:
      description: Schema definition for Machine Recommended Retired Response
      properties:
        card1:
          $ref: '#/components/schemas/MachineRecommendedRetiredCard'
        card2:
          $ref: '#/components/schemas/MachineRecommendedRetiredCard'
      title: Machine Recommended Retired Response
      type: object
    MachineReviewRequest:
      description: Schema definition for Machine Review Request
      properties:
        headline:
          example: Very funny machine
          type: string
        id:
          example: 444
          type: integer
        review:
          example: It is not so immediate but it is very funny!
          type: string
        stars:
          example: 5
          format: float
          type: number
      required:
        - id
        - stars
        - headline
        - review
      title: Machine Review Request
      type: object
    MachineReview:
      description: Schema definition for Machine Review
      properties:
        id:
          example: 444
          type: integer
        reviewed:
          example: true
          type: boolean
      title: Machine Review
      type: object
    MachineReviewMessageItems:
      items:
        $ref: '#/components/schemas/MachineReview'
      type: array
    MachineReviewResponse:
      description: Schema definition for Machine Review Response
      properties:
        message:
          $ref: '#/components/schemas/MachineReviewMessageItems'
      title: Machine Review Response
      type: object
    MachineReviewsUserIdResponse:
      description: Schema definition for Machine Reviews User Id Response
      properties:
        message:
          nullable: true
          type: string
      title: Machine Review User Id Response
      type: object
    HelpfulReviews:
      properties:
        id:
          type: integer
        review_id:
          type: integer
        user_id:
          type: integer
      type: object
    HelpfulReviewsItems:
      items:
        $ref: '#/components/schemas/HelpfulReviews'
      type: array
    MachineReviewsMessageItem:
      properties:
        authUserInHelpfulReviews:
          type: boolean
        created_at:
          type: string
        difficulty:
          nullable: true
          type: integer
        featured:
          type: integer
        helpful_reviews:
          $ref: '#/components/schemas/HelpfulReviewsItems'
        helpful_reviews_count:
          type: number
        id:
          type: integer
        message:
          nullable: true
          type: string
        released:
          type: number
        review:
          type: string
          nullable: true
        stars:
          type: number
        title:
          nullable: true
          type: string
        headline:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserBasicInfo'
        user_id:
          type: integer
      type: object
    MaschineReviewsMessageItems:
      items:
        $ref: '#/components/schemas/MachineReviewsMessageItem'
      type: array
    MachineReviewsResponse:
      properties:
        average:
          type: number
        count:
          type: number
        message:
          $ref: '#/components/schemas/MaschineReviewsMessageItems'
      type: object
    Tag:
      description: Schema definition for Tag
      properties:
        id:
          type: integer
        name:
          type: string
        tag_category_id:
          type: integer
      title: Tag
      type: object
    TagCategoryTagsItems:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    TagCategory:
      description: Schema definition for Tag Category
      properties:
        id:
          type: integer
        name:
          type: string
        tags:
          $ref: '#/components/schemas/TagCategoryTagsItems'
      title: Tag Category
      type: object
    MachinetagsListInfoItems:
      items:
        $ref: '#/components/schemas/TagCategory'
      type: array
    MachineTagsListResponse:
      description: Schema definition for Machine Tags List Response
      properties:
        info:
          $ref: '#/components/schemas/MachinetagsListInfoItems'
      title: Machine Tag List Response
      type: object
    MachineTagItems:
      properties:
        category:
          example: Category
          type: string
        id:
          example: 694
          type: integer
        name:
          example: Vulnerability Assessment
          type: string
      type: object
    MachineTagInfo:
      items:
        $ref: '#/components/schemas/MachineTagItems'
      type: array
    MachineTagIdResponse:
      description: Schema definition for Machine Tag Id Response
      properties:
        info:
          $ref: '#/components/schemas/MachineTagInfo'
      title: Machine Tag Id Response
      type: object
    UserBasicInfoItems:
      items:
        $ref: '#/components/schemas/UserBasicInfo'
      nullable: true
      type: array
    MachineRetiring:
      properties:
        avatar:
          type: string
        difficulty_text:
          type: string
        id:
          type: integer
        name:
          type: string
        os:
          type: string
      type: object
    MachineUnreleasedData:
      properties:
        avatar:
          type: string
        coCreators:
          $ref: '#/components/schemas/UserBasicInfoItems'
        difficulty:
          type: integer
        difficulty_text:
          type: string
        firstCreator:
          $ref: '#/components/schemas/UserBasicInfoItems'
        id:
          type: integer
        name:
          type: string
        os:
          type: string
        release:
          format: date-time
          type: string
        retiring:
          $ref: '#/components/schemas/MachineRetiring'
      type: object
    MachineUnreleasedDataItems:
      items:
        $ref: '#/components/schemas/MachineUnreleasedData'
      type: array
    MachineUnreleasedResponse:
      description: Schema definition for Machine Unreleased Response
      properties:
        data:
          $ref: '#/components/schemas/MachineUnreleasedDataItems'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      title: Machine Unreleased Response
      type: object
    MachineWalkthroughRandomResponse:
      properties:
        message:
          $ref: '#/components/schemas/UserBasicInfo'
      type: object
    MachineWalkthroughsLanguageListItem:
      properties:
        full_name:
          type: string
        id:
          type: integer
        short_name:
          type: string
      type: object
    MachineWalkthroughsLanguageListItems:
      items:
        $ref: '#/components/schemas/MachineWalkthroughsLanguageListItem'
      type: array
    MachineWalkthroughsLanguageListResponse:
      description: Schema definition for Machine Walkthroughs Language List Response
      properties:
        info:
          $ref: '#/components/schemas/MachineWalkthroughsLanguageListItems'
      title: Machine Walkthroughs Language List Response
      type: object
    MachineWalkthroughOfficialFeedbackChoicesResponse:
      properties:
        feedback_choices:
          $ref: '#/components/schemas/StringArray'
      type: object
    MachineWalkthroughMessageOfficial:
      properties:
        dislikedByUser:
          nullable: true
          type: number
        filename:
          type: string
        likedByUser:
          nullable: true
          type: boolean
        rating:
          type: number
        sha256:
          type: string
        threshold_for_display_reached:
          type: integer
        total_ratings:
          type: integer
      type: object
    MachineWalkthroughVideo:
      properties:
        creator_avatar:
          type: string
        creator_id:
          type: integer
        creator_name:
          type: string
        youtube_id:
          type: string
      type: object
    MachineWalkthroughMessageVideo:
      allOf:
        - $ref: '#/components/schemas/MachineWalkthroughVideo'
      nullable: true
      type: object
    MachineWalkthroughMessageWriteupsItem:
      properties:
        created_at:
          type: string
        disliked_by_user:
          nullable: true
          type: string
        id:
          type: integer
        language_code:
          nullable: true
          type: string
        language_name:
          nullable: true
          type: string
        liked_by_user:
          nullable: true
          type: string
        rating:
          type: integer
        total_ratings:
          type: integer
        url:
          type: string
        user_avatar:
          type: string
        user_id:
          type: integer
        user_name:
          type: string
      type: object
    MachineWalkthroughMessageWriteupsItems:
      items:
        $ref: '#/components/schemas/MachineWalkthroughMessageWriteupsItem'
      type: array
    MachineWalkthroughMessage:
      properties:
        official:
          $ref: '#/components/schemas/MachineWalkthroughMessageOfficial'
        under_review:
          nullable: true
          type: string
        video:
          $ref: '#/components/schemas/MachineWalkthroughMessageVideo'
        writeups:
          $ref: '#/components/schemas/MachineWalkthroughMessageWriteupsItems'
      type: object
    MachineWalkthroughIdResponse:
      description: Schema definition for Machine Walkthrough Id Response
      properties:
        message:
          $ref: '#/components/schemas/MachineWalkthroughMessage'
      title: Machine Walkthrough Id Response
      type: object
    TaskType:
      properties:
        id:
          type: integer
        text:
          type: string
      type: object
    MachinesAdventureItem:
      properties:
        completed:
          type: boolean
        description:
          nullable: true
          type: string
        flag_rating:
          nullable: true
          type: number
        hint:
          nullable: true
          type: string
        id:
          nullable: true
          type: integer
        masked_flag:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/TaskType'
      type: object
    MachinesAdventureItems:
      items:
        $ref: '#/components/schemas/MachinesAdventureItem'
      type: array
    MachinesAdventureResponse:
      properties:
        data:
          $ref: '#/components/schemas/MachinesAdventureItems'
      type: object
    BaseTask:
      properties:
        completed:
          type: boolean
        description:
          type: string
        hint:
          nullable: true
          type: string
        id:
          type: integer
        masked_flag:
          type: string
        options:
          $ref: '#/components/schemas/ObjectArray'
        prerequisite_id:
          nullable: true
          type: integer
        task_type:
          $ref: '#/components/schemas/TaskType'
        title:
          type: string
        type:
          $ref: '#/components/schemas/TaskType'
      type: object
    FlagRatingTaskExtension:
      properties:
        flag_rating:
          maximum: 5
          minimum: 1
          type: integer
      required:
        - flag_rating
      type: object
    FlagRatingTask:
      allOf:
        - $ref: '#/components/schemas/BaseTask'
        - $ref: '#/components/schemas/FlagRatingTaskExtension'
    MachineTasksData:
      items:
        oneOf:
          - $ref: '#/components/schemas/BaseTask'
          - $ref: '#/components/schemas/FlagRatingTask'
      type: array
    MachineTasksResponse:
      properties:
        data:
          $ref: '#/components/schemas/MachineTasksData'
      type: object
    NavigationMainRanking:
      properties:
        current_xp:
          type: number
        id:
          type: integer
        name:
          type: string
        next_rank_xp:
          type: number
      type: object
    UpcomingSeason:
      properties:
        date:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    NavigationNmainSeasonRanking:
      properties:
        latest_season:
          $ref: '#/components/schemas/CommonIdName'
        league:
          type: string
        rank:
          type: integer
        rank_suffix:
          type: string
        upcoming_season:
          $ref: '#/components/schemas/UpcomingSeason'
      type: object
    NavigationMainData:
      properties:
        ranking:
          $ref: '#/components/schemas/NavigationMainRanking'
        season_ranking:
          $ref: '#/components/schemas/NavigationNmainSeasonRanking'
        sso_linked:
          type: boolean
      type: object
    NavigationMainResponse:
      description: Schema definition for Navigation Main Response
      properties:
        data:
          $ref: '#/components/schemas/NavigationMainData'
      title: Navigation Main Response
      type: object
    NoticesItem:
      properties:
        dismissible:
          type: boolean
        id:
          type: integer
        message:
          type: string
        type:
          type: string
        url:
          type: string
        url_exact:
          type: boolean
      type: object
    NoticeDataItems:
      items:
        $ref: '#/components/schemas/NoticesItem'
      type: array
    NoticesResponse:
      description: Schema definition for Notices Response
      properties:
        data:
          $ref: '#/components/schemas/NoticeDataItems'
      title: Notices Response
      type: object
    FaqItem:
      description: Schema definition for Faq Item
      properties:
        answer:
          example: Individual Pro Labs subscriptions do not come with a write-up for users. Only our Enterprise-level Pro Labs subscriptions provide a write-up to the lab masters for documentation, training, and research purposes.
          type: string
        generic:
          example: true
          type: boolean
        question:
          example: Do Pro Lab subscriptions provide a write-up?
          type: string
      title: FAQ Item
      type: object
    ProlabFaqData:
      items:
        $ref: '#/components/schemas/FaqItem'
      type: array
    ProlabIdFaqResponse:
      description: Schema definition for Prolab Id Faq Response
      properties:
        data:
          $ref: '#/components/schemas/ProlabFaqData'
        status:
          example: true
          type: boolean
      title: Prolab Id Faq Response
      type: object
    UserIdNameThumb:
      description: Schema definition for Lab Master
      properties:
        avatar_thumb:
          example: /storage/avatars/2b44f5ca5458931c49e1fa57da6705c1_thumb.png
          type: string
        id:
          example: 11649
          type: integer
        name:
          example: RastaMouse
          type: string
      title: Lab Master
      type: object
    LabMasterItems:
      items:
        $ref: '#/components/schemas/UserIdNameThumb'
      type: array
    ProlabData:
      description: Schema definition for Prolab Data
      properties:
        active_users:
          example: 15
          type: integer
        can_interact:
          type: boolean
        cover_image_url:
          example: null
          nullable: true
          type: string
        description:
          example: <h4>RastaLabs</h4>...
          format: html
          type: string
        entry_points:
          $ref: '#/components/schemas/StringArray'
        id:
          example: 1
          type: integer
        identifier:
          type: string
        lab_masters:
          $ref: '#/components/schemas/LabMasterItems'
        lab_servers_count:
          example: 6
          type: integer
        mini:
          type: boolean
        name:
          example: RastaLabs
          type: string
        pro_flags_count:
          example: 22
          type: integer
        pro_machines_count:
          example: 15
          type: integer
        state:
          type: string
        version:
          example: '1.3'
          type: string
        video_url:
          example: null
          nullable: true
          type: string
        writeup:
          nullable: true
          type: string
      title: Prolab Data
      type: object
    ProlabIdInfoResponse:
      description: Schema definition for Prolab Id Info Response
      properties:
        data:
          $ref: '#/components/schemas/ProlabData'
        status:
          example: true
          type: boolean
      title: Prolab Id Info Response
      type: object
    Machine:
      description: Schema definition for Machine
      properties:
        avatar_thumb_url:
          example: https://labs.hackthebox.com/storage/avatars/f85bcb72ecffef8a5b2afd2fbc3ac153_thumb.png
          type: string
        id:
          example: 1
          type: integer
        name:
          example: RASTA-DC01
          type: string
        os:
          example: Windows
          type: string
      title: Machine
      type: object
    ProlabMachineData:
      items:
        $ref: '#/components/schemas/Machine'
      type: array
    ProlabIdMachineResponse:
      description: Schema definition for Prolab Id Machine Response
      properties:
        data:
          $ref: '#/components/schemas/ProlabMachineData'
        status:
          example: true
          type: boolean
      title: Prolab Id Machine Response
      type: object
    DesignatedLevel:
      description: Schema definition for Designated Level
      properties:
        category:
          example: Red team_ Operator
          type: string
        description:
          example: Hone your offensive tradecraft with a Red team_ Operator Level I lab. From gaining a foothold and establishing situational awareness, to exploiting interactive users and "living off the land", this will put your skills to the test.
          type: string
        level:
          example: 1
          type: integer
        team:
          example: red
          type: string
      title: Designated Level
      type: object
    SocialLinks:
      description: Schema definition for Social Links
      properties:
        discord:
          example: https://discord.gg/RnFKvTPYer
          type: string
        forum:
          example: https://forum.hackthebox.com/c/content/prolabs/18
          type: string
      title: Social Links
      type: object
    ProlabOverviewData:
      description: Schema definition for Prolab Overview Data
      properties:
        designated_level:
          $ref: '#/components/schemas/DesignatedLevel'
        excerpt:
          example: null
          nullable: true
          type: string
        id:
          example: 1
          type: integer
        identifier:
          type: string
        lab_masters:
          $ref: '#/components/schemas/LabMasterItems'
        mini:
          type: boolean
        name:
          example: RastaLabs
          type: string
        new_version:
          example: false
          type: boolean
        overview_image_url:
          example: null
          nullable: true
          type: string
        pro_flags_count:
          example: 22
          type: integer
        pro_machines_count:
          example: 15
          type: integer
        skill_level:
          example: INTERMEDIATE
          type: string
        social_links:
          $ref: '#/components/schemas/SocialLinks'
        state:
          type: string
        user_eligible_to_play:
          type: boolean
        version:
          example: '1.3'
          type: string
      title: Prolab Overview Data
      type: object
    ProlabIdOverviewResponse:
      description: Schema definition for Prolab Id Overview Response
      properties:
        data:
          $ref: '#/components/schemas/ProlabOverviewData'
        status:
          example: true
          type: boolean
      title: Prolab Id Overview Response
      type: object
    KeyedProLabMileStone:
      properties:
        description:
          type: string
        icon:
          type: string
        isMilestoneReached:
          type: boolean
        percent:
          type: number
        rarity:
          type: number
        text:
          type: string
      type: object
    KeyedProlabMileStoneItems:
      items:
        $ref: '#/components/schemas/KeyedProLabMileStone'
      type: array
    ProlabProgressData:
      properties:
        keyed_pro_lab_mile_stone:
          $ref: '#/components/schemas/KeyedProlabMileStoneItems'
        ownership:
          type: number
        ownership_required_for_certification:
          type: number
        user_eligible_for_certificate:
          type: boolean
      type: object
    ProlabProgressResponse:
      properties:
        data:
          $ref: '#/components/schemas/ProlabProgressData'
        status:
          type: boolean
      type: object
    ProlabRatingData:
      properties:
        rating:
          type: string
      type: object
    ProlabRatingResponse:
      properties:
        data:
          $ref: '#/components/schemas/ProlabRatingData'
      type: object
    ReviewProlab:
      description: Schema definition for Review Prolab
      properties:
        created_at:
          example: '2024-03-31T20:40:55.000000Z'
          format: date-time
          type: string
        difficulty:
          example: 8
          type: integer
        helpful_pro_feedbacks_count:
          example: 1
          type: integer
        id:
          example: 929
          type: integer
        rating:
          example: 5
          type: integer
        text:
          example: I really enjoyed the lab for a Red team_ experience
          type: string
        user:
          $ref: '#/components/schemas/UserIdNameThumb'
        user_in_helpful_pro_feedbacks:
          example: false
          type: boolean
      title: Review
      type: object
    ProlabReviewData:
      items:
        $ref: '#/components/schemas/ReviewProlab'
      type: array
    ProlabIdReviewsResponse:
      description: Schema definition for Prolab Id Reviews Response
      properties:
        data:
          $ref: '#/components/schemas/ProlabReviewData'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      title: Prolab Id Reviews Response
      type: object
    ReviewOverview:
      description: Schema definition for Review Overview
      properties:
        rating:
          example: 5
          type: integer
        text:
          example: The lab was one of the best CTF challenges I've come across. For a long time, I felt that it would be an awesome thing to have a platform where you can train your domain kung fu skills. Rastamouse and HTB made that happen. Amazing, Hard, Fun, Real. Thanks
          type: string
        user:
          $ref: '#/components/schemas/CommonIdName'
      title: Review Overview
      type: object
    ProlabReviewOverviewFeedbackItems:
      items:
        $ref: '#/components/schemas/ReviewOverview'
      type: array
    ProlabReviewsOverviewData:
      description: Schema definition for Prolab Reviews Overview Data
      properties:
        feedbacks:
          $ref: '#/components/schemas/ProlabReviewOverviewFeedbackItems'
        total_number_of_ratings:
          example: 0
          type: integer
        users_average_rating:
          example: 0
          format: float
          type: number
      title: Prolab Reviews Overview Data
      type: object
    ProlabIdReviewsOverviewResponse:
      description: Schema definition for Prolab Id Reviews Overview Response
      properties:
        data:
          $ref: '#/components/schemas/ProlabReviewsOverviewData'
        status:
          example: true
          type: boolean
      title: Prolab Id Reviews Overview Response
      type: object
    ProlabSubscription:
      properties:
        active:
          type: boolean
        ends_at:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        renews_at:
          nullable: true
          type: string
        subscription_period:
          type: string
        type:
          nullable: true
          type: string
      type: object
    ProlabSubscriptionResponse:
      properties:
        data:
          $ref: '#/components/schemas/ProlabSubscription'
        status:
          type: boolean
      type: object
    Prolab:
      description: Schema definition for Prolab
      properties:
        cover_img_url:
          example: null
          nullable: true
          type: string
        designated_category:
          example: Red team_ Operator
          type: string
        id:
          example: 1
          type: integer
        identifier:
          type: string
        lab_servers_count:
          example: 6
          type: integer
        level:
          example: 1
          type: integer
        mini:
          type: boolean
        name:
          example: RastaLabs
          type: string
        new:
          example: false
          type: boolean
        ownership:
          example: 0
          type: number
        pro_flags_count:
          example: 22
          type: integer
        pro_machines_count:
          example: 15
          type: integer
        release_at:
          example: '2018-01-02T06:00:00.000000Z'
          format: date-time
          type: string
        skill_level:
          example: INTERMEDIATE
          type: string
        state:
          type: string
        team:
          example: red
          type: string
        user_eligible_for_certificate:
          example: false
          type: boolean
      title: Prolab
      type: object
    ProlabDataItems:
      items:
        $ref: '#/components/schemas/Prolab'
      type: array
    ProlabsData:
      description: Inner container for Prolabs response
      properties:
        count:
          example: 6
          type: integer
        labs:
          $ref: '#/components/schemas/ProlabDataItems'
      type: object
    ProlabsResponse:
      description: Schema definition for Prolabs Response
      properties:
        data:
          $ref: '#/components/schemas/ProlabsData'
        status:
          example: true
          type: boolean
      title: Prolabs Response
      type: object
    PwnboxRequest:
      description: Schema definition for Pwnbox Request
      properties:
        location:
          enum:
            - us-east
            - us-west
            - uk
            - ca
            - in
            - de
            - au
          type: string
      required:
        - location
      title: Pwnbox Request
      type: object
    PwnboxStartData:
      description: Schema definition for Pwnbox Start Data
      properties:
        created_at:
          example: '2024-05-21T04:07:34.000000Z'
          format: date-time
          type: string
        expires_at:
          example: '2024-05-21T12:07:34.000000Z'
          format: date-time
          type: string
        flock_id:
          example: 2059436
          type: integer
        hostname:
          example: htb-jiczlqw6tg.htb-cloud.com
          type: string
        id:
          example: 232502
          type: integer
        is_ready:
          example: null
          nullable: true
          type: boolean
        life_remaining:
          example: 479
          type: integer
        location:
          example: us-east
          type: string
        proxy_url:
          example: proxy-us-east.htb-cloud.com
          type: string
        status:
          example: deploying
          type: string
        updated_at:
          example: '2024-05-21T04:07:34.000000Z'
          format: date-time
          type: string
        username:
          example: null
          nullable: true
          type: string
        vnc_password:
          example: null
          nullable: true
          type: string
        vnc_view_only_password:
          example: null
          nullable: true
          type: string
      title: Pwnbox Start Data
      type: object
    PwnboxStartResponse:
      description: Schema definition for Pwnbox Start Response
      properties:
        data:
          $ref: '#/components/schemas/PwnboxStartData'
      title: Pwnbox Start Response
      type: object
    PwnboxStatusNotRunningResponse:
      description: Schema definition for Pwnbox Status Not Running Response
      properties:
        message:
          type: string
      required:
        - message
      title: Pwnbox Status Not Running Response
      type: object
    PwnboxStatusRUnningData:
      properties:
        created_at:
          format: date-time
          type: string
        expires_at:
          format: date-time
          type: string
        flock_id:
          type: integer
        hostname:
          type: string
        id:
          type: integer
        is_ready:
          type: boolean
        life_remaining:
          type: integer
        location:
          type: string
        proxy_url:
          type: string
        spectate_url:
          type: string
        status:
          type: string
        updated_at:
          format: date-time
          type: string
        username:
          type: string
        vnc_password:
          type: string
        vnc_view_only_password:
          type: string
      type: object
    PwnboxStatusRunningResponse:
      description: Schema definition for Pwnbox Status Running Response
      properties:
        data:
          $ref: '#/components/schemas/PwnboxStatusRUnningData'
      required:
        - data
      title: Pwnbox Status Running Response
      type: object
    PwnboxUsageResponse:
      description: Schema definition for Pwnbox Usage Response
      properties:
        active_minutes:
          type: integer
        allowed:
          type: integer
        minutes:
          type: integer
        remaining:
          type: integer
        sessions:
          type: integer
        total:
          type: integer
        used:
          type: integer
      title: Pwnbox Usage Response
      type: object
    RankingDataTeamProperties:
      properties:
        avatar_url:
          type: string
        id:
          type: integer
        name:
          type: string
        rank:
          type: integer
        rank_growth:
          type: string
      type: object
    RankingDataUserProperties:
      properties:
        avatar:
          type: string
        id:
          type: integer
        name:
          type: string
        rank:
          type: integer
        rank_growth:
          type: string
      type: object
    RankingsData:
      properties:
        team:
          $ref: '#/components/schemas/RankingDataTeamProperties'
          nullable: true
        user:
          $ref: '#/components/schemas/RankingDataUserProperties'
      type: object
    RankingsResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingsData'
        status:
          type: boolean
      type: object
    RankingsCountriesItem:
      properties:
        challenge_owns:
          type: integer
        country:
          type: string
        fortress:
          type: integer
        members:
          type: integer
        name:
          type: string
        points:
          type: integer
        rank:
          type: integer
        ranks_diff:
          type: integer
        root_bloods:
          type: integer
        root_owns:
          type: integer
        user_bloods:
          type: integer
        user_owns:
          type: integer
      type: object
    RankingsCountriesItems:
      items:
        $ref: '#/components/schemas/RankingsCountriesItem'
      type: array
    RankingsCountries:
      properties:
        data:
          $ref: '#/components/schemas/RankingsCountriesItems'
        status:
          type: boolean
    RankingsCountryData:
      properties:
        date:
          type: string
        rank:
          type: integer
        rank_chart_data:
          $ref: '#/components/schemas/IntArray'
      type: object
    RankingsCountryBest:
      properties:
        data:
          $ref: '#/components/schemas/RankingsCountryData'
        status:
          type: boolean
    Country:
      properties:
        code:
          type: string
        name:
          type: string
      type: object
    RankingsCountryOverviewData:
      properties:
        chart_data:
          $ref: '#/components/schemas/IntArray'
        country:
          $ref: '#/components/schemas/Country'
        points_diff:
          type: integer
        points_growth:
          type: string
        ranks_diff:
          type: integer
      type: object
    RankingsCountryOverviewResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingsCountryOverviewData'
        status:
          type: boolean
    RankingsBracketData:
      properties:
        current_bracket:
          type: string
        next_bracket:
          nullable: true
          type: string
        points:
          type: integer
        points_for_next_bracket:
          nullable: true
          type: integer
        rank:
          type: integer
      type: object
    RankingsCountrRankingBracketResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingsBracketData'
        status:
          type: boolean
    RankingsItem:
      properties:
        avatar_thumb:
          type: string
        challenge_bloods:
          type: integer
        challenge_owns:
          type: integer
        country:
          type: string
        fortress:
          type: integer
        id:
          type: integer
        level:
          type: string
        name:
          type: string
        points:
          type: integer
        rank:
          type: integer
        ranks_diff:
          nullable: true
          type: number
        root_bloods:
          type: integer
        root_owns:
          type: integer
        user_bloods:
          type: integer
        user_owns:
          type: integer
      type: object
    RankingCountryRankingsItems:
      items:
        $ref: '#/components/schemas/RankingsItem'
      type: array
    RankingCountryMemberData:
      properties:
        country_name:
          type: string
        rankings:
          $ref: '#/components/schemas/RankingCountryRankingsItems'
      type: object
    RankingsCountryMembersResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingCountryMemberData'
        status:
          type: boolean
      type: object
    RankingsTeamBestData:
      properties:
        date:
          format: date
          type: string
        rank:
          format: int
          type: integer
        rank_chart_data:
          $ref: '#/components/schemas/IntArray'
      type: object
    RankingsTeamBestResponse:
      description: Schema definition for Rankings Team Best Response
      properties:
        data:
          $ref: '#/components/schemas/RankingsTeamBestData'
        status:
          type: boolean
      title: Rankings Team Best Response
      type: object
    RankingTeam:
      properties:
        avatar_thumb_url:
          type: string
        avatar_url:
          type: string
        id:
          format: int
          type: integer
        name:
          type: string
      type: object
    RankingsTeamOverviewData:
      properties:
        chart_data:
          $ref: '#/components/schemas/IntArray'
        points_diff:
          format: int
          type: integer
        points_growth:
          type: string
        ranks_diff:
          nullable: true
          type: integer
        team:
          $ref: '#/components/schemas/RankingTeam'
      type: object
    RankingsTeamOverviewResponse:
      description: Schema definition for Rankings Team Overview Response
      properties:
        data:
          $ref: '#/components/schemas/RankingsTeamOverviewData'
        status:
          type: boolean
      title: Rankings Team Overview Response
      type: object
    RankingsTeamRankingBacketData:
      properties:
        current_bracket:
          type: string
        next_bracket:
          nullable: true
          type: string
        points:
          format: int
          type: integer
        points_for_next_bracket:
          format: int
          nullable: true
          type: integer
        rank:
          format: int
          type: integer
      type: object
    RankingsTeamRankingBracketResponse:
      description: Schema definition for Rankings Team Ranking Bracket Response
      example:
        data:
          current_bracket: Top 20
          next_bracket: Top 10
          points: 1839
          points_for_next_bracket: 107
          rank: 14
        status: true
      properties:
        data:
          $ref: '#/components/schemas/RankingsTeamRankingBacketData'
        status:
          type: boolean
      title: Rankings Team Ranking Bracket Response
      type: object
    RankingsTeamItem:
      properties:
        avatar_thumb_url:
          type: string
        challenge_bloods:
          format: int
          type: integer
        challenge_owns:
          format: int
          type: integer
        country:
          nullable: true
          type: string
        fortress:
          format: int
          type: integer
        id:
          format: int
          type: integer
        name:
          type: string
        points:
          format: int
          type: integer
        rank:
          format: int
          type: integer
        ranks_diff:
          nullable: true
          type: integer
        root_bloods:
          format: int
          type: integer
        root_owns:
          format: int
          type: integer
        user_bloods:
          format: int
          type: integer
        user_owns:
          format: int
          type: integer
      type: object
    RankingsTeamItems:
      items:
        $ref: '#/components/schemas/RankingsTeamItem'
      type: array
    RankingsTeamResponse:
      description: Schema definition for Rankings Team Response
      example:
        data:
          - Userbloods: 36
            avatar_thumb_url: https://www.hackthebox.eu/storage/teams/6a5dfac4be1502501489fc0f5a24b667_thumb.jpg
            challenge_bloods: 28
            challenge_owns: 149
            country: EU
            fortress: 26
            id: 1750
            name: TheAteam
            points: 2436
            rank: 1
            ranks_diff: 0
            root_bloods: 45
            root_owns: 187
            user_owns: 187
          - Userbloods: 3
            avatar_thumb_url: https://www.hackthebox.eu/storage/teams/52d080a3e172c33fd6886a37e7288491_thumb.jpg
            challenge_bloods: 6
            challenge_owns: 149
            country: US
            fortress: 26
            id: 1709
            name: BirdsArentReal
            points: 2190
            rank: 2
            ranks_diff: 0
            root_bloods: 2
            root_owns: 187
            user_owns: 187
        status: true
      properties:
        data:
          $ref: '#/components/schemas/RankingsTeamItems'
        status:
          type: boolean
      title: Rankings Team Response
      type: object
    RankingsUniversitiesItem:
      properties:
        challenge_bloods:
          type: integer
        challenge_owns:
          type: integer
        country:
          type: string
        fortress:
          type: integer
        id:
          type: integer
        name:
          type: string
        points:
          type: integer
        rank:
          type: integer
        ranks_diff:
          type: integer
        root_bloods:
          type: integer
        root_owns:
          type: integer
        students:
          type: integer
        user_bloods:
          type: integer
        user_owns:
          type: integer
      type: object
    RankingsUniversitiesItems:
      items:
        $ref: '#/components/schemas/RankingsUniversitiesItem'
      type: array
    RankingsUniversitiesResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingsUniversitiesItems'
        status:
          type: boolean
      type: object
    RankingsUniversityRankingBracketByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingsBracketData'
        status:
          type: boolean
      type: object
    RankingsUserBestData:
      properties:
        date:
          type: string
        rank:
          type: number
        rank_chart_data:
          $ref: '#/components/schemas/IntArray'
      type: object
    RankingsUserBestResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingsUserBestData'
        status:
          type: boolean
      type: object
    RankingUserInfo:
      properties:
        avatar:
          type: string
        avatar_thumb:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    RankingsUserOverviewData:
      properties:
        chart_data:
          $ref: '#/components/schemas/IntArray'
        points_diff:
          type: number
        points_growth:
          type: string
        ranks_diff:
          type: number
        user:
          $ref: '#/components/schemas/RankingUserInfo'
      type: object
    RankingsUserOverviewResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingsUserOverviewData'
        status:
          type: boolean
      type: object
    RankingUserRankBracketData:
      properties:
        current_bracket:
          type: string
        next_bracket:
          type: string
        points:
          type: integer
        points_for_next_bracket:
          type: number
        rank:
          type: integer
      type: object
    RankingsUserRankingBracketResponse:
      properties:
        data:
          $ref: '#/components/schemas/RankingUserRankBracketData'
        status:
          type: boolean
      type: object
    RankingsUserData:
      properties:
        avatar_thumb:
          type: string
        challenge_bloods:
          type: integer
        challenge_owns:
          type: integer
        country:
          nullable: true
          type: string
        fortress:
          type: integer
        id:
          type: integer
        level:
          type: string
        name:
          type: string
        points:
          type: integer
        rank:
          type: integer
        ranks_diff:
          nullable: true
          type: integer
        root_bloods:
          type: integer
        root_owns:
          type: integer
        user_bloods:
          type: integer
        user_owns:
          type: integer
      type: object
    RankingUserDataItems:
      items:
        $ref: '#/components/schemas/RankingsUserData'
      type: array
    RankingsUsersResponse:
      description: Schema definition for Rankings Users Response
      properties:
        data:
          $ref: '#/components/schemas/RankingUserDataItems'
        status:
          type: boolean
      title: Rankings Users Response
      type: object
    ReviewMessageItem:
      properties:
        authUserInHelpfulReviews:
          example: false
          type: boolean
        created_at:
          example: '2023-01-28T21:42:53.000000Z'
          format: date-time
          type: string
        difficulty:
          nullable: true
          type: integer
        featured:
          type: integer
        helpful_reviews:
          $ref: '#/components/schemas/HelpfulReviewsItems'
        helpful_reviews_count:
          example: 0
          type: integer
        id:
          example: 3242342
          type: integer
        message:
          example: User was great, would user again
          type: string
        released:
          example: 1
          type: integer
        stars:
          example: 5
          type: integer
        title:
          example: A++++
          nullable: true
          type: string
        user:
          $ref: '#/components/schemas/UserBasicInfo'
        user_id:
          example: 234234
          type: integer
        headline:
          type: string
          nullable: true
        review:
          type: string
          nullable: true
      type: object
    ReviewMessage:
      description: Schema definition for Review Message
      items:
        $ref: '#/components/schemas/ReviewMessageItem'
      title: Review Message
      type: array
    ReviewsResponse:
      description: Schema definition for Reviews Response
      properties:
        average:
          example: 3.3
          format: float
          type: number
        count:
          example: 118
          type: integer
        info:
          $ref: '#/components/schemas/ReviewMessage'
      title: Reviews
    ReviewPaginatedResponse:
      description: Schema definition for Reviews Response
      properties:
        average:
          example: 3.3
          format: float
          type: number
        count:
          example: 118
          type: integer
        data:
          $ref: '#/components/schemas/ReviewMessage'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      title: Reviews
    SearchChallengeItem:
      properties:
        challenge_category_id:
          example: 10
          type: integer
        description:
          example: Our agents got caught during a mission...
          type: string
        id:
          example: 217
          type: integer
        value:
          example: Walkie Hackie
          type: string
      type: object
    SearchChallengesItems:
      items:
        $ref: '#/components/schemas/SearchChallengeItem'
      type: array
    SearchJobOfferItem:
      properties:
        id:
          example: '644'
          type: string
      type: object
    SearchJobOffersItems:
      items:
        $ref: '#/components/schemas/SearchJobOfferItem'
      type: array
    SearchFetchMachinesItem:
      properties:
        avatar:
          example: b99c956ef89135920805452930f99f71.png
          type: string
        id:
          example: 176
          type: integer
        isSp:
          example: false
          type: boolean
        tierId:
          example: null
          nullable: true
          type: string
        value:
          example: Hackback
          type: string
      type: object
    SearchMachinesItems:
      items:
        $ref: '#/components/schemas/SearchFetchMachinesItem'
      type: array
    SearchTeamItem:
      properties:
        avatar:
          example: 45c166d697d65080d54501403b433256.jpg
          type: string
        id:
          example: 3174
          type: integer
        motto:
          example: Be sure, be secure!
          nullable: true
          type: string
        value:
          example: HACK
          type: string
      type: object
    SearchTeamItems:
      items:
        $ref: '#/components/schemas/SearchTeamItem'
      type: array
    SearchUserItem:
      properties:
        avatar:
          example: 23531cbb5210aebc5a094e8f18e10ec5.png
          type: string
        id:
          example: 85187
          type: integer
        value:
          example: hack
          type: string
      type: object
    SearchUsersItems:
      items:
        $ref: '#/components/schemas/SearchUserItem'
      type: array
    SearchFetchResponse:
      description: Schema definition for Search Fetch Response
      properties:
        challenges:
          $ref: '#/components/schemas/SearchChallengesItems'
        joboffers:
          $ref: '#/components/schemas/SearchJobOffersItems'
        machines:
          $ref: '#/components/schemas/SearchMachinesItems'
        teams:
          $ref: '#/components/schemas/SearchTeamItems'
        users:
          $ref: '#/components/schemas/SearchUsersItems'
      title: Search Fetch Response
      type: object
    BloodsObtained:
      properties:
        bloods_obtained:
          type: integer
        flags_pawned:
          type: integer
      type: object
    SeasonOwns:
      properties:
        root:
          $ref: '#/components/schemas/BloodsObtained'
        total_machines:
          type: integer
        user:
          $ref: '#/components/schemas/BloodsObtained'
      type: object
    SeasonRank:
      properties:
        current:
          type: integer
        suffix:
          type: string
        total:
          type: integer
      type: object
    SeasonEndSeason:
      properties:
        id:
          type: integer
        name:
          type: string
        tier:
          type: string
        tier_frame:
          type: string
      type: object
    SeasonEndData:
      properties:
        owns:
          $ref: '#/components/schemas/SeasonOwns'
        rank:
          $ref: '#/components/schemas/SeasonRank'
        season:
          $ref: '#/components/schemas/SeasonEndSeason'
        user:
          $ref: '#/components/schemas/UserBasicInfo'
      type: object
    SeasonEndResponse:
      properties:
        data:
          $ref: '#/components/schemas/SeasonEndData'
      type: object
    SeasonListDataItem:
      properties:
        active:
          type: boolean
        background_image:
          type: string
        end_date:
          format: date-time
          type: string
        id:
          type: integer
        is_visible:
          type: boolean
        logo:
          type: string
        name:
          type: string
        start_date:
          format: date-time
          type: string
        state:
          type: string
        subtitle:
          nullable: true
          type: string
      type: object
    SeasonListData:
      items:
        $ref: '#/components/schemas/SeasonListDataItem'
      type: array
    SeasonListResponse:
      description: Schema definition for Season List Response
      properties:
        data:
          $ref: '#/components/schemas/SeasonListData'
      title: Season List Response
      type: object
    SeasonActiveData:
      properties:
        active:
          type: boolean
        avatar:
          type: string
        cocreators:
          $ref: '#/components/schemas/UserBasicInfoItemsWithRespect'
        creator:
          $ref: '#/components/schemas/UserBasicInfoItemsWithRespect'
        difficulty_text:
          type: string
        id:
          type: integer
        info_status:
          nullable: true
          type: string
        ip:
          example: 10.10.10.10
          format: ipv4
          nullable: true
          type: string
        is_owned_root:
          type: boolean
        is_owned_user:
          type: boolean
        is_released:
          type: boolean
        is_root_blood:
          type: boolean
        is_user_blood:
          type: boolean
        maker_id:
          type: integer
        name:
          type: string
        os:
          type: string
        play_info:
          $ref: '#/components/schemas/PlayInfo'
        points:
          type: integer
        poweroff:
          type: integer
        production:
          type: boolean
        release:
          format: date-time
          type: string
        release_time:
          format: date-time
          type: string
        retired:
          type: boolean
        root_blood_points:
          type: integer
        root_own_points:
          type: integer
        root_points:
          type: integer
        static_points:
          type: integer
        unknown:
          type: boolean
        user_blood_points:
          type: integer
        user_own_points:
          type: integer
        user_points:
          type: integer
      type: object
    SeasonActive:
      description: Schema definition for Season Active
      properties:
        data:
          $ref: '#/components/schemas/SeasonActiveData'
      title: Season Active
      type: object
    SeasonMachinesDataItem:
      properties:
        user_points:
          type: integer
        active:
          type: boolean
        avatar:
          type: string
        difficulty_text:
          type: string
        id:
          type: integer
        is_user_blood:
          type: boolean
        is_owned_root:
          type: boolean
        is_owned_user:
          type: boolean
        is_released:
          type: boolean
        is_root_blood:
          type: boolean
        name:
          type: string
        os:
          type: string
        release_time:
          format: date-time
          type: string
        root_points:
          type: integer
        unknown:
          type: boolean
        production:
          type: integer
      type: object
    SeasonMachinesDataItems:
      items:
        $ref: '#/components/schemas/SeasonMachinesDataItem'
      type: array
    SeasonMachines:
      description: Schema definition for Season Machines
      properties:
        data:
          $ref: '#/components/schemas/SeasonMachinesDataItems'
      title: Season Machines
      type: object
    SeasonCompletedMachineData:
      properties:
        season_flags:
          type: integer
        season_pwned_flags:
          type: integer
      type: object
    SeasonCompletedMachine:
      description: Schema definition for Season Completed Machine
      properties:
        data:
          $ref: '#/components/schemas/SeasonCompletedMachineData'
      title: Season Completed Machine
      type: object
    SeasonRewardItem:
      properties:
        id:
          type: integer
        image:
          type: string
        name:
          type: string
        order:
          type: number
        reward_group_id:
          type: integer
      type: object
    SeasonRewardsItems:
      items:
        $ref: '#/components/schemas/SeasonRewardItem'
      type: array
    SeasonRewardGroupItem:
      properties:
        description:
          nullable: true
          type: string
        id:
          type: integer
        image:
          nullable: true
          type: string
        name:
          type: string
        order:
          type: integer
        reward_type_id:
          type: integer
        rewards:
          $ref: '#/components/schemas/SeasonRewardsItems'
        subtitle:
          nullable: true
          type: string
      type: object
    GroupItems:
      items:
        $ref: '#/components/schemas/SeasonRewardGroupItem'
      type: array
    SeasonRewardTypes:
      properties:
        description:
          type: string
        groups:
          $ref: '#/components/schemas/GroupItems'
        id:
          type: integer
        name:
          type: string
        order:
          type: number
      type: object
    SeasonRewardsDataItem:
      properties:
        reward_types:
          $ref: '#/components/schemas/SeasonRewardTypes'
      type: object
    SeasonRewardsData:
      items:
        $ref: '#/components/schemas/SeasonRewardsDataItem'
      type: array
    SeasonRewardsResponse:
      properties:
        data:
          $ref: '#/components/schemas/SeasonRewardsData'
      title: Season Rewards Resposne
      type: object
    TopUserItem:
      properties:
        id:
          type: integer
        name:
          type: string
        points:
          nullable: true
          type: integer
        user_avatar:
          type: string
      type: object
    FollowerItems:
      items:
        $ref: '#/components/schemas/TopUserItem'
      type: array
    SeasonUserFollowerData:
      properties:
        top_ranked_followers:
          $ref: '#/components/schemas/FollowerItems'
        top_season_users:
          $ref: '#/components/schemas/FollowerItems'
      type: object
    SeasonUserFollowers:
      description: Schema definition for Season User Followers
      properties:
        data:
          $ref: '#/components/schemas/SeasonUserFollowerData'
      title: Season User Followers
      type: object
    FlagsToNextRank:
      oneOf:
        - properties:
            obtained:
              type: integer
            total:
              type: integer
          type: object
        - maxItems: 0
          type: array
          items: {}
    SeasonUserRankData:
      properties:
        flags_to_next_rank:
          $ref: '#/components/schemas/FlagsToNextRank'
        league:
          type: string
        rank:
          type: integer
        rank_suffix:
          type: string
        total_ranks:
          type: integer
        total_season_points:
          type: integer
      type: object
    SeasonUserRank:
      description: Schema definition for Season User Rank
      properties:
        data:
          $ref: '#/components/schemas/SeasonUserRankData'
      title: Season User Rank
      type: object
    SeasonPlayersLeaderboardDataItem:
      properties:
        account_id:
          type: string
        avatar_thumb:
          type: string
        country:
          nullable: true
          type: string
        last_own:
          type: string
        league_rank:
          type: string
        name:
          type: string
        points:
          type: integer
        positive_trend:
          type: boolean
        rank:
          type: integer
        rank_trend:
          type: number
        resource_id:
          type: integer
        root_bloods:
          type: integer
        root_owns:
          type: integer
        user_bloods:
          type: integer
        user_owns:
          type: integer
      type: object
    SeasonPlayersLeaderboardDataItems:
      items:
        $ref: '#/components/schemas/SeasonPlayersLeaderboardDataItem'
      type: array
    SeasonPlayersLeaderboardResponse:
      properties:
        data:
          $ref: '#/components/schemas/SeasonPlayersLeaderboardDataItems'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    SeasonPlatersLeaderboardTopDataItem:
      properties:
        avatar_thumb:
          type: string
        country:
          nullable: true
          type: string
        is_respected:
          type: boolean
        last_own:
          nullable: true
          type: string
        league_rank:
          type: string
        name:
          type: string
        points:
          type: number
        rank:
          type: number
        resource_id:
          type: integer
        root_bloods:
          type: number
        root_owns:
          type: number
        user_bloods:
          type: number
        user_owns:
          type: number
      type: object
    SeasonPlayersLeaderBoardTopData:
      items:
        $ref: '#/components/schemas/SeasonPlatersLeaderboardTopDataItem'
      type: array
    SeasonPlayersLeaderboardTopResponse:
      properties:
        data:
          $ref: '#/components/schemas/SeasonPlayersLeaderBoardTopData'
      type: object
    SherlockItem:
      description: Schema definition for Sherlock Item
      properties:
        auth_user_has_reviewed:
          type: boolean
        avatar:
          type: string
        category_id:
          type: integer
        category_name:
          type: string
        difficulty:
          type: string
        id:
          type: integer
        is_owned:
          type: boolean
        name:
          type: string
        pinned:
          type: boolean
        play_methods:
          $ref: '#/components/schemas/StringArray'
        progress:
          type: integer
        rating:
          type: number
        rating_count:
          type: integer
        release_date:
          type: string
        retires:
          format: date
          nullable: true
          type: string
        solves:
          type: integer
        state:
          description: The state of the item.
          type: string
      title: Sherlock Item
      type: object
    SherlockListData:
      items:
        $ref: '#/components/schemas/SherlockItem'
      type: array
    SherlockItemList:
      description: Schema definition for Sherlock Item List
      properties:
        data:
          $ref: '#/components/schemas/SherlockListData'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      title: Sherlock Item List
      type: object
    SherlockDownloadLink:
      description: Schema definition for Sherlock Download Link
      properties:
        expires_in:
          type: integer
        url:
          type: string
      title: Sherlock Download Link
    SherlockDetail:
      properties:
        academyModules:
          $ref: '#/components/schemas/AcademyModulesItems'
        description:
          type: string
        id:
          type: integer
        user_owns_count:
          type: integer
      type: object
    SherlockInfo:
      description: Schema definition for Sherlock Info
      properties:
        data:
          $ref: '#/components/schemas/SherlockDetail'
      title: Sherlock Info
      type: object
    SherlockPlayCreatorsItems:
      items:
        $ref: '#/components/schemas/Maker'
      type: array
    SherlockPlay:
      properties:
        creators:
          $ref: '#/components/schemas/SherlockPlayCreatorsItems'
        file_name:
          type: string
        file_size:
          type: string
        id:
          type: integer
        scenario:
          type: string
        play_info:
          $ref: '#/components/schemas/PlayInfoAlt'
      type: object
    SherlockPlayResponse:
      description: Schema definition for Sherlock Play Response
      properties:
        data:
          $ref: '#/components/schemas/SherlockPlay'
      type: object
    SherlockProgressData:
      properties:
        is_owned:
          type: boolean
        own_rank:
          type: integer
        progress:
          type: integer
        tasks_answered:
          type: integer
        total_tasks:
          type: integer
      type: object
    SherlockProgress:
      description: Schema definition for Sherlock Progress
      properties:
        data:
          $ref: '#/components/schemas/SherlockProgressData'
      type: object
    SherlockTask:
      description: Schema definition for Sherlock Task
      properties:
        completed:
          type: boolean
        description:
          type: string
        flag:
          type: string
        hint:
          nullable: true
          type: string
        id:
          type: integer
        masked_flag:
          type: string
        options:
          $ref: '#/components/schemas/ObjectArray'
        prerequisite_id:
          nullable: true
          type: integer
        task_type:
          $ref: '#/components/schemas/TaskType'
        title:
          type: string
        type:
          $ref: '#/components/schemas/TaskType'
      title: Sherlock Task
      type: object
    SherlockTaskArray:
      items:
        $ref: '#/components/schemas/SherlockTask'
      type: array
    SherlockTasksList:
      description: Schema definition for Sherlock Tasks List
      properties:
        data:
          $ref: '#/components/schemas/SherlockTaskArray'
      type: object
    UserTask:
      properties:
        id:
          type: integer
        task_id:
          type: integer
        user_id:
          type: integer
      type: object
    TaskFlagResponse:
      description: Schema definition for Task Flag Response
      properties:
        message:
          example: Task flag owned!
          type: string
        user_task:
          $ref: '#/components/schemas/UserTask'
      title: Task Flag Response
      type: object
    BadRequestError:
      description: Schema definition for Bad Request Error
      properties:
        message:
          type: string
      title: Bad Request Error
      type: object
    SherlockWriteup:
      description: Schema definition for Sherlock Writeup
      properties:
        data:
          $ref: '#/components/schemas/WriteupData'
      type: object
    SherlockNamedItemData:
      properties:
        auth_user_has_reviewed:
          type: boolean
        avatar:
          example: /storage/challenges/cbcb58ac2e496207586df2854b17995f.png
          type: string
        category_id:
          example: 16
          type: integer
        category_name:
          example: Malware Analysis
          type: string
        difficulty:
          example: Insane
          type: string
        favorite:
          type: boolean
        id:
          example: 565
          type: integer
        isTodo:
          type: boolean
        name:
          example: Safecracker
          type: string
        play_methods:
          $ref: '#/components/schemas/StringArray'
        rating:
          example: 4.555555555555555
          type: number
        rating_count:
          example: 18
          type: integer
        release_at:
          format: date-time
          type: string
        retired:
          type: boolean
        show_go_vip:
          type: boolean
        state:
          example: retired_free
          type: string
        tags:
          $ref: '#/components/schemas/StringArray'
        writeup_visible:
          type: boolean
        user_can_review:
          type: boolean
      type: object
    SherlockNamedItem:
      description: Schema definition for Sherlock Named Item
      properties:
        data:
          $ref: '#/components/schemas/SherlockNamedItemData'
      title: Sherlock Named Item
      type: object
    Announcement:
      description: Schema definition for Announcement
      properties:
        created_at:
          example: '2023-12-12T15:55:50.000000Z'
          format: date-time
          type: string
        id:
          example: 113
          type: integer
        title:
          example: Hack The Box named a global leader in Cybersecurity Skills and Training Platforms.
          type: string
        updated_at:
          example: '2023-12-12T15:55:50.000000Z'
          format: date-time
          type: string
      title: Announcement
      type: object
    SidebarAnnouncementResponse:
      description: Schema definition for Sidebar Announcement Response
      properties:
        announcement:
          $ref: '#/components/schemas/Announcement'
      type: object
    SidebarChangeLog:
      description: Schema definition for Sidebar Change Log
      properties:
        created_at:
          example: '2021-11-12T10:38:24.000000Z'
          format: date-time
          type: string
        id:
          example: 41
          type: integer
        version:
          example: 3.18.0
          type: string
      title: Sidebar Change Log
      type: object
    SidebarChangeLogResponse:
      description: Schema definition for Sidebar Change Log Response
      properties:
        changelog:
          $ref: '#/components/schemas/SidebarChangeLog'
      title: Sidebar Change Log Response
      type: object
    PlayInfoCasing:
      description: Schema definition for Play Info
      properties:
        active_player_count:
          example: 1
          type: integer
        expires_at:
          format: date-time
          nullable: true
          type: string
        isActive:
          nullable: true
          type: boolean
        isSpawned:
          nullable: true
          type: boolean
        isSpawning:
          nullable: true
          type: boolean
      title: Play Info
      type: object
    SpProfileInfo:
      properties:
        ip:
          example: 10.10.10.10
          format: ipv4
          nullable: true
          type: string
        playInfo:
          $ref: '#/components/schemas/PlayInfoCasing'
      type: object
    SpProfileIdResponse:
      description: Schema definition for Sp Profile Id Response
      properties:
        info:
          $ref: '#/components/schemas/SpProfileInfo'
      title: Sp Profile Id Response
      type: object
    SpTierMachineTasks:
      properties:
        description:
          example: What does the acronym SQL stand for?
          type: string
        flag:
          example: Structured Query Language
          type: string
        hint:
          example: A simple Google search will yield the answer. Use Camel Case.
          nullable: true
          type: string
        id:
          example: 64
          type: integer
        masked_flag:
          example: '********** ***** *******e'
          nullable: true
          type: string
        options:
          $ref: '#/components/schemas/ObjectArray'
        task_type:
          example: 0
          type: integer
        title:
          example: Task 1
          type: string
        type:
          example: 0
          type: integer
        user_completions_count:
          example: 1
          type: integer
      type: object
    SpTierTasksItems:
      items:
        $ref: '#/components/schemas/SpTierMachineTasks'
      type: array
    VideoObject:
      properties:
        creator_id:
          type: integer
        creator_name:
          type: string
        youtube_id:
          type: string
      type: object
    EmptyArray:
      maxItems: 0
      type: array
      items: {}
    Video:
      oneOf:
        - $ref: '#/components/schemas/VideoObject'
        - $ref: '#/components/schemas/EmptyArray'
    SpTierMachineWalkthroughItem:
      properties:
        filename:
          example: Appointment.pdf
          type: string
        sha256:
          example: fb62437a6debee31245c06a6db9626a7854fd8fa62f082571c93a498c427d61a
          type: string
      type: object
    SpTierMachine:
      properties:
        avatar:
          example: /storage/avatars/a9ddcda8d2f6eb388c6717de2caff896.png
          type: string
        difficultyText:
          example: Very Easy
          type: string
        id:
          example: 402
          type: integer
        info_status:
          example: null
          nullable: true
          type: string
        name:
          example: Appointment
          type: string
        order:
          example: 10
          type: integer
        os:
          example: Linux
          type: string
        rootOwn:
          example: true
          type: boolean
        sp_flag:
          example: 1
          type: integer
        static_points:
          example: 0
          type: integer
        tasks:
          $ref: '#/components/schemas/SpTierTasksItems'
        userOwn:
          example: false
          type: boolean
        video:
          $ref: '#/components/schemas/Video'
        walkthrough:
          $ref: '#/components/schemas/SpTierMachineWalkthroughItem'
        youtube_id:
          example: null
          nullable: true
          type: string
      type: object
    SpTierMachineItems:
      items:
        $ref: '#/components/schemas/SpTierMachine'
      type: array
    SpTierData:
      properties:
        description:
          example: You need to walk before you can run
          type: string
        id:
          example: 2
          type: integer
        machines:
          $ref: '#/components/schemas/SpTierMachineItems'
        name:
          example: Tier 1
          type: string
      type: object
    SpTierResponse:
      description: Schema definition for Sp Tier Info
      properties:
        data:
          $ref: '#/components/schemas/SpTierData'
      title: Sp Machine Info
      type: object
    SpTiersProgressItem:
      properties:
        completion_percentage:
          type: integer
        description:
          type: string
        free_machine_completion_percentage:
          type: integer
        id:
          type: integer
        name:
          type: string
      type: object
    SpTierProgressItems:
      items:
        $ref: '#/components/schemas/SpTiersProgressItem'
      type: array
    SpTiersProgressResponse:
      description: Schema definition for Sp Tiers Progress Response
      properties:
        data:
          $ref: '#/components/schemas/SpTierProgressItems'
      title: Sp Tiers Progress Response
      type: object
    TeamActivityUser:
      properties:
        avatar_thumb:
          example: /storage/avatars/sdfgs45345edrgsdfsd374fb23452d_thumb.png
          type: string
        id:
          example: 1234
          type: integer
        name:
          example: ABC123
          type: string
        public:
          example: 0
          type: integer
      type: object
      required:
        - public
        - name
        - id
    TeamActivityItem:
      properties:
        challenge_category:
          type: string
        date:
          example: '2024-11-20T22:36:18.000000Z'
          format: date-time
          type: string
        date_diff:
          example: 10 hours ago
          type: string
        flag_title:
          type: string
        first_blood:
          example: false
          type: boolean
        id:
          example: 9
          type: integer
        machine_avatar:
          example: /storage/avatars/0d6275efbd5e48fcdc96e61b9724ae5e_thumb.png
          type: string
        name:
          example: Arctic
          type: string
        object_type:
          example: machine
          type: string
        points:
          example: 0
          type: integer
        type:
          example: user
          type: string
        user:
          $ref: '#/components/schemas/TeamActivityUser'
      type: object
      required:
        - date
        - date_diff
        - id
        - name
        - object_type
        - points
        - type
        - user
        - first_blood
    TeamActivityIdResponse:
      description: Schema definition for Team Activity Id Response
      items:
        $ref: '#/components/schemas/TeamActivityItem'
      title: Team Activity Id Response
      type: array
    ChallengeCategoriesDetailsItem:
      properties:
        all_teams_avg_percentage:
          example: 6.72
          format: float
          type: number
        id:
          example: 1
          type: integer
        name:
          example: Reversing
          type: string
        team_percentage:
          example: 23.53
          format: float
          type: number
      type: object
    ChallengeCategoriesData:
      items:
        $ref: '#/components/schemas/ChallengeCategoriesDetailsItem'
      type: array
    ChallengeCategoriesDetails:
      description: Schema definition for Challenge Categories Details
      properties:
        data:
          $ref: '#/components/schemas/ChallengeCategoriesData'
        status:
          example: true
          type: boolean
      type: object
    TeamsAttackPathCard:
      description: Schema definition for Teams Attack Path Card
      properties:
        avg_teams_solved:
          example: 0.1403438192620737
          type: number
        name:
          type: string
        solved:
          example: 20
          type: integer
        total:
          example: 100
          type: integer
      title: Teams Attack Path Card
      type: object
    TeamMachineAttackPaths:
      properties:
        Binary Analysis:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Binary Exploitation:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Configuration Analysis:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Fuzzing:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Impersonation:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Packet Capture Analysis:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Pivoting:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Reconnaissance:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        User Enumeration:
          $ref: '#/components/schemas/TeamsAttackPathCard'
        Web Site Structure Discovery:
          $ref: '#/components/schemas/TeamsAttackPathCard'
      type: object
    MachineOwnsCard:
      description: Schema definition for Machine Owns Card
      properties:
        solved:
          example: 100
          type: integer
        total:
          example: 204
          type: integer
      title: Machine Owns Card
      type: object
    MachineAttackDetails:
      description: Schema definition for Machine Attack Details
      properties:
        machine_attack_paths:
          $ref: '#/components/schemas/TeamMachineAttackPaths'
        machine_owns:
          $ref: '#/components/schemas/MachineOwnsCard'
      title: Machine Attack Details
      type: object
    TeamGraphData:
      properties:
        points:
          $ref: '#/components/schemas/IntArray'
        rank:
          $ref: '#/components/schemas/IntArray'
        respect:
          $ref: '#/components/schemas/IntArray'
      type: object
    TeamGraphIdResponse:
      description: Schema definition for Team Graph Id Response
      properties:
        data:
          $ref: '#/components/schemas/TeamGraphData'
        status:
          type: boolean
      title: Team Graph Id Response
      type: object
    TeamInfoIdResponse:
      description: Schema definition for Team Info Id Response
      properties:
        avatar_url:
          type: string
        can_delete_avatar:
          type: boolean
        captain:
          $ref: '#/components/schemas/UserIdNameThumb'
        country_code:
          nullable: true
          type: string
        country_name:
          type: string
        cover_image_url:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        discord:
          nullable: true
          type: string
        facebook:
          nullable: true
          type: string
        id:
          format: int
          type: integer
        is_respected:
          type: boolean
        join_request_sent:
          type: boolean
        motto:
          type: string
        name:
          type: string
        points:
          format: int
          type: integer
        public:
          type: boolean
        twitter:
          nullable: true
          type: string
      title: Team Info Id Response
      type: object
    UserRanking:
      properties:
        challenges:
          type: integer
        created_at:
          format: date-time
          type: string
        endgame:
          type: integer
        fc:
          type: integer
        fortress:
          type: integer
        fr:
          type: integer
        fu:
          type: integer
        id:
          type: integer
        ownership:
          type: string
        points:
          type: integer
        pro:
          type: integer
        rank:
          type: integer
        respect:
          type: integer
        roots:
          type: integer
        sr:
          type: integer
        su:
          type: integer
        tr:
          type: integer
        tu:
          type: integer
        updated_at:
          format: date-time
          type: string
        user_id:
          type: integer
        users:
          type: integer
      type: object
    User:
      properties:
        avatar_thumb:
          type: string
        id:
          type: integer
        name:
          type: string
        points:
          type: integer
        rank_name:
          type: string
        ranking:
          oneOf:
            - type: integer
            - enum:
                - unranked
              type: string
        rankings:
          items:
            $ref: '#/components/schemas/UserRanking'
          type: array
        respected_by_count:
          type: integer
        root_owns_count:
          type: integer
        user_owns_count:
          type: integer
      type: object
    UserEntry:
      properties:
        id:
          type: integer
        team_id:
          type: integer
        user:
          $ref: '#/components/schemas/User'
        user_id:
          type: integer
        user_request:
          type: integer
      type: object
    TeamInvitationsIdResponse:
      description: Schema definition for Team Invitations Id Response
      properties:
        exception:
          nullable: true
          type: string
        headers:
          type: object
        original:
          items:
            $ref: '#/components/schemas/UserEntry'
          type: array
      title: Team Invitations Id Response
      type: object
    TeamMemberTeam:
      properties:
        captain_id:
          type: integer
        id:
          type: integer
      type: object
    TeamMember:
      description: University Members Resposne
      properties:
        avatar:
          type: string
        country_code:
          nullable: true
          type: string
        country_name:
          type: string
        id:
          type: integer
        name:
          type: string
        points:
          type: integer
        public:
          type: integer
        rank:
          type: string
        rank_text:
          type: string
        role:
          type: string
        root_bloods_count:
          type: integer
        root_owns:
          type: integer
        team:
          $ref: '#/components/schemas/TeamMemberTeam'
        user_bloods_count:
          type: integer
        user_owns:
          type: integer
    TeamMembersIdResponse:
      description: Schema definition for Team Members Id Response
      items:
        $ref: '#/components/schemas/TeamMember'
      title: Team Members Id Response
      type: array
    Weekly:
      properties:
        challenge_owns:
          type: integer
        first_bloods:
          type: integer
        respects:
          type: integer
        system_owns:
          type: integer
        user_owns:
          type: integer
        week_end_date:
          format: date
          type: string
      type: object
    OwnStats:
      description: Schema definition for Own Stats
      properties:
        challenge_owns:
          type: integer
        first_bloods:
          type: integer
        rank:
          type: integer
        respects:
          type: integer
        system_owns:
          type: integer
        user_owns:
          type: integer
        weekly:
          additionalProperties:
            $ref: '#/components/schemas/Weekly'
          type: object
      title: Own Stats
      type: object
    TracksCreator:
      type: object
      required:
        - type
        - id
        - name
        - avatar
      properties:
        type:
          type: string
          example: company
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Hack The Box
        avatar:
          type: string
          format: uri
          example: /storage/companies/1.png
    TracksItems:
      required:
        - id
        - name
        - creator
        - official
        - staff_pick
        - difficulty
        - cover_image
        - likes
      properties:
        cover_image:
          type: string
          example: /storage/tracks/61.png
        creator:
          $ref: '#/components/schemas/TracksCreator'
        difficulty:
          type: string
          description: Difficulty level (e.g., Very Easy, Easy, Medium, Hard, etc.)
          example: Easy
        id:
          type: integer
          example: 61
        likes:
          type: integer
          example: 92
        name:
          type: string
          example: Detecting Active Directory Attacks
        official:
          type: boolean
          example: true
        staff_pick:
          type: integer
      type: object
    TracksResponse:
      description: Schema definition for Tracks Response
      items:
        $ref: '#/components/schemas/TracksItems'
      title: Tracks Response
      type: array
    TracksEnrollResponse:
      properties:
        enrolled:
          type: boolean
      type: object
    TracksLikeResponse:
      properties:
        liked:
          type: boolean
      type: object
    TrackSuccessItemsItem:
      properties:
        avatar:
          nullable: true
          type: string
        category:
          nullable: true
          type: string
        complete:
          type: boolean
        difficulty:
          type: string
        difficulty_ratings:
          $ref: '#/components/schemas/DifficultyChart'
        id:
          type: integer
        name:
          type: string
        os:
          nullable: true
          type: string
        type:
          type: string
      type: object
    TrackSuccessItemsItems:
      items:
        $ref: '#/components/schemas/TrackSuccessItemsItem'
      type: array
    TrackSuccessResponse:
      description: Schema definition for Tracks Id Response
      properties:
        completed:
          type: boolean
        completion_cta:
          nullable: true
          type: integer
        completion_message:
          nullable: true
          type: string
        completion_url:
          nullable: true
          type: string
        cover_image:
          nullable: true
          type: string
        creator:
          $ref: '#/components/schemas/TracksCreator'
        description:
          type: string
        difficulty:
          type: string
        enrolled:
          type: boolean
        has_completion_message:
          type: boolean
        id:
          type: integer
        items:
          $ref: '#/components/schemas/TrackSuccessItemsItems'
        liked:
          type: boolean
        likes:
          type: integer
        name:
          type: string
        official:
          type: boolean
        staff_pick:
          type: number
      title: Tracks Id Response
      type: object
    TrackErrorResponse:
      properties:
        error:
          example: Track not found
          type: string
        status:
          enum:
            - error
          example: '0'
          type: string
      required:
        - status
        - error
      type: object
    TracksIdResponse:
      oneOf:
        - $ref: '#/components/schemas/TrackSuccessResponse'
        - $ref: '#/components/schemas/TrackErrorResponse'
      type: object
    PublicUserProfileBasic:
      properties:
        avatar_thumb:
          type: string
        id:
          type: integer
        name:
          type: string
        public:
          type: integer
      type: object
    UniversityAcitivtyItem:
      properties:
        challenge_category:
          type: string
        date:
          type: string
        date_diff:
          type: string
        first_blood:
          type: boolean
        id:
          type: integer
        machine_avatar:
          type: string
        name:
          type: string
        object_type:
          type: string
        points:
          type: number
        type:
          type: string
        user:
          $ref: '#/components/schemas/PublicUserProfileBasic'
      type: object
    UniversityActivityResponse:
      items:
        $ref: '#/components/schemas/UniversityAcitivtyItem'
      type: array
    UniversityListItem:
      properties:
        cca2:
          type: string
        country:
          type: string
        created_at:
          type: string
        has_auto_generated_logo:
          type: integer
        id:
          type: integer
        name:
          type: string
        respected_by_count:
          type: integer
        user_avatars:
          $ref: '#/components/schemas/StringArray'
        users_count:
          type: integer
      type: object
    UniversityListItems:
      items:
        $ref: '#/components/schemas/UniversityListItem'
      type: array
    UniversityListData:
      properties:
        current_page:
          example: 1
          type: integer
        data:
          $ref: '#/components/schemas/UniversityListItems'
        first_page_url:
          nullable: true
          type: string
        from:
          example: 1
          type: integer
        last_page:
          example: 11
          nullable: true
          type: integer
        last_page_url:
          type: string
        links:
          $ref: '#/components/schemas/PaginationLinks'
        next_page_url:
          nullable: true
          type: string
        path:
          type: string
        per_page:
          example: 15
          type: integer
        prev_page_url:
          nullable: true
          type: integer
        to:
          example: 15
          type: integer
        total:
          example: 162
          type: integer
      type: object
    UniversityAllListResponse:
      description: Schema for University All List Response
      properties:
        data:
          $ref: '#/components/schemas/UniversityListData'
        message:
          type: string
        section:
          type: string
    UniversityChartChallengeCategoriesItem:
      properties:
        all_universitys_avg_percentage:
          type: number
        id:
          type: integer
        name:
          type: string
        university_percentage:
          type: number
      type: object
    UniversityChartChallengeCategoriesItems:
      items:
        $ref: '#/components/schemas/UniversityChartChallengeCategoriesItem'
      type: array
    UniversityChartChallengeCategoriesResponse:
      properties:
        data:
          $ref: '#/components/schemas/UniversityChartChallengeCategoriesItems'
        status:
          type: boolean
      type: object
    MachineAttackPathItem:
      properties:
        avg_universitys_solved:
          type: number
        name:
          type: string
        solved:
          type: number
        total:
          type: number
      type: object
    MachineAttackPaths:
      properties:
        Binary Analysis:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Binary Exploitation:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Configuration Analysis:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Fuzzing:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Impersonation:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Packet Capture Analysis:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Pivoting:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Reconnaissance:
          $ref: '#/components/schemas/MachineAttackPathItem'
        User Enumeration:
          $ref: '#/components/schemas/MachineAttackPathItem'
        Web Site Structure Discovery:
          $ref: '#/components/schemas/MachineAttackPathItem'
      type: object
    MachineOwns:
      properties:
        solved:
          type: number
        total:
          type: number
      type: object
    UniversityChartMachinesAttackResponse:
      properties:
        machine_attack_paths:
          $ref: '#/components/schemas/MachineAttackPaths'
        machine_owns:
          $ref: '#/components/schemas/MachineOwns'
      type: object
    UniversityCountryListResponse:
      properties:
        data:
          $ref: '#/components/schemas/UniversityListData'
        message:
          type: string
        section:
          type: string
      type: object
    UniversityMembersResponse:
      description: University Members Resposne
      properties:
        avatar:
          type: string
        country_code:
          nullable: true
          type: string
        country_name:
          type: string
        id:
          type: integer
        name:
          type: string
        points:
          type: integer
        public:
          type: integer
        rank:
          type: string
        rank_text:
          type: string
        role:
          type: string
        root_bloods_count:
          type: integer
        root_owns:
          type: integer
        university:
          $ref: '#/components/schemas/TeamMemberTeam'
        user_bloods_count:
          type: integer
        user_owns:
          type: integer
    UniversityNewListData:
      properties:
        data:
          $ref: '#/components/schemas/UniversityListItems'
        last_page:
          type: integer
      type: object
    UniversityNewListResponse:
      properties:
        data:
          $ref: '#/components/schemas/UniversityNewListData'
        message:
          type: string
        section:
          type: string
      type: object
    TeamInformationProfileData:
      properties:
        active:
          type: integer
        captain:
          $ref: '#/components/schemas/UserIdNameThumb'
        country_code:
          example: NL
          type: string
        country_name:
          example: Netherlands
          type: string
        cover_image_url:
          format: uri
          nullable: true
          type: string
        description:
          example: Open for anyone who is polite, honest, nice, and willing to help others.
          type: string
        discord:
          nullable: true
          type: string
        facebook:
          nullable: true
          type: string
        has_auto_generated_logo:
          type: integer
        id:
          example: 2102
          type: integer
        is_respected:
          example: true
          type: boolean
        join_request_sent:
          type: boolean
        logo_url:
          nullable: true
          type: string
        motto:
          example: Hacking for the fun of it! Learning it as a bonus
          nullable: true
          type: string
        name:
          example: CommandlineKings
          type: string
        points:
          example: 1839
          type: integer
        twitter:
          nullable: true
          type: string
        url:
          type: string
      type: object
    TeamInformationProfileResponse:
      description: Schema definition for Team Information Profile Response
      properties:
        data:
          $ref: '#/components/schemas/TeamInformationProfileData'
        message:
          type: string
      title: Team Information Profile Response
      type: object
    UniversityTopListItem:
      properties:
        cca2:
          type: string
        country:
          type: string
        created_at:
          type: string
        has_auto_generated_logo:
          type: integer
        id:
          type: integer
        name:
          type: string
        rank:
          type: number
        respected_by_count:
          type: integer
        user_avatars:
          $ref: '#/components/schemas/StringArray'
        users_count:
          type: integer
      type: object
    UniversityTopListItems:
      items:
        $ref: '#/components/schemas/UniversityTopListItem'
      type: array
    UniversityTopListData:
      properties:
        data:
          $ref: '#/components/schemas/UniversityTopListItems'
        last_page:
          type: integer
      type: object
    UniversityTopListResponse:
      properties:
        data:
          $ref: '#/components/schemas/UniversityTopListData'
        message:
          type: string
        section:
          type: string
      type: object
    UserAchievementMachineTypeUser:
      properties:
        avatar:
          type: string
        id:
          type: integer
        name:
          type: string
        retired:
          type: boolean
        starting_point:
          type: boolean
      type: object
    UserAchievementTarTypeUserOwn:
      properties:
        date:
          example: 14 Jul 2024
          type: string
        date_iso8601:
          example: '2024-07-14T06:51:22+00:00'
          format: date-time
          type: string
        points:
          type: integer
        rank:
          type: integer
      type: object
    UserAchievementTarTypeUserIdTarIdResponse:
      description: Schema definition for User Achievement Target Type User Id Target
      properties:
        machine:
          $ref: '#/components/schemas/UserAchievementMachineTypeUser'
        own:
          $ref: '#/components/schemas/UserAchievementTarTypeUserOwn'
        user:
          $ref: '#/components/schemas/UserBasicInfo'
      title: User Achievement Target Type User Id Target Id Response
      type: object
    UserAnonymizedIdResponse:
      description: Schema definition for User Anonymized Id Response
      properties:
        account_id:
          type: string
        id:
          type: string
        user_hash:
          type: string
      title: User Anonymized Id Response
      type: object
    UserApptokenCreateResponse:
      properties:
        access_token:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        name:
          type: string
      type: object
    UserApptokenListItem:
      properties:
        created_at:
          type: string
        expires_at:
          type: string
        last_seen:
          type: string
        name:
          type: string
      type: object
    UserApptokenListItems:
      items:
        $ref: '#/components/schemas/UserApptokenListItem'
      type: array
    UserApptokenListResponse:
      properties:
        tokens:
          $ref: '#/components/schemas/UserApptokenListItems'
      type: object
    UserBannedResponse:
      description: Schema definition for User Banned Response
      properties:
        banned:
          type: boolean
      title: User Banned Response
      type: object
    UserConnectionStatusResponse:
      description: Schema definition for User Connection Status Response
      properties:
        connection:
          oneOf:
            - properties:
                down:
                  example: 123.45
                  type: number
                ip4:
                  example: 10.10.10.10
                  type: string
                ip6:
                  example: 2001:db8::1
                  type: string
                name:
                  example: tun0
                  type: string
                through_pwnbox:
                  example: false
                  type: boolean
                up:
                  example: 67.89
                  type: number
              type: object
            - example: not connected
              type: string
        status:
          type: boolean
      title: User Connection Status Response
      type: object
    DashboardPlayers:
      description: Schema definition for Dashboard Players
      properties:
        online_players:
          type: string
      title: Dashboard Players
      type: object
    UserDashboardResponse:
      description: Schema definition for User Dashboard Response
      properties:
        dashboard_players:
          $ref: '#/components/schemas/DashboardPlayers'
      title: User Dashboard Response
      type: object
    ChallengeOwns:
      properties:
        category:
          $ref: '#/components/schemas/CommonIdName'
        challenge_category_id:
          type: integer
        id:
          type: integer
        name:
          type: string
      type: object
    MachineOwnsTabloid:
      properties:
        avatar_thump_url:
          type: string
        avatar_url:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    UserOwnsUser:
      properties:
        country:
          type: string
        country_name:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    OwnsItems:
      properties:
        challenge:
          $ref: '#/components/schemas/ChallengeOwns'
        challenge_id:
          type: integer
        created_at:
          type: string
        deleted_at: {}
        deleted_index_fix:
          type: integer
        id:
          type: integer
        machine:
          $ref: '#/components/schemas/MachineOwnsTabloid'
        machine_flag_id:
          type: integer
        machine_id:
          type: integer
        sp_flag:
          type: integer
        sync_source: {}
        updated_at:
          type: string
        user:
          $ref: '#/components/schemas/UserOwnsUser'
        user_id:
          type: integer
        vpn_server_id:
          type: integer
      type: object
    TabloidOwnsItems:
      items:
        $ref: '#/components/schemas/OwnsItems'
      type: array
    TabloidOwns:
      properties:
        challenges:
          type: integer
        latest:
          $ref: '#/components/schemas/TabloidOwnsItems'
        machines:
          type: integer
    DashboardTabloid:
      properties:
        owns:
          $ref: '#/components/schemas/TabloidOwns'
          type: object
      type: object
    UserDashboardTabloidResponse:
      properties:
        dashboard_tabloid:
          $ref: '#/components/schemas/DashboardTabloid'
      type: object
    Item:
      properties:
        id:
          type: integer
      type: object
    InfoArray:
      items:
        $ref: '#/components/schemas/Item'
      type: array
    UpdateResponse:
      description: Update Response
      properties:
        info:
          $ref: '#/components/schemas/InfoArray'
      type: object
    ConnectionDataMachine:
      nullable: true
      properties:
        avatar_thumb_url:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    UserInfo:
      description: Schema definition for User Info
      properties:
        avatar:
          example: string
          type: string
        beta_tester:
          example: 0
          type: integer
        canAccessDedilab:
          example: false
          type: boolean
        canAccessVIP:
          example: true
          type: boolean
        can_delete_avatar:
          example: false
          type: boolean
        dunning_exists:
          example: false
          type: boolean
        email:
          example: string
          type: string
        hasAppTokens:
          example: true
          type: boolean
        hasTeamInvitation:
          type: boolean
        id:
          example: 0
          type: integer
        identifier:
          example: string
          type: string
        isBGModerator:
          example: false
          type: boolean
        isChatBanned:
          example: false
          type: boolean
        isDedicatedVip:
          example: true
          type: boolean
        isModerator:
          example: false
          type: boolean
        isServerVIP:
          type: boolean
        isVip:
          example: false
          type: boolean
        is_sso_connected:
          example: true
          type: boolean
        name:
          example: string
          type: string
        onboarding_tutorial_complete:
          example: 1
          type: integer
        opt_in:
          example: 0
          type: integer
        rank_id:
          example: 3
          type: integer
        server_id:
          example: 0
          type: integer
        subscription_plan:
          example: string
          type: string
        team:
          $ref: '#/components/schemas/ConnectionDataMachine'
        timezone:
          example: string
          type: string
        university:
          example: null
          nullable: true
          type: string
        verified:
          example: true
          type: boolean
        subscriptionType:
          type: string
      title: User Info
      type: object
    UserInfoResponse:
      description: Schema definition for User Info Response
      properties:
        info:
          $ref: '#/components/schemas/UserInfo'
      title: User Info Response
      type: object
    UserActivityItem:
      properties:
        challenge_category:
          nullable: true
          type: string
        date:
          format: date-time
          type: string
        date_diff:
          type: string
        first_blood:
          type: boolean
        flag_title:
          nullable: true
          type: string
        id:
          type: integer
        machine_avatar:
          nullable: true
          type: string
        name:
          type: string
        points:
          type: integer
        type:
          type: string
        object_type:
          type: string
      required:
        - id
        - name
        - points
        - first_blood
        - date
        - date_diff
        - type
        - object_type
      type: object
    UserActivityProfileActivity:
      items:
        $ref: '#/components/schemas/UserActivityItem'
      type: array
    UserActivityProfile:
      properties:
        activity:
          $ref: '#/components/schemas/UserActivityProfileActivity'
      type: object
    UserActivity:
      properties:
        profile:
          $ref: '#/components/schemas/UserActivityProfile'
      type: object
    ProfileBadgesItemPivot:
      properties:
        created_at:
          type: string
      type: object
    ProfileBadgesItem:
      properties:
        id:
          type: integer
        pivot:
          $ref: '#/components/schemas/ProfileBadgesItemPivot'
      type: object
    ProfileBadgesItems:
      items:
        $ref: '#/components/schemas/ProfileBadgesItem'
      type: array
    ProfileBadgesIdRepsonse:
      description: Schema definition for Profile Badges Id Repsonse
      properties:
        badges:
          $ref: '#/components/schemas/ProfileBadgesItems'
      title: Profile Badges Id Repsonse
      type: object
    UserProfileTeam:
      properties:
        avatar:
          type: string
        id:
          type: integer
        name:
          type: string
        ranking:
          type: integer
      type: object
    UserProfileUniversityTeam:
      properties:
        logo_thumb_url:
          type: string
        id:
          type: integer
        name:
          type: string
        ranking:
          type: integer
      type: object
      nullable: true
    UserProfile:
      properties:
        avatar:
          type: string
        country_code:
          type: string
        country_name:
          type: string
        current_rank_progress:
          type: number
        github:
          nullable: true
          type: string
        id:
          type: integer
        isDedicatedVip:
          type: boolean
        isFollowed:
          type: boolean
        isRespected:
          type: boolean
        isVip:
          type: boolean
        linkedin:
          nullable: true
          type: string
        name:
          type: string
        next_rank:
          nullable: true
          type: string
        next_rank_points:
          nullable: true
          type: number
        points:
          type: integer
        public:
          type: boolean
        rank:
          type: string
        rank_id:
          type: integer
        rank_ownership:
          type: number
        rank_requirement:
          nullable: true
          type: integer
        ranking:
          type: integer
        respects:
          type: integer
        sso_id:
          type: boolean
        system_bloods:
          type: integer
        system_owns:
          type: integer
        team:
          $ref: '#/components/schemas/UserProfileTeam'
        timezone:
          type: string
        twitter:
          nullable: true
          type: string
        university:
          $ref: '#/components/schemas/UserProfileUniversityTeam'
        university_name:
          nullable: true
          type: string
        user_bloods:
          type: integer
        user_owns:
          type: integer
      type: object
    UserProfileBasicIdResponse:
      description: Schema definition for User Profile Basic Id Response
      properties:
        profile:
          $ref: '#/components/schemas/UserProfile'
      title: User Profile Basic Id Response
      type: object
    UserProfileBloodsChallenges:
      properties:
        blood_difference:
          type: string
        category_name:
          type: string
        difficulty_text:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    BloodsChallengesItems:
      items:
        $ref: '#/components/schemas/UserProfileBloodsChallenges'
      type: array
    UserProfileBloodsMachines:
      properties:
        avatar:
          type: string
        difficulty_text:
          type: string
        id:
          type: integer
        name:
          type: string
        os:
          type: string
        root_blood:
          type: boolean
        root_blood_difference:
          type: string
        user_blood:
          type: boolean
        user_blood_difference:
          type: string
      type: object
    BloodsMachinesItems:
      items:
        $ref: '#/components/schemas/UserProfileBloodsMachines'
      type: array
    Bloods:
      properties:
        challenges:
          $ref: '#/components/schemas/BloodsChallengesItems'
        machines:
          $ref: '#/components/schemas/BloodsMachinesItems'
      type: object
    UserProfileBloodsProfile:
      properties:
        bloods:
          $ref: '#/components/schemas/Bloods'
      type: object
    UserProfileBloodsResponse:
      properties:
        profile:
          $ref: '#/components/schemas/UserProfileBloodsProfile'
      type: object
    ProfileChartMachineAttackCard:
      description: Schema definition for Profile Chart Machine Attack Card
      properties:
        avg_user_solved:
          example: 0.403
          type: number
        solved:
          type: integer
        total:
          type: integer
      title: Profile Chart Machine Attack Card
      type: object
    ProfileChartMachineAttackProfileMachineAttackPaths:
      properties:
        Authentication:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Common Applications:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Injections:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Password Cracking:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Password Reuse:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Reconnaissance:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Security Tools:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Software & OS exploitation:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Source Code Analysis:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
        Web Site Structure Discovery:
          $ref: '#/components/schemas/ProfileChartMachineAttackCard'
      type: object
    ProfileChartMachineAttackProfile:
      properties:
        machine_attack_paths:
          $ref: '#/components/schemas/ProfileChartMachineAttackProfileMachineAttackPaths'
        machine_owns:
          $ref: '#/components/schemas/MachineOwnsCard'
      type: object
    ProfileChartMachineAttackIdResponse:
      description: Schema definition for Profile Chart Machine Attack Id Response
      properties:
        profile:
          $ref: '#/components/schemas/ProfileChartMachineAttackProfile'
      title: Profile Chart Machine Attack Id Response
      type: object
    ProfileContentMachinesItem:
      properties:
        difficulty:
          type: string
        id:
          type: integer
        machine_avatar:
          type: string
        name:
          type: string
        os:
          type: string
        rating:
          type: string
        system_owns:
          type: integer
        user_owns:
          type: integer
      type: object
    ProfileContentMachineItems:
      items:
        $ref: '#/components/schemas/ProfileContentMachinesItem'
      type: array
    PorfileContentProfileContent:
      properties:
        challenges:
          items: {}
          type: array
        machines:
          $ref: '#/components/schemas/ProfileContentMachineItems'
        writeups:
          items: {}
          type: array
      type: object
    PorfileContentProfile:
      properties:
        content:
          $ref: '#/components/schemas/PorfileContentProfileContent'
      type: object
    ProfileContentIdResponse:
      description: Schema definition for Profile Content Id Response
      properties:
        profile:
          $ref: '#/components/schemas/PorfileContentProfile'
      title: Profile Content Id Response
      type: object
    ProfileGraphData:
      properties:
        challenge_owns:
          $ref: '#/components/schemas/IntArray'
        first_bloods:
          $ref: '#/components/schemas/IntArray'
        respects:
          $ref: '#/components/schemas/IntArray'
        system_owns:
          $ref: '#/components/schemas/IntArray'
        user_owns:
          $ref: '#/components/schemas/IntArray'
      type: object
    ProfileGraopPeriodProfile:
      properties:
        graphData:
          $ref: '#/components/schemas/ProfileGraphData'
      type: object
    ProfileGraphPeriodIdResponse:
      description: Schema definition for Profile Graph Period Id Response
      properties:
        profile:
          $ref: '#/components/schemas/ProfileGraopPeriodProfile'
      title: Profile Graph Period Id Response
      type: object
    ChallengeCategoriesItems:
      properties:
        avg_user_solved:
          example: 0.403
          type: number
        completion_percentage:
          type: integer
        name:
          type: string
        owned_flags:
          type: integer
        total_flags:
          type: integer
      type: object
    ProfileProgressChallengeItems:
      items:
        $ref: '#/components/schemas/ChallengeCategoriesItems'
      type: array
    ChallengeDifficulties:
      type: object
      properties:
        completion_percentage:
          type: number
        name:
          type: string
        owned_challenges:
          type: number
        total_challenges:
          type: number
    ProfileProgressChallengeOwns:
      properties:
        percentage:
          type: number
        solved:
          type: integer
        total:
          type: integer
      type: object
    ProfileProgressProfile:
      properties:
        challenge_categories:
          $ref: '#/components/schemas/ProfileProgressChallengeItems'
        challenge_difficulties:
          $ref: '#/components/schemas/ChallengeDifficulties'
        challenge_owns:
          $ref: '#/components/schemas/ProfileProgressChallengeOwns'
        solved_tasks:
          type: integer
      type: object
    ProfileProgressChallengesIdRepsonse:
      description: Schema definition for Profile Progress Challenges Id Repsonse
      properties:
        profile:
          $ref: '#/components/schemas/ProfileProgressProfile'
      title: Profile Progress Challenges Id Repsonse
      type: object
    ProfileProgressFortressProfileItem:
      properties:
        avatar:
          type: string
        completion_percentage:
          type: integer
        name:
          type: string
        owned_flags:
          type: integer
        total_flags:
          type: integer
      type: object
    ProfileProgressProfileFortresses:
      items:
        $ref: '#/components/schemas/ProfileProgressFortressProfileItem'
      type: array
    ProfileProgressFortressProfile:
      properties:
        fortresses:
          $ref: '#/components/schemas/ProfileProgressProfileFortresses'
      type: object
    ProfileProgressFortressIdRepsonse:
      description: Schema definition for Profile Progress Fortress Id Repsonse
      properties:
        profile:
          $ref: '#/components/schemas/ProfileProgressFortressProfile'
      title: Profile Progress Fortress Id Repsonse
      type: object
    OperatingSystems:
      properties:
        completion_percentage:
          type: number
        name:
          type: string
        owned_machines:
          type: number
        total_machines:
          type: number
      type: object
    OperatyingSystemsItems:
      items:
        $ref: '#/components/schemas/OperatingSystems'
      type: array
    UserProfileProgressMChinesOsProfile:
      properties:
        operating_systems:
          $ref: '#/components/schemas/OperatyingSystemsItems'
      type: object
    UserProfileProgressMachinesOsResponse:
      properties:
        profile:
          $ref: '#/components/schemas/UserProfileProgressMChinesOsProfile'
      type: object
    ProfileProgressProlabItem:
      properties:
        average_ratings:
          nullable: true
          type: number
        completion_percentage:
          type: integer
        name:
          type: string
        owned_flags:
          type: integer
        total_flags:
          type: integer
        total_machines:
          type: integer
      type: object
    ProfileProgressProlabItems:
      items:
        $ref: '#/components/schemas/ProfileProgressProlabItem'
      type: array
    ProfileProgressProLabProfile:
      properties:
        prolabs:
          $ref: '#/components/schemas/ProfileProgressProlabItems'
      type: object
    ProfileProgressProLabResponse:
      description: Schema definition for Profile Progress Prolab Response
      properties:
        profile:
          $ref: '#/components/schemas/ProfileProgressProLabProfile'
      title: Profile Progress ProLab Response
      type: object
    ChallengeCategories:
      properties:
        avg_user_solved:
          type: number
        completion_percentage:
          type: number
        name:
          type: string
        owned_flags:
          type: number
        total_flags:
          type: number
      type: object
    UserProfileProgressSherlockProfileChallengeCategoriesItems:
      items:
        $ref: '#/components/schemas/ChallengeCategories'
      type: array
    UserProfileProgressSherlockProfileChallengeDifficultiesItems:
      items:
        $ref: '#/components/schemas/ChallengeDifficulties'
      type: array
    UserProfileProgressSherlockProfileChallengeOwns:
      properties:
        percentage:
          type: number
        solved:
          type: number
        total:
          type: number
      type: object
    UserProfileProgressSherlockProfile:
      properties:
        challenge_categories:
          $ref: '#/components/schemas/UserProfileProgressSherlockProfileChallengeCategoriesItems'
        challenge_difficulties:
          $ref: '#/components/schemas/UserProfileProgressSherlockProfileChallengeDifficultiesItems'
        challenge_owns:
          $ref: '#/components/schemas/UserProfileProgressSherlockProfileChallengeOwns'
        solved_tasks:
          type: number
      type: object
    UserProfileProgressSherlocksResponse:
      properties:
        profile:
          $ref: '#/components/schemas/UserProfileProgressSherlockProfile'
      type: object
    Growths:
      properties:
        compared_to_date:
          format: date-time
          type: string
        points:
          type: integer
        points_growth:
          type: number
        previous_points:
          type: integer
        previous_rank:
          type: integer
        rank:
          type: integer
        rank_growth:
          type: number
      type: object
    RankingGraphStats:
      properties:
        chart_data:
          $ref: '#/components/schemas/IntArray'
        points_diff:
          type: integer
        points_growth:
          type: number
        ranks_diff:
          type: integer
      type: object
    ProfileUserTeamInfo:
      properties:
        avatar:
          type: string
        name:
          type: string
        ranking:
          type: integer
      type: object
    ProfileUserTeamWrapper:
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/ProfileUserTeamInfo'
      type: object
    ProfileUserStats:
      properties:
        current_rank_progress:
          type: number
        growths:
          $ref: '#/components/schemas/Growths'
        id:
          type: integer
        name:
          type: string
        next_rank:
          type: string
        next_rank_points:
          type: number
        points:
          type: integer
        rank:
          type: string
        rank_id:
          type: integer
        rank_ownership:
          type: number
        rank_requirement:
          type: integer
        ranking:
          type: integer
        rankingGraphStats:
          $ref: '#/components/schemas/RankingGraphStats'
        respects:
          type: integer
        sso_id:
          type: boolean
        subscription:
          type: string
        system_bloods:
          type: integer
        system_owns:
          type: integer
        team:
          $ref: '#/components/schemas/ProfileUserTeamWrapper'
        university_name:
          nullable: true
          type: string
        user_bloods:
          type: integer
        user_owns:
          type: integer
      type: object
    ProfileIdRepsonse:
      description: Schema definition for Profile Id Repsonse
      properties:
        userStats:
          $ref: '#/components/schemas/ProfileUserStats'
      title: Profile Id Repsonse
      type: object
    UserSettingsResponse:
      description: Schema definition for User Settings Response
      properties:
        email:
          type: string
        hide_machine_tags:
          type: integer
        name_change_delay:
          nullable: true
          type: boolean
        public:
          type: integer
      title: User Settings Response
      type: object
    UserTrackItem:
      properties:
        complete:
          type: integer
        id:
          type: integer
      type: object
    UserTracksResponse:
      description: Schema definition for User Tracks Response
      items:
        $ref: '#/components/schemas/UserTrackItem'
      title: User Tracks Response
      type: array
    SpawnExtendRequest:
      description: Schema definition for Spawn Request
      properties:
        machine_id:
          example: 597
          type: integer
      required:
        - machine_id
      title: Spawn Request
      type: object
    VMExtend:
      description: Schema definition for VM Extend
      properties:
        message:
          description: Return message success
          example: Machine extended.
          type: string
        success:
          type: boolean
        expirationDate:
          type: string
          example: '2024-08-09T11:00:58.000000Z'
          format: date-time
      title: Message
      type: object
  responses:
    AccessOvpnfileVpnId0Response:
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/OpenVpn'
      description: Returns open_vpn file
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    GenericError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      description: Generic Error Response
    AnnouncementResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnnouncementResponse'
      description: Announcement Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MultiOwnResponse:
      content:
        application/json:
          examples:
            invalid_flag:
              summary: Correct flag submission
              value:
                message: changeme
                status: 1
          schema:
            $ref: '#/components/schemas/OwnMachineErrorResponse'
      description: Multi Own Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    Generic400Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Generic400Message'
      description: Generic Error Response
    ArenaOwnErrorResponse:
      content:
        application/json:
          examples:
            invalid_flag:
              summary: Incorrect Flag.
              value:
                message: Incorrect Flag.
          schema:
            $ref: '#/components/schemas/ArenaOwnError'
      description: Multi Own Bad Request
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    BadgesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadgesResponse'
      description: Badges Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerCompaniesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerCompaniesResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerCompanyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerCompanyResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerFeaturedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerFeaturedResponse'
      description: Career Featured Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerHistoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerHistoryResponse'
      description: Career History Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerInfoResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerProfileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerProfileResponse'
      description: Career Profile Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerRequestsResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerSearchResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerSearchResponse'
      description: Career Search Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    CareerStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CareerStatsResponse'
      description: Career Stats Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeActivityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeActivityResponse'
      description: Challenge Activity Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeCategoriesListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesListResponse'
      description: Challenge Categories List Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeChangelogChallengeIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeChangelogIdResponse'
      description: Challenge Changelog Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeDownloadChallengeIdResponse:
      content:
        application/zip:
          example: {}
      description: Challenge Download Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeInfoChallengeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeResponse'
      description: Challenge Info Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    OwnResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OwnResponse'
      description: Successful flag submission
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineOwn400:
      content:
        application/json:
          examples:
            already_owned_root:
              summary: Root is already owned
              value:
                message: RouterSpace root is already owned.
                status: 400
            already_owned_user:
              summary: User is already owned
              value:
                message: RouterSpace user is already owned.
                status: 400
            invalid_flag:
              summary: Incorrect flag submission
              value:
                message: Incorrect flag.
                status: 400
          schema:
            $ref: '#/components/schemas/OwnMachineErrorResponse'
      description: Machine Own Bad Request
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeRecommendedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeRecommendedResponse'
      description: Challenge Recommended Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeRecommendedRetiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeRecommendedRetiredResponse'
      description: Challenge Recommended Retired Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    GenericSuccess2xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Messagesuccess'
      description: Generic Success message
    ChallengeReviewsUserChallengeIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeReviewsUserIdResponse'
      description: Challenge Reviews User Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeStartResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeStartResponse'
      description: Challenge Start Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeStopResponse:
      content:
        application/json:
          example:
            message: Container Stopped
          schema:
            $ref: '#/components/schemas/Messagesuccess'
      description: Challenge Stop Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeSuggestedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeSuggestedResponse'
      description: Challenge Suggested Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeWriteupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeWriteupResponse'
      description: Challenge Writeup Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    GenericPDFResponse:
      content:
        application/pdf: {}
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChallengeListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeListResponse'
      description: Challenge List Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ChangelogsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeLogsResponse'
      description: Changelogs Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ConnectionStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionStatusResponse'
      description: Connection Status Response
    ConnectionStatusProductResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionStatusProductResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ConnectionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionsResponse'
      description: Connections Response
    ConnectionsServersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionsServerResponse'
      description: Connections Servers Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ConnectionsServersProlabResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionsServersProlabResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ConnectionsServersSwitchVpnIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectionServerSwitchResponse'
      description: Connections Servers Switch Vpn Id Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ContentStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContentStatsResponse'
      description: Content Stats Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    FortressFortressIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FortressIdResponse'
      description: Fortress Info Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MultiOwn400:
      content:
        application/json:
          examples:
            invalid_flag:
              summary: Incorrect flag submission
              value:
                message: wrong flag
                status: 0
          schema:
            $ref: '#/components/schemas/OwnMachineErrorResponse'
      description: Multi Own Bad Request
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProductFlagsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductFlagsResponse'
      description: Fortress Flags Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    GameResetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameResetResponse'
      description: Game Reset Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    FortressesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FortressesResponse'
      description: Fortresses Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    HomeBannersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HomeBannerResponse'
      description: Home Banners Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    HomeRecommendedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HomeRecommendedRepsonse'
      description: Home Recommended Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    HomeUserProgressResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HomeUserProgressResponse'
      description: Home User Progress Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    HomeUserTodoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HomeUserTodoRepsonse'
      description: Home User Todo Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    LabListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LabListResponse'
      description: Lab List Response
    MachineActiveResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActiveMachineResponse'
      description: Active Machines Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineActivityMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineActivityIdResponse'
      description: Machine Activity Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineChangelogMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineChangelogIdResponse'
      description: Machine Changelog Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineGraphActivityMachineIdPeriodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineGraphActivityIdResponse'
      description: Machine Activity Graph Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineCreatorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineCreatorResponse'
      description: Machine Activity Graph Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineGraphMatrixMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineGraphMatrixIdResponse'
      description: Machine Matrix Graph Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineGraphOwnsDifficultyMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineGraphOwnsDifficultyIdResponse'
      description: Machine Owns Difficulty Graph Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachinePaginatedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaginatedMachineData'
      description: Machine Paginated Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineOwnsTopMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineOwnsTopIdResponse'
      description: Top Machine Owns Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineProfileMachineResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineProfileResponse'
      description: Machine Profile Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineRecommendedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecommendedMachineResponse'
      description: Recommended Machines Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineRecommendedRetiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineRecommendedRetiredResponse'
      description: Recommended Retired Machines Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineReviewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineReviewResponse'
      description: Machine Review Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineReviewsUserMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineReviewsUserIdResponse'
      description: Machine Reviews User Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineReviewsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineReviewsResponse'
      description: Machine Activity Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineTagsListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineTagsListResponse'
      description: Machine Tags List Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineTagsMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineTagIdResponse'
      description: Machine Tags Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineUnreleasedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineUnreleasedResponse'
      description: Unreleased Machines Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineWalkthroughRandomResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineWalkthroughRandomResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineWalkthroughsLanguageListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineWalkthroughsLanguageListResponse'
      description: Machine Walkthroughs Language List Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineWalkthroughOfficialFeedbackChoicesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineWalkthroughOfficialFeedbackChoicesResponse'
      description: Machine Walkthrough Official Feedback Choices Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineWalkthroughsMachineIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineWalkthroughIdResponse'
      description: Machine Walkthroughs Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineWriteupMachineIdResponse:
      content:
        application/pdf:
          schema:
            format: binary
            type: string
      description: Machine Writeup Response
    MachinesAdventureResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachinesAdventureResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    MachineTasksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineTasksResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    NavigationMainResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NavigationMainResponse'
      description: Navigation Main Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    NoticesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NoticesResponse'
      description: Notices Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProlabfaqResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabIdFaqResponse'
      description: Prolab FAQ Response
    ProlabinfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabIdInfoResponse'
      description: Prolab Info Response
    ProlabmachinesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabIdMachineResponse'
      description: Prolab Machines Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProlaboverviewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabIdOverviewResponse'
      description: Prolab Overview Response
    ProlabProgressResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabProgressResponse'
      description: OK
    ProlabRatingResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabRatingResponse'
      description: OK
    ProlabreviewsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabIdReviewsResponse'
      description: Prolab Reviews Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProlabreviewsOverviewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabIdReviewsOverviewResponse'
      description: Description
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProlabSubscriptionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabSubscriptionResponse'
      description: OK
    ProlabsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProlabsResponse'
      description: Prolabs response
    PwnboxStartResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PwnboxStartResponse'
      description: Pwnbox Start Response
    PwnboxStatusResponse:
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/PwnboxStatusNotRunningResponse'
              - $ref: '#/components/schemas/PwnboxStatusRunningResponse'
      description: Pwnbox Status Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    PwnboxTerminate204:
      description: No Content
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    PwnboxUsageResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PwnboxUsageResponse'
      description: Pwnbox Usage Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsCountriesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsCountries'
      description: Rankings Countries Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsCountryBestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsCountryBest'
      description: Rankings Country Best Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsCountryOverviewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsCountryOverviewResponse'
      description: Rankings Country Overview Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsCountryRankingBracketResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsCountrRankingBracketResponse'
      description: Rankings Country Bracket Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsCountryMembersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsCountryMembersResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsTeamBestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsTeamBestResponse'
      description: Rankings Team Best Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsTeamOverviewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsTeamOverviewResponse'
      description: Rankings Team Overview Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsTeamRankingBracketResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsTeamRankingBracketResponse'
      description: Rankings Team Bracket Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsTeamsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsTeamResponse'
      description: Rankings Teams Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsUniversitiesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsUniversitiesResponse'
      description: Rankings Universities Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsUniversityRankingBracketByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsUniversityRankingBracketByIdResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsUserBestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsUserBestResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsUserOverviewResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsUserOverviewResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsUserRankingBracketResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsUserRankingBracketResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    RankingsUsersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RankingsUsersResponse'
      description: Rankings Users Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ReviewProductResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReviewsResponse'
      description: Review Sherlock Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ReviewProductPaginatedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReviewPaginatedResponse'
      description: Review Sherlock Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SearchFetchResponse:
      content:
        text/html:
          schema:
            $ref: '#/components/schemas/SearchFetchResponse'
      description: Search results
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonEndResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonEndResponse'
      description: Season List Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonListResponse'
      description: Season List Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonMachineActiveResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonActive'
      description: Season Machine Active Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonMachinesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonMachines'
      description: Season Machines Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonMachinesCompletedSeasonIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonCompletedMachine'
      description: Season Machines Completed Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonRewardsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonRewardsResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonUserFollowersSeasonIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonUserFollowers'
      description: Season User Followers Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonUserRankSeasonIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonUserRank'
      description: Season User Rank Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonPlayersLeaderboardResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonPlayersLeaderboardResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SeasonPlatersLeaderboardTopResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonPlayersLeaderboardTopResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockItemList'
      description: Sherlocks Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksCategoriesListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesListResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksDownloadLinkResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockDownloadLink'
      description: Sherlocks Download Link Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockId404:
      content:
        application/json:
          example:
            message: No results for this sherlock
      description: Not Found
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockInfo'
      description: Sherlock Info Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdPlayResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockPlayResponse'
      description: Sherlock Play Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdProgressResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockProgress'
      description: Sherlock Progress Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdTasksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockTasksList'
      description: Sherlock Tasks Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdTasksTaskIdFlag201:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskFlagResponse'
      description: Sherlock Tasks Task Id Flag Created Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdTasksTaskIdFlag400:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
      description: Sherlock Tasks Task Id Flag Bad Request
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdWriteupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockWriteup'
      description: Sherlock Writeup Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksSherlockIdWriteupOfficialResponse:
      content:
        application/pdf:
          schema:
            format: binary
            type: string
      description: Sherlock Official Writeup Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SherlocksNameResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SherlockNamedItem'
      description: Sherlocks Name Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SidebarAnnouncementResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SidebarAnnouncementResponse'
      description: Sidebar Announcement Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SidebarChangelogResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SidebarChangeLogResponse'
      description: Sidebar Changelog Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SpProfileStartingPointIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpProfileIdResponse'
      description: Sp Profile Starting Point Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SpTaskFlagResponse:
      description: Sp Task Flag Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SpTierResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpTierResponse'
      description: Sp Tier Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    SpTiersProgressResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpTiersProgressResponse'
      description: Sp Tiers Progress Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamActivityTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamActivityIdResponse'
      description: Team Activity Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamChartChallengeTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeCategoriesDetails'
      description: Team Challenge Chart Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamChartMachinesAttackTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineAttackDetails'
      description: Team Machines Attack Chart Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamGraphTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamGraphIdResponse'
      description: Team Graph Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamInfoTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamInfoIdResponse'
      description: Team Info Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamInvitationsTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamInvitationsIdResponse'
      description: Team Invitations Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamMembersTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamMembersIdResponse'
      description: Team Members Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TeamStatsOwnsTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OwnStats'
      description: Team Owns Stats Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TracksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TracksResponse'
      description: Tracks Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TracksEnrollResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TracksEnrollResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TracksLikeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TracksLikeResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TracksIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TracksIdResponse'
      description: Tracks Id Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityActivityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversityActivityResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityAllListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversityAllListResponse'
      description: University List Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityChartChallengeCategoriesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversityChartChallengeCategoriesResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityChartMachinesAttackResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversityChartMachinesAttackResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityCountryListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversityCountryListResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityMembersTeamIdResponse:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/UniversityMembersResponse'
            type: array
      description: University Members Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityNewListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversityNewListResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityProfileTeamIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamInformationProfileResponse'
      description: University Profile Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityStatsOwnsUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OwnStats'
      description: University Owns Stats Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UniversityTopListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversityTopListResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserAchievementTarTypeUserIdTarIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAchievementTarTypeUserIdTarIdResponse'
      description: User Achievement Target Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserAnonymizedIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAnonymizedIdResponse'
      description: User Anonymized ID Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserApptokenCreateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserApptokenCreateResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserApptokenListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserApptokenListResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserBannedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserBannedResponse'
      description: User Submissions Challenges Response
    UserConnectionStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserConnectionStatusResponse'
      description: User Connection Status Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserDashboardResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDashboardResponse'
      description: User Dashboard Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserDashboardTabloidResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDashboardTabloidResponse'
      description: User Dashboard Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserFollowersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateResponse'
      description: User Followers Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserInfoResponse'
      description: User Info Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileActivityUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserActivity'
      description: Profile Activity User Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileBadgesUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileBadgesIdRepsonse'
      description: Profile Badges User Response
    UserProfileBasicUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfileBasicIdResponse'
      description: User Profile Basic Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileBloodsUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfileBloodsResponse'
      description: Profile Bloods User Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileChartMachinesAttackUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileChartMachineAttackIdResponse'
      description: Profile Chart Machines Attack Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileContentUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileContentIdResponse'
      description: Profile Content User Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileGraphPeriodUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileGraphPeriodIdResponse'
      description: Profile Graph Period Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileProgressChallengesUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileProgressChallengesIdRepsonse'
      description: Profile Progress Challenges Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileProgressFortressUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileProgressFortressIdRepsonse'
      description: Profile Progress Fortress Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserProfileProgressMachinesOsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfileProgressMachinesOsResponse'
      description: OK
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    ProfileProgressProlabUserIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileProgressProLabResponse'
      description: Profile Progress Prolab Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserProfileProgressSherlocksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfileProgressSherlocksResponse'
      description: OK
    UserProfileSummaryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProfileIdRepsonse'
      description: User Profile Summary Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserSettingsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSettingsResponse'
      description: User Settings Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    UserTracksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserTracksResponse'
      description: User Tracks Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    VMExtendResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VMExtend'
      description: Vm Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    VMResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Messagesuccess'
      description: Vm Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    VmReset400:
      content:
        application/json:
          examples:
            already_voted:
              summary: user_ already voted
              value:
                message: Faculty was not reset. user_ has already voted for resetting a machine.
            voted_too_many_times:
              summary: Voted too many times
              value:
                message: Too many reset machine attempts. Try again later!
      description: Vm Reset Bad Request
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    GenericError5xx:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      description: Internal Server Error
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
    TodoUpdateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateResponse'
      description: Todo Update Response
      headers:
        x-ratelimit-limit:
          $ref: '#/components/headers/XRateLimitHeader'
        x-ratelimit-remaining:
          $ref: '#/components/headers/XRateLimitRemainingHeader'
  requestBodies:
    ArenaOwnRequest:
      content:
        application/json:
          schema:
            properties:
              flag:
                type: string
              id:
                type: integer
            required:
              - flag
              - id
            type: object
        application/x-www-form-urlencoded:
          schema:
            properties:
              flag:
                type: string
              id:
                type: integer
            required:
              - flag
              - id
            type: object
      description: Body to post prolab/fortress
      required: true
    ChallengeOwnRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChallengeOwnRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ChallengeOwnRequest'
      description: Body to post machine flag
      required: true
    ChallengeReviewRequest:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              headline:
                type: string
              id:
                type: integer
              review:
                type: string
              stars:
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                type: integer
            required:
              - id
              - review
              - headline
            type: object
      description: Body to post challenge review
    ChallengeStartStopRequest:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              challenge_id:
                type: integer
            required:
              - challenge_id
            type: object
      description: use challenge_id
      required: true
    MultiOwnRequest:
      content:
        application/json:
          schema:
            properties:
              flag:
                type: string
            required:
              - flag
            type: object
        application/x-www-form-urlencoded:
          schema:
            properties:
              flag:
                type: string
            required:
              - flag
            type: object
      description: Body to post prolab/fortress
      required: true
    OwnRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OwnRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/OwnRequest'
      description: Body to post machine flag
      required: true
    MachineReviewRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineReviewRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MachineReviewRequest'
      description: Body to post machine review
      required: true
    PwnboxStartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PwnboxRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/PwnboxRequest'
      description: Body to post start of pwnbox
    SherlocksTasksFlagRequest:
      content:
        application/json:
          schema:
            properties:
              flag:
                example: 3x4mp1e_fl4g
                type: string
            type: object
        application/x-www-form-urlencoded:
          schema:
            properties:
              flag:
                example: 3x4mp1e_fl4g
                type: string
            type: object
      description: Body to post sherlock flag
      required: true
    VirtualMachineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpawnExtendRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/SpawnExtendRequest'
      description: Body to post spawn or reset vm
      required: true
